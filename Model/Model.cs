#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.42000
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace Model
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	public partial class HJGLDB : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region 可扩展性方法定义
    partial void OnCreated();
    partial void InsertBase_Installation(Base_Installation instance);
    partial void UpdateBase_Installation(Base_Installation instance);
    partial void DeleteBase_Installation(Base_Installation instance);
    partial void InsertBase_Project(Base_Project instance);
    partial void UpdateBase_Project(Base_Project instance);
    partial void DeleteBase_Project(Base_Project instance);
    partial void InsertBase_Unit(Base_Unit instance);
    partial void UpdateBase_Unit(Base_Unit instance);
    partial void DeleteBase_Unit(Base_Unit instance);
    partial void InsertBase_WorkArea(Base_WorkArea instance);
    partial void UpdateBase_WorkArea(Base_WorkArea instance);
    partial void DeleteBase_WorkArea(Base_WorkArea instance);
    partial void InsertBO_Device(BO_Device instance);
    partial void UpdateBO_Device(BO_Device instance);
    partial void DeleteBO_Device(BO_Device instance);
    partial void InsertBO_NDTTrust(BO_NDTTrust instance);
    partial void UpdateBO_NDTTrust(BO_NDTTrust instance);
    partial void DeleteBO_NDTTrust(BO_NDTTrust instance);
    partial void InsertBO_NDTTrustItem(BO_NDTTrustItem instance);
    partial void UpdateBO_NDTTrustItem(BO_NDTTrustItem instance);
    partial void DeleteBO_NDTTrustItem(BO_NDTTrustItem instance);
    partial void InsertBO_Point(BO_Point instance);
    partial void UpdateBO_Point(BO_Point instance);
    partial void DeleteBO_Point(BO_Point instance);
    partial void InsertBO_WeldReportMain(BO_WeldReportMain instance);
    partial void UpdateBO_WeldReportMain(BO_WeldReportMain instance);
    partial void DeleteBO_WeldReportMain(BO_WeldReportMain instance);
    partial void InsertBS_Component(BS_Component instance);
    partial void UpdateBS_Component(BS_Component instance);
    partial void DeleteBS_Component(BS_Component instance);
    partial void InsertBS_IsoClass(BS_IsoClass instance);
    partial void UpdateBS_IsoClass(BS_IsoClass instance);
    partial void DeleteBS_IsoClass(BS_IsoClass instance);
    partial void InsertBS_JointType(BS_JointType instance);
    partial void UpdateBS_JointType(BS_JointType instance);
    partial void DeleteBS_JointType(BS_JointType instance);
    partial void InsertBS_NDTRate(BS_NDTRate instance);
    partial void UpdateBS_NDTRate(BS_NDTRate instance);
    partial void DeleteBS_NDTRate(BS_NDTRate instance);
    partial void InsertBS_NDTType(BS_NDTType instance);
    partial void UpdateBS_NDTType(BS_NDTType instance);
    partial void DeleteBS_NDTType(BS_NDTType instance);
    partial void InsertBS_PackageTestType(BS_PackageTestType instance);
    partial void UpdateBS_PackageTestType(BS_PackageTestType instance);
    partial void DeleteBS_PackageTestType(BS_PackageTestType instance);
    partial void InsertBS_SchTab(BS_SchTab instance);
    partial void UpdateBS_SchTab(BS_SchTab instance);
    partial void DeleteBS_SchTab(BS_SchTab instance);
    partial void InsertBS_Service(BS_Service instance);
    partial void UpdateBS_Service(BS_Service instance);
    partial void DeleteBS_Service(BS_Service instance);
    partial void InsertBS_SlopeType(BS_SlopeType instance);
    partial void UpdateBS_SlopeType(BS_SlopeType instance);
    partial void DeleteBS_SlopeType(BS_SlopeType instance);
    partial void InsertBS_Steel(BS_Steel instance);
    partial void UpdateBS_Steel(BS_Steel instance);
    partial void DeleteBS_Steel(BS_Steel instance);
    partial void InsertBS_Welder(BS_Welder instance);
    partial void UpdateBS_Welder(BS_Welder instance);
    partial void DeleteBS_Welder(BS_Welder instance);
    partial void InsertBS_WelderItem(BS_WelderItem instance);
    partial void UpdateBS_WelderItem(BS_WelderItem instance);
    partial void DeleteBS_WelderItem(BS_WelderItem instance);
    partial void InsertBS_WelderScore(BS_WelderScore instance);
    partial void UpdateBS_WelderScore(BS_WelderScore instance);
    partial void DeleteBS_WelderScore(BS_WelderScore instance);
    partial void InsertBS_WeldLocation(BS_WeldLocation instance);
    partial void UpdateBS_WeldLocation(BS_WeldLocation instance);
    partial void DeleteBS_WeldLocation(BS_WeldLocation instance);
    partial void InsertBS_WeldMaterial(BS_WeldMaterial instance);
    partial void UpdateBS_WeldMaterial(BS_WeldMaterial instance);
    partial void DeleteBS_WeldMaterial(BS_WeldMaterial instance);
    partial void InsertBS_WeldMethod(BS_WeldMethod instance);
    partial void UpdateBS_WeldMethod(BS_WeldMethod instance);
    partial void DeleteBS_WeldMethod(BS_WeldMethod instance);
    partial void InsertBS_WeldMethodItem(BS_WeldMethodItem instance);
    partial void UpdateBS_WeldMethodItem(BS_WeldMethodItem instance);
    partial void DeleteBS_WeldMethodItem(BS_WeldMethodItem instance);
    partial void InsertButtonToMenu(ButtonToMenu instance);
    partial void UpdateButtonToMenu(ButtonToMenu instance);
    partial void DeleteButtonToMenu(ButtonToMenu instance);
    partial void InsertCH_Check(CH_Check instance);
    partial void UpdateCH_Check(CH_Check instance);
    partial void DeleteCH_Check(CH_Check instance);
    partial void InsertCH_CheckItem(CH_CheckItem instance);
    partial void UpdateCH_CheckItem(CH_CheckItem instance);
    partial void DeleteCH_CheckItem(CH_CheckItem instance);
    partial void InsertCH_Repair(CH_Repair instance);
    partial void UpdateCH_Repair(CH_Repair instance);
    partial void DeleteCH_Repair(CH_Repair instance);
    partial void InsertCH_Trust(CH_Trust instance);
    partial void UpdateCH_Trust(CH_Trust instance);
    partial void DeleteCH_Trust(CH_Trust instance);
    partial void InsertCH_TrustItem(CH_TrustItem instance);
    partial void UpdateCH_TrustItem(CH_TrustItem instance);
    partial void DeleteCH_TrustItem(CH_TrustItem instance);
    partial void InsertDt_document(Dt_document instance);
    partial void UpdateDt_document(Dt_document instance);
    partial void DeleteDt_document(Dt_document instance);
    partial void InsertElectrodeBake(ElectrodeBake instance);
    partial void UpdateElectrodeBake(ElectrodeBake instance);
    partial void DeleteElectrodeBake(ElectrodeBake instance);
    partial void InsertElectrodeBakeItem(ElectrodeBakeItem instance);
    partial void UpdateElectrodeBakeItem(ElectrodeBakeItem instance);
    partial void DeleteElectrodeBakeItem(ElectrodeBakeItem instance);
    partial void InsertElectrodeRecovery(ElectrodeRecovery instance);
    partial void UpdateElectrodeRecovery(ElectrodeRecovery instance);
    partial void DeleteElectrodeRecovery(ElectrodeRecovery instance);
    partial void InsertElectrodeRecoveryItem(ElectrodeRecoveryItem instance);
    partial void UpdateElectrodeRecoveryItem(ElectrodeRecoveryItem instance);
    partial void DeleteElectrodeRecoveryItem(ElectrodeRecoveryItem instance);
    partial void InsertEMaterialRegist(EMaterialRegist instance);
    partial void UpdateEMaterialRegist(EMaterialRegist instance);
    partial void DeleteEMaterialRegist(EMaterialRegist instance);
    partial void InsertEMaterialRegistItem(EMaterialRegistItem instance);
    partial void UpdateEMaterialRegistItem(EMaterialRegistItem instance);
    partial void DeleteEMaterialRegistItem(EMaterialRegistItem instance);
    partial void InsertEMInventoryRecords(EMInventoryRecords instance);
    partial void UpdateEMInventoryRecords(EMInventoryRecords instance);
    partial void DeleteEMInventoryRecords(EMInventoryRecords instance);
    partial void InsertEWeldRHRecord(EWeldRHRecord instance);
    partial void UpdateEWeldRHRecord(EWeldRHRecord instance);
    partial void DeleteEWeldRHRecord(EWeldRHRecord instance);
    partial void InsertEWeldRHRecordItem(EWeldRHRecordItem instance);
    partial void UpdateEWeldRHRecordItem(EWeldRHRecordItem instance);
    partial void DeleteEWeldRHRecordItem(EWeldRHRecordItem instance);
    partial void InsertHotHard(HotHard instance);
    partial void UpdateHotHard(HotHard instance);
    partial void DeleteHotHard(HotHard instance);
    partial void InsertHotHardItem(HotHardItem instance);
    partial void UpdateHotHardItem(HotHardItem instance);
    partial void DeleteHotHardItem(HotHardItem instance);
    partial void InsertHotProess(HotProess instance);
    partial void UpdateHotProess(HotProess instance);
    partial void DeleteHotProess(HotProess instance);
    partial void InsertHotProessItem(HotProessItem instance);
    partial void UpdateHotProessItem(HotProessItem instance);
    partial void DeleteHotProessItem(HotProessItem instance);
    partial void InsertHS_Education(HS_Education instance);
    partial void UpdateHS_Education(HS_Education instance);
    partial void DeleteHS_Education(HS_Education instance);
    partial void InsertPW_CheckResult(PW_CheckResult instance);
    partial void UpdatePW_CheckResult(PW_CheckResult instance);
    partial void DeletePW_CheckResult(PW_CheckResult instance);
    partial void InsertPW_IsoInfo(PW_IsoInfo instance);
    partial void UpdatePW_IsoInfo(PW_IsoInfo instance);
    partial void DeletePW_IsoInfo(PW_IsoInfo instance);
    partial void InsertPW_JointChange(PW_JointChange instance);
    partial void UpdatePW_JointChange(PW_JointChange instance);
    partial void DeletePW_JointChange(PW_JointChange instance);
    partial void InsertPW_JointInfo(PW_JointInfo instance);
    partial void UpdatePW_JointInfo(PW_JointInfo instance);
    partial void DeletePW_JointInfo(PW_JointInfo instance);
    partial void InsertPW_ProcedureImageManage(PW_ProcedureImageManage instance);
    partial void UpdatePW_ProcedureImageManage(PW_ProcedureImageManage instance);
    partial void DeletePW_ProcedureImageManage(PW_ProcedureImageManage instance);
    partial void InsertPW_WeldingProcedure(PW_WeldingProcedure instance);
    partial void UpdatePW_WeldingProcedure(PW_WeldingProcedure instance);
    partial void DeletePW_WeldingProcedure(PW_WeldingProcedure instance);
    partial void InsertPW_WeldingProcedureJOT(PW_WeldingProcedureJOT instance);
    partial void UpdatePW_WeldingProcedureJOT(PW_WeldingProcedureJOT instance);
    partial void DeletePW_WeldingProcedureJOT(PW_WeldingProcedureJOT instance);
    partial void InsertReportServer(ReportServer instance);
    partial void UpdateReportServer(ReportServer instance);
    partial void DeleteReportServer(ReportServer instance);
    partial void InsertSys_ButtonPower(Sys_ButtonPower instance);
    partial void UpdateSys_ButtonPower(Sys_ButtonPower instance);
    partial void DeleteSys_ButtonPower(Sys_ButtonPower instance);
    partial void InsertSys_DataInTemp(Sys_DataInTemp instance);
    partial void UpdateSys_DataInTemp(Sys_DataInTemp instance);
    partial void DeleteSys_DataInTemp(Sys_DataInTemp instance);
    partial void InsertSys_ErrLogInfo(Sys_ErrLogInfo instance);
    partial void UpdateSys_ErrLogInfo(Sys_ErrLogInfo instance);
    partial void DeleteSys_ErrLogInfo(Sys_ErrLogInfo instance);
    partial void InsertSys_Log(Sys_Log instance);
    partial void UpdateSys_Log(Sys_Log instance);
    partial void DeleteSys_Log(Sys_Log instance);
    partial void InsertSys_Menu(Sys_Menu instance);
    partial void UpdateSys_Menu(Sys_Menu instance);
    partial void DeleteSys_Menu(Sys_Menu instance);
    partial void InsertSys_Role(Sys_Role instance);
    partial void UpdateSys_Role(Sys_Role instance);
    partial void DeleteSys_Role(Sys_Role instance);
    partial void InsertSys_RolePower(Sys_RolePower instance);
    partial void UpdateSys_RolePower(Sys_RolePower instance);
    partial void DeleteSys_RolePower(Sys_RolePower instance);
    partial void InsertSys_Set(Sys_Set instance);
    partial void UpdateSys_Set(Sys_Set instance);
    partial void DeleteSys_Set(Sys_Set instance);
    partial void InsertSys_User(Sys_User instance);
    partial void UpdateSys_User(Sys_User instance);
    partial void DeleteSys_User(Sys_User instance);
    partial void InsertSys_UserShowColumns(Sys_UserShowColumns instance);
    partial void UpdateSys_UserShowColumns(Sys_UserShowColumns instance);
    partial void DeleteSys_UserShowColumns(Sys_UserShowColumns instance);
    partial void InsertTP_AItemEndCheck(TP_AItemEndCheck instance);
    partial void UpdateTP_AItemEndCheck(TP_AItemEndCheck instance);
    partial void DeleteTP_AItemEndCheck(TP_AItemEndCheck instance);
    partial void InsertTP_BItemEndCheck(TP_BItemEndCheck instance);
    partial void UpdateTP_BItemEndCheck(TP_BItemEndCheck instance);
    partial void DeleteTP_BItemEndCheck(TP_BItemEndCheck instance);
    partial void InsertTP_IsoList(TP_IsoList instance);
    partial void UpdateTP_IsoList(TP_IsoList instance);
    partial void DeleteTP_IsoList(TP_IsoList instance);
    partial void InsertTP_TestPackage(TP_TestPackage instance);
    partial void UpdateTP_TestPackage(TP_TestPackage instance);
    partial void DeleteTP_TestPackage(TP_TestPackage instance);
    #endregion
		
		public HJGLDB(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public HJGLDB(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public HJGLDB(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public HJGLDB(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Base_Installation> Base_Installation
		{
			get
			{
				return this.GetTable<Base_Installation>();
			}
		}
		
		public System.Data.Linq.Table<Base_Project> Base_Project
		{
			get
			{
				return this.GetTable<Base_Project>();
			}
		}
		
		public System.Data.Linq.Table<Base_Unit> Base_Unit
		{
			get
			{
				return this.GetTable<Base_Unit>();
			}
		}
		
		public System.Data.Linq.Table<Base_WorkArea> Base_WorkArea
		{
			get
			{
				return this.GetTable<Base_WorkArea>();
			}
		}
		
		public System.Data.Linq.Table<BO_Device> BO_Device
		{
			get
			{
				return this.GetTable<BO_Device>();
			}
		}
		
		public System.Data.Linq.Table<BO_NDTTrust> BO_NDTTrust
		{
			get
			{
				return this.GetTable<BO_NDTTrust>();
			}
		}
		
		public System.Data.Linq.Table<BO_NDTTrustItem> BO_NDTTrustItem
		{
			get
			{
				return this.GetTable<BO_NDTTrustItem>();
			}
		}
		
		public System.Data.Linq.Table<BO_Point> BO_Point
		{
			get
			{
				return this.GetTable<BO_Point>();
			}
		}
		
		public System.Data.Linq.Table<BO_WeldReportMain> BO_WeldReportMain
		{
			get
			{
				return this.GetTable<BO_WeldReportMain>();
			}
		}
		
		public System.Data.Linq.Table<BS_Component> BS_Component
		{
			get
			{
				return this.GetTable<BS_Component>();
			}
		}
		
		public System.Data.Linq.Table<BS_IsoClass> BS_IsoClass
		{
			get
			{
				return this.GetTable<BS_IsoClass>();
			}
		}
		
		public System.Data.Linq.Table<BS_JointType> BS_JointType
		{
			get
			{
				return this.GetTable<BS_JointType>();
			}
		}
		
		public System.Data.Linq.Table<BS_NDTRate> BS_NDTRate
		{
			get
			{
				return this.GetTable<BS_NDTRate>();
			}
		}
		
		public System.Data.Linq.Table<BS_NDTType> BS_NDTType
		{
			get
			{
				return this.GetTable<BS_NDTType>();
			}
		}
		
		public System.Data.Linq.Table<BS_PackageTestType> BS_PackageTestType
		{
			get
			{
				return this.GetTable<BS_PackageTestType>();
			}
		}
		
		public System.Data.Linq.Table<BS_SchTab> BS_SchTab
		{
			get
			{
				return this.GetTable<BS_SchTab>();
			}
		}
		
		public System.Data.Linq.Table<BS_Service> BS_Service
		{
			get
			{
				return this.GetTable<BS_Service>();
			}
		}
		
		public System.Data.Linq.Table<BS_SlopeType> BS_SlopeType
		{
			get
			{
				return this.GetTable<BS_SlopeType>();
			}
		}
		
		public System.Data.Linq.Table<BS_Steel> BS_Steel
		{
			get
			{
				return this.GetTable<BS_Steel>();
			}
		}
		
		public System.Data.Linq.Table<BS_Welder> BS_Welder
		{
			get
			{
				return this.GetTable<BS_Welder>();
			}
		}
		
		public System.Data.Linq.Table<BS_WelderItem> BS_WelderItem
		{
			get
			{
				return this.GetTable<BS_WelderItem>();
			}
		}
		
		public System.Data.Linq.Table<BS_WelderScore> BS_WelderScore
		{
			get
			{
				return this.GetTable<BS_WelderScore>();
			}
		}
		
		public System.Data.Linq.Table<BS_WeldLocation> BS_WeldLocation
		{
			get
			{
				return this.GetTable<BS_WeldLocation>();
			}
		}
		
		public System.Data.Linq.Table<BS_WeldMaterial> BS_WeldMaterial
		{
			get
			{
				return this.GetTable<BS_WeldMaterial>();
			}
		}
		
		public System.Data.Linq.Table<BS_WeldMethod> BS_WeldMethod
		{
			get
			{
				return this.GetTable<BS_WeldMethod>();
			}
		}
		
		public System.Data.Linq.Table<BS_WeldMethodItem> BS_WeldMethodItem
		{
			get
			{
				return this.GetTable<BS_WeldMethodItem>();
			}
		}
		
		public System.Data.Linq.Table<ButtonToMenu> ButtonToMenu
		{
			get
			{
				return this.GetTable<ButtonToMenu>();
			}
		}
		
		public System.Data.Linq.Table<CH_Check> CH_Check
		{
			get
			{
				return this.GetTable<CH_Check>();
			}
		}
		
		public System.Data.Linq.Table<CH_CheckItem> CH_CheckItem
		{
			get
			{
				return this.GetTable<CH_CheckItem>();
			}
		}
		
		public System.Data.Linq.Table<CH_Repair> CH_Repair
		{
			get
			{
				return this.GetTable<CH_Repair>();
			}
		}
		
		public System.Data.Linq.Table<CH_Trust> CH_Trust
		{
			get
			{
				return this.GetTable<CH_Trust>();
			}
		}
		
		public System.Data.Linq.Table<CH_TrustItem> CH_TrustItem
		{
			get
			{
				return this.GetTable<CH_TrustItem>();
			}
		}
		
		public System.Data.Linq.Table<Dt_document> Dt_document
		{
			get
			{
				return this.GetTable<Dt_document>();
			}
		}
		
		public System.Data.Linq.Table<ElectrodeBake> ElectrodeBake
		{
			get
			{
				return this.GetTable<ElectrodeBake>();
			}
		}
		
		public System.Data.Linq.Table<ElectrodeBakeItem> ElectrodeBakeItem
		{
			get
			{
				return this.GetTable<ElectrodeBakeItem>();
			}
		}
		
		public System.Data.Linq.Table<ElectrodeRecovery> ElectrodeRecovery
		{
			get
			{
				return this.GetTable<ElectrodeRecovery>();
			}
		}
		
		public System.Data.Linq.Table<ElectrodeRecoveryItem> ElectrodeRecoveryItem
		{
			get
			{
				return this.GetTable<ElectrodeRecoveryItem>();
			}
		}
		
		public System.Data.Linq.Table<EMaterialRegist> EMaterialRegist
		{
			get
			{
				return this.GetTable<EMaterialRegist>();
			}
		}
		
		public System.Data.Linq.Table<EMaterialRegistItem> EMaterialRegistItem
		{
			get
			{
				return this.GetTable<EMaterialRegistItem>();
			}
		}
		
		public System.Data.Linq.Table<EMInventoryRecords> EMInventoryRecords
		{
			get
			{
				return this.GetTable<EMInventoryRecords>();
			}
		}
		
		public System.Data.Linq.Table<EWeldRHRecord> EWeldRHRecord
		{
			get
			{
				return this.GetTable<EWeldRHRecord>();
			}
		}
		
		public System.Data.Linq.Table<EWeldRHRecordItem> EWeldRHRecordItem
		{
			get
			{
				return this.GetTable<EWeldRHRecordItem>();
			}
		}
		
		public System.Data.Linq.Table<HotHard> HotHard
		{
			get
			{
				return this.GetTable<HotHard>();
			}
		}
		
		public System.Data.Linq.Table<HotHardItem> HotHardItem
		{
			get
			{
				return this.GetTable<HotHardItem>();
			}
		}
		
		public System.Data.Linq.Table<HotProess> HotProess
		{
			get
			{
				return this.GetTable<HotProess>();
			}
		}
		
		public System.Data.Linq.Table<HotProessItem> HotProessItem
		{
			get
			{
				return this.GetTable<HotProessItem>();
			}
		}
		
		public System.Data.Linq.Table<HS_Education> HS_Education
		{
			get
			{
				return this.GetTable<HS_Education>();
			}
		}
		
		public System.Data.Linq.Table<PW_CheckResult> PW_CheckResult
		{
			get
			{
				return this.GetTable<PW_CheckResult>();
			}
		}
		
		public System.Data.Linq.Table<PW_IsoInfo> PW_IsoInfo
		{
			get
			{
				return this.GetTable<PW_IsoInfo>();
			}
		}
		
		public System.Data.Linq.Table<PW_JointChange> PW_JointChange
		{
			get
			{
				return this.GetTable<PW_JointChange>();
			}
		}
		
		public System.Data.Linq.Table<PW_JointInfo> PW_JointInfo
		{
			get
			{
				return this.GetTable<PW_JointInfo>();
			}
		}
		
		public System.Data.Linq.Table<PW_ProcedureImageManage> PW_ProcedureImageManage
		{
			get
			{
				return this.GetTable<PW_ProcedureImageManage>();
			}
		}
		
		public System.Data.Linq.Table<PW_WeldingProcedure> PW_WeldingProcedure
		{
			get
			{
				return this.GetTable<PW_WeldingProcedure>();
			}
		}
		
		public System.Data.Linq.Table<PW_WeldingProcedureJOT> PW_WeldingProcedureJOT
		{
			get
			{
				return this.GetTable<PW_WeldingProcedureJOT>();
			}
		}
		
		public System.Data.Linq.Table<ReportServer> ReportServer
		{
			get
			{
				return this.GetTable<ReportServer>();
			}
		}
		
		public System.Data.Linq.Table<Sys_ButtonPower> Sys_ButtonPower
		{
			get
			{
				return this.GetTable<Sys_ButtonPower>();
			}
		}
		
		public System.Data.Linq.Table<Sys_DataInTemp> Sys_DataInTemp
		{
			get
			{
				return this.GetTable<Sys_DataInTemp>();
			}
		}
		
		public System.Data.Linq.Table<Sys_ErrLogInfo> Sys_ErrLogInfo
		{
			get
			{
				return this.GetTable<Sys_ErrLogInfo>();
			}
		}
		
		public System.Data.Linq.Table<Sys_Log> Sys_Log
		{
			get
			{
				return this.GetTable<Sys_Log>();
			}
		}
		
		public System.Data.Linq.Table<Sys_Menu> Sys_Menu
		{
			get
			{
				return this.GetTable<Sys_Menu>();
			}
		}
		
		public System.Data.Linq.Table<Sys_Role> Sys_Role
		{
			get
			{
				return this.GetTable<Sys_Role>();
			}
		}
		
		public System.Data.Linq.Table<Sys_RolePower> Sys_RolePower
		{
			get
			{
				return this.GetTable<Sys_RolePower>();
			}
		}
		
		public System.Data.Linq.Table<Sys_Set> Sys_Set
		{
			get
			{
				return this.GetTable<Sys_Set>();
			}
		}
		
		public System.Data.Linq.Table<Sys_User> Sys_User
		{
			get
			{
				return this.GetTable<Sys_User>();
			}
		}
		
		public System.Data.Linq.Table<Sys_UserShowColumns> Sys_UserShowColumns
		{
			get
			{
				return this.GetTable<Sys_UserShowColumns>();
			}
		}
		
		public System.Data.Linq.Table<TP_AItemEndCheck> TP_AItemEndCheck
		{
			get
			{
				return this.GetTable<TP_AItemEndCheck>();
			}
		}
		
		public System.Data.Linq.Table<TP_BItemEndCheck> TP_BItemEndCheck
		{
			get
			{
				return this.GetTable<TP_BItemEndCheck>();
			}
		}
		
		public System.Data.Linq.Table<TP_IsoList> TP_IsoList
		{
			get
			{
				return this.GetTable<TP_IsoList>();
			}
		}
		
		public System.Data.Linq.Table<TP_TestPackage> TP_TestPackage
		{
			get
			{
				return this.GetTable<TP_TestPackage>();
			}
		}
		
		public System.Data.Linq.Table<V_JOINTVIEW> V_JOINTVIEW
		{
			get
			{
				return this.GetTable<V_JOINTVIEW>();
			}
		}
		
		public System.Data.Linq.Table<View_CH_CheckItem> View_CH_CheckItem
		{
			get
			{
				return this.GetTable<View_CH_CheckItem>();
			}
		}
		
		public System.Data.Linq.Table<View_CH_CheckSerch> View_CH_CheckSerch
		{
			get
			{
				return this.GetTable<View_CH_CheckSerch>();
			}
		}
		
		public System.Data.Linq.Table<View_CH_RepairSearch> View_CH_RepairSearch
		{
			get
			{
				return this.GetTable<View_CH_RepairSearch>();
			}
		}
		
		public System.Data.Linq.Table<View_CH_TrustItem> View_CH_TrustItem
		{
			get
			{
				return this.GetTable<View_CH_TrustItem>();
			}
		}
		
		public System.Data.Linq.Table<View_CH_TrustSearch> View_CH_TrustSearch
		{
			get
			{
				return this.GetTable<View_CH_TrustSearch>();
			}
		}
		
		public System.Data.Linq.Table<View_ErrLogInfoList> View_ErrLogInfoList
		{
			get
			{
				return this.GetTable<View_ErrLogInfoList>();
			}
		}
		
		public System.Data.Linq.Table<View_HotHardItem> View_HotHardItem
		{
			get
			{
				return this.GetTable<View_HotHardItem>();
			}
		}
		
		public System.Data.Linq.Table<View_HotHardSearch> View_HotHardSearch
		{
			get
			{
				return this.GetTable<View_HotHardSearch>();
			}
		}
		
		public System.Data.Linq.Table<View_HotProessItem> View_HotProessItem
		{
			get
			{
				return this.GetTable<View_HotProessItem>();
			}
		}
		
		public System.Data.Linq.Table<View_IsoInfo> View_IsoInfo
		{
			get
			{
				return this.GetTable<View_IsoInfo>();
			}
		}
		
		public System.Data.Linq.Table<View_IsoInfoReportSearch> View_IsoInfoReportSearch
		{
			get
			{
				return this.GetTable<View_IsoInfoReportSearch>();
			}
		}
		
		public System.Data.Linq.Table<View_IsoinfoView> View_IsoinfoView
		{
			get
			{
				return this.GetTable<View_IsoinfoView>();
			}
		}
		
		public System.Data.Linq.Table<View_JointInfo> View_JointInfo
		{
			get
			{
				return this.GetTable<View_JointInfo>();
			}
		}
		
		public System.Data.Linq.Table<View_JointInfoAndIsoInfo> View_JointInfoAndIsoInfo
		{
			get
			{
				return this.GetTable<View_JointInfoAndIsoInfo>();
			}
		}
		
		public System.Data.Linq.Table<View_JointInfoReportSearch> View_JointInfoReportSearch
		{
			get
			{
				return this.GetTable<View_JointInfoReportSearch>();
			}
		}
		
		public System.Data.Linq.Table<View_PersonManageList> View_PersonManageList
		{
			get
			{
				return this.GetTable<View_PersonManageList>();
			}
		}
		
		public System.Data.Linq.Table<View_sys_user> View_sys_user
		{
			get
			{
				return this.GetTable<View_sys_user>();
			}
		}
		
		public System.Data.Linq.Table<View_TestPackageManageAudit> View_TestPackageManageAudit
		{
			get
			{
				return this.GetTable<View_TestPackageManageAudit>();
			}
		}
		
		public System.Data.Linq.Table<View_TestPackageSearch> View_TestPackageSearch
		{
			get
			{
				return this.GetTable<View_TestPackageSearch>();
			}
		}
		
		public System.Data.Linq.Table<View_WeldingProcedureAnalysis> View_WeldingProcedureAnalysis
		{
			get
			{
				return this.GetTable<View_WeldingProcedureAnalysis>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Base_Installation")]
	public partial class Base_Installation : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _InstallationId;
		
		private string _ProjectId;
		
		private string _InstallationCode;
		
		private string _InstallationName;
		
		private System.Nullable<bool> _IsUsed;
		
		private string _Def;
		
		private EntityRef<Base_Project> _Base_Project;
		
		private EntitySet<Base_WorkArea> _Base_WorkArea;
		
		private EntitySet<BO_WeldReportMain> _BO_WeldReportMain;
		
		private EntitySet<CH_Trust> _CH_Trust;
		
		private EntitySet<HotHard> _HotHard;
		
		private EntitySet<HotProess> _HotProess;
		
		private EntitySet<TP_TestPackage> _TP_TestPackage;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnInstallationIdChanging(int value);
    partial void OnInstallationIdChanged();
    partial void OnProjectIdChanging(string value);
    partial void OnProjectIdChanged();
    partial void OnInstallationCodeChanging(string value);
    partial void OnInstallationCodeChanged();
    partial void OnInstallationNameChanging(string value);
    partial void OnInstallationNameChanged();
    partial void OnIsUsedChanging(System.Nullable<bool> value);
    partial void OnIsUsedChanged();
    partial void OnDefChanging(string value);
    partial void OnDefChanged();
    #endregion
		
		public Base_Installation()
		{
			this._Base_Project = default(EntityRef<Base_Project>);
			this._Base_WorkArea = new EntitySet<Base_WorkArea>(new Action<Base_WorkArea>(this.attach_Base_WorkArea), new Action<Base_WorkArea>(this.detach_Base_WorkArea));
			this._BO_WeldReportMain = new EntitySet<BO_WeldReportMain>(new Action<BO_WeldReportMain>(this.attach_BO_WeldReportMain), new Action<BO_WeldReportMain>(this.detach_BO_WeldReportMain));
			this._CH_Trust = new EntitySet<CH_Trust>(new Action<CH_Trust>(this.attach_CH_Trust), new Action<CH_Trust>(this.detach_CH_Trust));
			this._HotHard = new EntitySet<HotHard>(new Action<HotHard>(this.attach_HotHard), new Action<HotHard>(this.detach_HotHard));
			this._HotProess = new EntitySet<HotProess>(new Action<HotProess>(this.attach_HotProess), new Action<HotProess>(this.detach_HotProess));
			this._TP_TestPackage = new EntitySet<TP_TestPackage>(new Action<TP_TestPackage>(this.attach_TP_TestPackage), new Action<TP_TestPackage>(this.detach_TP_TestPackage));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InstallationId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int InstallationId
		{
			get
			{
				return this._InstallationId;
			}
			set
			{
				if ((this._InstallationId != value))
				{
					this.OnInstallationIdChanging(value);
					this.SendPropertyChanging();
					this._InstallationId = value;
					this.SendPropertyChanged("InstallationId");
					this.OnInstallationIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProjectId", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string ProjectId
		{
			get
			{
				return this._ProjectId;
			}
			set
			{
				if ((this._ProjectId != value))
				{
					if (this._Base_Project.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProjectIdChanging(value);
					this.SendPropertyChanging();
					this._ProjectId = value;
					this.SendPropertyChanged("ProjectId");
					this.OnProjectIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InstallationCode", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string InstallationCode
		{
			get
			{
				return this._InstallationCode;
			}
			set
			{
				if ((this._InstallationCode != value))
				{
					this.OnInstallationCodeChanging(value);
					this.SendPropertyChanging();
					this._InstallationCode = value;
					this.SendPropertyChanged("InstallationCode");
					this.OnInstallationCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InstallationName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string InstallationName
		{
			get
			{
				return this._InstallationName;
			}
			set
			{
				if ((this._InstallationName != value))
				{
					this.OnInstallationNameChanging(value);
					this.SendPropertyChanging();
					this._InstallationName = value;
					this.SendPropertyChanged("InstallationName");
					this.OnInstallationNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsUsed", DbType="Bit")]
		public System.Nullable<bool> IsUsed
		{
			get
			{
				return this._IsUsed;
			}
			set
			{
				if ((this._IsUsed != value))
				{
					this.OnIsUsedChanging(value);
					this.SendPropertyChanging();
					this._IsUsed = value;
					this.SendPropertyChanged("IsUsed");
					this.OnIsUsedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Def", DbType="NVarChar(300)")]
		public string Def
		{
			get
			{
				return this._Def;
			}
			set
			{
				if ((this._Def != value))
				{
					this.OnDefChanging(value);
					this.SendPropertyChanging();
					this._Def = value;
					this.SendPropertyChanged("Def");
					this.OnDefChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Base_Installation_Base_Project", Storage="_Base_Project", ThisKey="ProjectId", OtherKey="ProjectId", IsForeignKey=true)]
		public Base_Project Base_Project
		{
			get
			{
				return this._Base_Project.Entity;
			}
			set
			{
				Base_Project previousValue = this._Base_Project.Entity;
				if (((previousValue != value) 
							|| (this._Base_Project.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Base_Project.Entity = null;
						previousValue.Base_Installation.Remove(this);
					}
					this._Base_Project.Entity = value;
					if ((value != null))
					{
						value.Base_Installation.Add(this);
						this._ProjectId = value.ProjectId;
					}
					else
					{
						this._ProjectId = default(string);
					}
					this.SendPropertyChanged("Base_Project");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Base_WorkArea_Base_Installation", Storage="_Base_WorkArea", ThisKey="InstallationId", OtherKey="InstallationId", DeleteRule="NO ACTION")]
		public EntitySet<Base_WorkArea> Base_WorkArea
		{
			get
			{
				return this._Base_WorkArea;
			}
			set
			{
				this._Base_WorkArea.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_BO_WeldReportMain_Base_Installation", Storage="_BO_WeldReportMain", ThisKey="InstallationId", OtherKey="InstallationId", DeleteRule="NO ACTION")]
		public EntitySet<BO_WeldReportMain> BO_WeldReportMain
		{
			get
			{
				return this._BO_WeldReportMain;
			}
			set
			{
				this._BO_WeldReportMain.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_CH_Trust_Base_Installation", Storage="_CH_Trust", ThisKey="InstallationId", OtherKey="InstallationId", DeleteRule="NO ACTION")]
		public EntitySet<CH_Trust> CH_Trust
		{
			get
			{
				return this._CH_Trust;
			}
			set
			{
				this._CH_Trust.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_HotHard_Base_Installation", Storage="_HotHard", ThisKey="InstallationId", OtherKey="InstallationId", DeleteRule="NO ACTION")]
		public EntitySet<HotHard> HotHard
		{
			get
			{
				return this._HotHard;
			}
			set
			{
				this._HotHard.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_HotProess_Base_Installation", Storage="_HotProess", ThisKey="InstallationId", OtherKey="InstallationId", DeleteRule="NO ACTION")]
		public EntitySet<HotProess> HotProess
		{
			get
			{
				return this._HotProess;
			}
			set
			{
				this._HotProess.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_TP_TestPackage_Base_Installation", Storage="_TP_TestPackage", ThisKey="InstallationId", OtherKey="InstallationId", DeleteRule="NO ACTION")]
		public EntitySet<TP_TestPackage> TP_TestPackage
		{
			get
			{
				return this._TP_TestPackage;
			}
			set
			{
				this._TP_TestPackage.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Base_WorkArea(Base_WorkArea entity)
		{
			this.SendPropertyChanging();
			entity.Base_Installation = this;
		}
		
		private void detach_Base_WorkArea(Base_WorkArea entity)
		{
			this.SendPropertyChanging();
			entity.Base_Installation = null;
		}
		
		private void attach_BO_WeldReportMain(BO_WeldReportMain entity)
		{
			this.SendPropertyChanging();
			entity.Base_Installation = this;
		}
		
		private void detach_BO_WeldReportMain(BO_WeldReportMain entity)
		{
			this.SendPropertyChanging();
			entity.Base_Installation = null;
		}
		
		private void attach_CH_Trust(CH_Trust entity)
		{
			this.SendPropertyChanging();
			entity.Base_Installation = this;
		}
		
		private void detach_CH_Trust(CH_Trust entity)
		{
			this.SendPropertyChanging();
			entity.Base_Installation = null;
		}
		
		private void attach_HotHard(HotHard entity)
		{
			this.SendPropertyChanging();
			entity.Base_Installation = this;
		}
		
		private void detach_HotHard(HotHard entity)
		{
			this.SendPropertyChanging();
			entity.Base_Installation = null;
		}
		
		private void attach_HotProess(HotProess entity)
		{
			this.SendPropertyChanging();
			entity.Base_Installation = this;
		}
		
		private void detach_HotProess(HotProess entity)
		{
			this.SendPropertyChanging();
			entity.Base_Installation = null;
		}
		
		private void attach_TP_TestPackage(TP_TestPackage entity)
		{
			this.SendPropertyChanging();
			entity.Base_Installation = this;
		}
		
		private void detach_TP_TestPackage(TP_TestPackage entity)
		{
			this.SendPropertyChanging();
			entity.Base_Installation = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Base_Project")]
	public partial class Base_Project : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ProjectId;
		
		private string _ProjectCode;
		
		private string _ProjectName;
		
		private string _ShortName;
		
		private string _ProjectAddress;
		
		private System.Nullable<System.DateTime> _StartDate;
		
		private System.Nullable<System.DateTime> _EndDate;
		
		private string _PostCode;
		
		private string _Remark;
		
		private string _MainUnit;
		
		private string _OwnerUnit;
		
		private string _WatchUnit;
		
		private string _SubUnit;
		
		private string _Composition;
		
		private string _Feature;
		
		private System.Nullable<decimal> _Area;
		
		private System.Nullable<decimal> _Investment;
		
		private string _ProjectAmount;
		
		private string _NewSituations;
		
		private string _Natural;
		
		private string _Construction;
		
		private EntitySet<Base_Installation> _Base_Installation;
		
		private EntitySet<Base_Unit> _Base_Unit;
		
		private EntitySet<Base_WorkArea> _Base_WorkArea;
		
		private EntitySet<BO_Device> _BO_Device;
		
		private EntitySet<BO_Point> _BO_Point;
		
		private EntitySet<BO_WeldReportMain> _BO_WeldReportMain;
		
		private EntitySet<CH_Check> _CH_Check;
		
		private EntitySet<CH_Repair> _CH_Repair;
		
		private EntitySet<CH_Trust> _CH_Trust;
		
		private EntitySet<ElectrodeBake> _ElectrodeBake;
		
		private EntitySet<ElectrodeRecovery> _ElectrodeRecovery;
		
		private EntitySet<EMInventoryRecords> _EMInventoryRecords;
		
		private EntitySet<EWeldRHRecord> _EWeldRHRecord;
		
		private EntitySet<HotHard> _HotHard;
		
		private EntitySet<HotProess> _HotProess;
		
		private EntitySet<HS_Education> _HS_Education;
		
		private EntitySet<EMaterialRegist> _EMaterialRegist;
		
		private EntitySet<PW_CheckResult> _PW_CheckResult;
		
		private EntitySet<PW_IsoInfo> _PW_IsoInfo;
		
		private EntitySet<PW_JointChange> _PW_JointChange;
		
		private EntitySet<PW_JointInfo> _PW_JointInfo;
		
		private EntitySet<Sys_DataInTemp> _Sys_DataInTemp;
		
		private EntitySet<Sys_Role> _Sys_Role;
		
		private EntitySet<Sys_User> _Sys_User;
		
		private EntitySet<TP_TestPackage> _TP_TestPackage;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnProjectIdChanging(string value);
    partial void OnProjectIdChanged();
    partial void OnProjectCodeChanging(string value);
    partial void OnProjectCodeChanged();
    partial void OnProjectNameChanging(string value);
    partial void OnProjectNameChanged();
    partial void OnShortNameChanging(string value);
    partial void OnShortNameChanged();
    partial void OnProjectAddressChanging(string value);
    partial void OnProjectAddressChanged();
    partial void OnStartDateChanging(System.Nullable<System.DateTime> value);
    partial void OnStartDateChanged();
    partial void OnEndDateChanging(System.Nullable<System.DateTime> value);
    partial void OnEndDateChanged();
    partial void OnPostCodeChanging(string value);
    partial void OnPostCodeChanged();
    partial void OnRemarkChanging(string value);
    partial void OnRemarkChanged();
    partial void OnMainUnitChanging(string value);
    partial void OnMainUnitChanged();
    partial void OnOwnerUnitChanging(string value);
    partial void OnOwnerUnitChanged();
    partial void OnWatchUnitChanging(string value);
    partial void OnWatchUnitChanged();
    partial void OnSubUnitChanging(string value);
    partial void OnSubUnitChanged();
    partial void OnCompositionChanging(string value);
    partial void OnCompositionChanged();
    partial void OnFeatureChanging(string value);
    partial void OnFeatureChanged();
    partial void OnAreaChanging(System.Nullable<decimal> value);
    partial void OnAreaChanged();
    partial void OnInvestmentChanging(System.Nullable<decimal> value);
    partial void OnInvestmentChanged();
    partial void OnProjectAmountChanging(string value);
    partial void OnProjectAmountChanged();
    partial void OnNewSituationsChanging(string value);
    partial void OnNewSituationsChanged();
    partial void OnNaturalChanging(string value);
    partial void OnNaturalChanged();
    partial void OnConstructionChanging(string value);
    partial void OnConstructionChanged();
    #endregion
		
		public Base_Project()
		{
			this._Base_Installation = new EntitySet<Base_Installation>(new Action<Base_Installation>(this.attach_Base_Installation), new Action<Base_Installation>(this.detach_Base_Installation));
			this._Base_Unit = new EntitySet<Base_Unit>(new Action<Base_Unit>(this.attach_Base_Unit), new Action<Base_Unit>(this.detach_Base_Unit));
			this._Base_WorkArea = new EntitySet<Base_WorkArea>(new Action<Base_WorkArea>(this.attach_Base_WorkArea), new Action<Base_WorkArea>(this.detach_Base_WorkArea));
			this._BO_Device = new EntitySet<BO_Device>(new Action<BO_Device>(this.attach_BO_Device), new Action<BO_Device>(this.detach_BO_Device));
			this._BO_Point = new EntitySet<BO_Point>(new Action<BO_Point>(this.attach_BO_Point), new Action<BO_Point>(this.detach_BO_Point));
			this._BO_WeldReportMain = new EntitySet<BO_WeldReportMain>(new Action<BO_WeldReportMain>(this.attach_BO_WeldReportMain), new Action<BO_WeldReportMain>(this.detach_BO_WeldReportMain));
			this._CH_Check = new EntitySet<CH_Check>(new Action<CH_Check>(this.attach_CH_Check), new Action<CH_Check>(this.detach_CH_Check));
			this._CH_Repair = new EntitySet<CH_Repair>(new Action<CH_Repair>(this.attach_CH_Repair), new Action<CH_Repair>(this.detach_CH_Repair));
			this._CH_Trust = new EntitySet<CH_Trust>(new Action<CH_Trust>(this.attach_CH_Trust), new Action<CH_Trust>(this.detach_CH_Trust));
			this._ElectrodeBake = new EntitySet<ElectrodeBake>(new Action<ElectrodeBake>(this.attach_ElectrodeBake), new Action<ElectrodeBake>(this.detach_ElectrodeBake));
			this._ElectrodeRecovery = new EntitySet<ElectrodeRecovery>(new Action<ElectrodeRecovery>(this.attach_ElectrodeRecovery), new Action<ElectrodeRecovery>(this.detach_ElectrodeRecovery));
			this._EMInventoryRecords = new EntitySet<EMInventoryRecords>(new Action<EMInventoryRecords>(this.attach_EMInventoryRecords), new Action<EMInventoryRecords>(this.detach_EMInventoryRecords));
			this._EWeldRHRecord = new EntitySet<EWeldRHRecord>(new Action<EWeldRHRecord>(this.attach_EWeldRHRecord), new Action<EWeldRHRecord>(this.detach_EWeldRHRecord));
			this._HotHard = new EntitySet<HotHard>(new Action<HotHard>(this.attach_HotHard), new Action<HotHard>(this.detach_HotHard));
			this._HotProess = new EntitySet<HotProess>(new Action<HotProess>(this.attach_HotProess), new Action<HotProess>(this.detach_HotProess));
			this._HS_Education = new EntitySet<HS_Education>(new Action<HS_Education>(this.attach_HS_Education), new Action<HS_Education>(this.detach_HS_Education));
			this._EMaterialRegist = new EntitySet<EMaterialRegist>(new Action<EMaterialRegist>(this.attach_EMaterialRegist), new Action<EMaterialRegist>(this.detach_EMaterialRegist));
			this._PW_CheckResult = new EntitySet<PW_CheckResult>(new Action<PW_CheckResult>(this.attach_PW_CheckResult), new Action<PW_CheckResult>(this.detach_PW_CheckResult));
			this._PW_IsoInfo = new EntitySet<PW_IsoInfo>(new Action<PW_IsoInfo>(this.attach_PW_IsoInfo), new Action<PW_IsoInfo>(this.detach_PW_IsoInfo));
			this._PW_JointChange = new EntitySet<PW_JointChange>(new Action<PW_JointChange>(this.attach_PW_JointChange), new Action<PW_JointChange>(this.detach_PW_JointChange));
			this._PW_JointInfo = new EntitySet<PW_JointInfo>(new Action<PW_JointInfo>(this.attach_PW_JointInfo), new Action<PW_JointInfo>(this.detach_PW_JointInfo));
			this._Sys_DataInTemp = new EntitySet<Sys_DataInTemp>(new Action<Sys_DataInTemp>(this.attach_Sys_DataInTemp), new Action<Sys_DataInTemp>(this.detach_Sys_DataInTemp));
			this._Sys_Role = new EntitySet<Sys_Role>(new Action<Sys_Role>(this.attach_Sys_Role), new Action<Sys_Role>(this.detach_Sys_Role));
			this._Sys_User = new EntitySet<Sys_User>(new Action<Sys_User>(this.attach_Sys_User), new Action<Sys_User>(this.detach_Sys_User));
			this._TP_TestPackage = new EntitySet<TP_TestPackage>(new Action<TP_TestPackage>(this.attach_TP_TestPackage), new Action<TP_TestPackage>(this.detach_TP_TestPackage));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProjectId", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ProjectId
		{
			get
			{
				return this._ProjectId;
			}
			set
			{
				if ((this._ProjectId != value))
				{
					this.OnProjectIdChanging(value);
					this.SendPropertyChanging();
					this._ProjectId = value;
					this.SendPropertyChanged("ProjectId");
					this.OnProjectIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProjectCode", DbType="NVarChar(20)")]
		public string ProjectCode
		{
			get
			{
				return this._ProjectCode;
			}
			set
			{
				if ((this._ProjectCode != value))
				{
					this.OnProjectCodeChanging(value);
					this.SendPropertyChanging();
					this._ProjectCode = value;
					this.SendPropertyChanged("ProjectCode");
					this.OnProjectCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProjectName", DbType="NVarChar(100)")]
		public string ProjectName
		{
			get
			{
				return this._ProjectName;
			}
			set
			{
				if ((this._ProjectName != value))
				{
					this.OnProjectNameChanging(value);
					this.SendPropertyChanging();
					this._ProjectName = value;
					this.SendPropertyChanged("ProjectName");
					this.OnProjectNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShortName", DbType="NVarChar(30)")]
		public string ShortName
		{
			get
			{
				return this._ShortName;
			}
			set
			{
				if ((this._ShortName != value))
				{
					this.OnShortNameChanging(value);
					this.SendPropertyChanging();
					this._ShortName = value;
					this.SendPropertyChanged("ShortName");
					this.OnShortNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProjectAddress", DbType="NVarChar(100)")]
		public string ProjectAddress
		{
			get
			{
				return this._ProjectAddress;
			}
			set
			{
				if ((this._ProjectAddress != value))
				{
					this.OnProjectAddressChanging(value);
					this.SendPropertyChanging();
					this._ProjectAddress = value;
					this.SendPropertyChanged("ProjectAddress");
					this.OnProjectAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> StartDate
		{
			get
			{
				return this._StartDate;
			}
			set
			{
				if ((this._StartDate != value))
				{
					this.OnStartDateChanging(value);
					this.SendPropertyChanging();
					this._StartDate = value;
					this.SendPropertyChanged("StartDate");
					this.OnStartDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EndDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> EndDate
		{
			get
			{
				return this._EndDate;
			}
			set
			{
				if ((this._EndDate != value))
				{
					this.OnEndDateChanging(value);
					this.SendPropertyChanging();
					this._EndDate = value;
					this.SendPropertyChanged("EndDate");
					this.OnEndDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PostCode", DbType="NVarChar(10)")]
		public string PostCode
		{
			get
			{
				return this._PostCode;
			}
			set
			{
				if ((this._PostCode != value))
				{
					this.OnPostCodeChanging(value);
					this.SendPropertyChanging();
					this._PostCode = value;
					this.SendPropertyChanged("PostCode");
					this.OnPostCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Remark", DbType="NVarChar(300)")]
		public string Remark
		{
			get
			{
				return this._Remark;
			}
			set
			{
				if ((this._Remark != value))
				{
					this.OnRemarkChanging(value);
					this.SendPropertyChanging();
					this._Remark = value;
					this.SendPropertyChanged("Remark");
					this.OnRemarkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MainUnit", DbType="NVarChar(20)")]
		public string MainUnit
		{
			get
			{
				return this._MainUnit;
			}
			set
			{
				if ((this._MainUnit != value))
				{
					this.OnMainUnitChanging(value);
					this.SendPropertyChanging();
					this._MainUnit = value;
					this.SendPropertyChanged("MainUnit");
					this.OnMainUnitChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OwnerUnit", DbType="NVarChar(20)")]
		public string OwnerUnit
		{
			get
			{
				return this._OwnerUnit;
			}
			set
			{
				if ((this._OwnerUnit != value))
				{
					this.OnOwnerUnitChanging(value);
					this.SendPropertyChanging();
					this._OwnerUnit = value;
					this.SendPropertyChanged("OwnerUnit");
					this.OnOwnerUnitChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WatchUnit", DbType="NVarChar(100)")]
		public string WatchUnit
		{
			get
			{
				return this._WatchUnit;
			}
			set
			{
				if ((this._WatchUnit != value))
				{
					this.OnWatchUnitChanging(value);
					this.SendPropertyChanging();
					this._WatchUnit = value;
					this.SendPropertyChanged("WatchUnit");
					this.OnWatchUnitChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubUnit", DbType="NVarChar(100)")]
		public string SubUnit
		{
			get
			{
				return this._SubUnit;
			}
			set
			{
				if ((this._SubUnit != value))
				{
					this.OnSubUnitChanging(value);
					this.SendPropertyChanging();
					this._SubUnit = value;
					this.SendPropertyChanged("SubUnit");
					this.OnSubUnitChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Composition", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string Composition
		{
			get
			{
				return this._Composition;
			}
			set
			{
				if ((this._Composition != value))
				{
					this.OnCompositionChanging(value);
					this.SendPropertyChanging();
					this._Composition = value;
					this.SendPropertyChanged("Composition");
					this.OnCompositionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Feature", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string Feature
		{
			get
			{
				return this._Feature;
			}
			set
			{
				if ((this._Feature != value))
				{
					this.OnFeatureChanging(value);
					this.SendPropertyChanging();
					this._Feature = value;
					this.SendPropertyChanged("Feature");
					this.OnFeatureChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Area", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> Area
		{
			get
			{
				return this._Area;
			}
			set
			{
				if ((this._Area != value))
				{
					this.OnAreaChanging(value);
					this.SendPropertyChanging();
					this._Area = value;
					this.SendPropertyChanged("Area");
					this.OnAreaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Investment", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> Investment
		{
			get
			{
				return this._Investment;
			}
			set
			{
				if ((this._Investment != value))
				{
					this.OnInvestmentChanging(value);
					this.SendPropertyChanging();
					this._Investment = value;
					this.SendPropertyChanged("Investment");
					this.OnInvestmentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProjectAmount", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string ProjectAmount
		{
			get
			{
				return this._ProjectAmount;
			}
			set
			{
				if ((this._ProjectAmount != value))
				{
					this.OnProjectAmountChanging(value);
					this.SendPropertyChanging();
					this._ProjectAmount = value;
					this.SendPropertyChanged("ProjectAmount");
					this.OnProjectAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NewSituations", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string NewSituations
		{
			get
			{
				return this._NewSituations;
			}
			set
			{
				if ((this._NewSituations != value))
				{
					this.OnNewSituationsChanging(value);
					this.SendPropertyChanging();
					this._NewSituations = value;
					this.SendPropertyChanged("NewSituations");
					this.OnNewSituationsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Natural", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string Natural
		{
			get
			{
				return this._Natural;
			}
			set
			{
				if ((this._Natural != value))
				{
					this.OnNaturalChanging(value);
					this.SendPropertyChanging();
					this._Natural = value;
					this.SendPropertyChanged("Natural");
					this.OnNaturalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Construction", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string Construction
		{
			get
			{
				return this._Construction;
			}
			set
			{
				if ((this._Construction != value))
				{
					this.OnConstructionChanging(value);
					this.SendPropertyChanging();
					this._Construction = value;
					this.SendPropertyChanged("Construction");
					this.OnConstructionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Base_Installation_Base_Project", Storage="_Base_Installation", ThisKey="ProjectId", OtherKey="ProjectId", DeleteRule="NO ACTION")]
		public EntitySet<Base_Installation> Base_Installation
		{
			get
			{
				return this._Base_Installation;
			}
			set
			{
				this._Base_Installation.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Base_Unit_Base_Project", Storage="_Base_Unit", ThisKey="ProjectId", OtherKey="ProjectId", DeleteRule="NO ACTION")]
		public EntitySet<Base_Unit> Base_Unit
		{
			get
			{
				return this._Base_Unit;
			}
			set
			{
				this._Base_Unit.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Base_WorkArea_Base_Project", Storage="_Base_WorkArea", ThisKey="ProjectId", OtherKey="ProjectId", DeleteRule="NO ACTION")]
		public EntitySet<Base_WorkArea> Base_WorkArea
		{
			get
			{
				return this._Base_WorkArea;
			}
			set
			{
				this._Base_WorkArea.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_BO_Device_Base_Project", Storage="_BO_Device", ThisKey="ProjectId", OtherKey="ProjectId", DeleteRule="NO ACTION")]
		public EntitySet<BO_Device> BO_Device
		{
			get
			{
				return this._BO_Device;
			}
			set
			{
				this._BO_Device.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_BO_Point_Base_Project", Storage="_BO_Point", ThisKey="ProjectId", OtherKey="ProjectId", DeleteRule="NO ACTION")]
		public EntitySet<BO_Point> BO_Point
		{
			get
			{
				return this._BO_Point;
			}
			set
			{
				this._BO_Point.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_BO_WeldReportMain_Base_Project", Storage="_BO_WeldReportMain", ThisKey="ProjectId", OtherKey="ProjectId", DeleteRule="NO ACTION")]
		public EntitySet<BO_WeldReportMain> BO_WeldReportMain
		{
			get
			{
				return this._BO_WeldReportMain;
			}
			set
			{
				this._BO_WeldReportMain.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_CH_Check_Base_Project", Storage="_CH_Check", ThisKey="ProjectId", OtherKey="ProjectId", DeleteRule="NO ACTION")]
		public EntitySet<CH_Check> CH_Check
		{
			get
			{
				return this._CH_Check;
			}
			set
			{
				this._CH_Check.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_CH_Repair_Base_Project", Storage="_CH_Repair", ThisKey="ProjectId", OtherKey="ProjectId", DeleteRule="NO ACTION")]
		public EntitySet<CH_Repair> CH_Repair
		{
			get
			{
				return this._CH_Repair;
			}
			set
			{
				this._CH_Repair.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_CH_Trust_Base_Project", Storage="_CH_Trust", ThisKey="ProjectId", OtherKey="ProjectId", DeleteRule="NO ACTION")]
		public EntitySet<CH_Trust> CH_Trust
		{
			get
			{
				return this._CH_Trust;
			}
			set
			{
				this._CH_Trust.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_ElectrodeBake_Base_Project", Storage="_ElectrodeBake", ThisKey="ProjectId", OtherKey="ProjectId", DeleteRule="NO ACTION")]
		public EntitySet<ElectrodeBake> ElectrodeBake
		{
			get
			{
				return this._ElectrodeBake;
			}
			set
			{
				this._ElectrodeBake.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_ElectrodeRecovery_Base_Project", Storage="_ElectrodeRecovery", ThisKey="ProjectId", OtherKey="ProjectId", DeleteRule="NO ACTION")]
		public EntitySet<ElectrodeRecovery> ElectrodeRecovery
		{
			get
			{
				return this._ElectrodeRecovery;
			}
			set
			{
				this._ElectrodeRecovery.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_EMInventoryRecords_Base_Project", Storage="_EMInventoryRecords", ThisKey="ProjectId", OtherKey="ProjectId", DeleteRule="NO ACTION")]
		public EntitySet<EMInventoryRecords> EMInventoryRecords
		{
			get
			{
				return this._EMInventoryRecords;
			}
			set
			{
				this._EMInventoryRecords.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_EWeldRHRecord_Base_Project", Storage="_EWeldRHRecord", ThisKey="ProjectId", OtherKey="ProjectId", DeleteRule="NO ACTION")]
		public EntitySet<EWeldRHRecord> EWeldRHRecord
		{
			get
			{
				return this._EWeldRHRecord;
			}
			set
			{
				this._EWeldRHRecord.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_HotHard_Base_Project", Storage="_HotHard", ThisKey="ProjectId", OtherKey="ProjectId", DeleteRule="NO ACTION")]
		public EntitySet<HotHard> HotHard
		{
			get
			{
				return this._HotHard;
			}
			set
			{
				this._HotHard.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_HotProess_Base_Project", Storage="_HotProess", ThisKey="ProjectId", OtherKey="ProjectId", DeleteRule="NO ACTION")]
		public EntitySet<HotProess> HotProess
		{
			get
			{
				return this._HotProess;
			}
			set
			{
				this._HotProess.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_HS_Education_Base_Project", Storage="_HS_Education", ThisKey="ProjectId", OtherKey="ProjectId", DeleteRule="NO ACTION")]
		public EntitySet<HS_Education> HS_Education
		{
			get
			{
				return this._HS_Education;
			}
			set
			{
				this._HS_Education.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_MaterialRegist_Base_Project", Storage="_EMaterialRegist", ThisKey="ProjectId", OtherKey="ProjectId", DeleteRule="NO ACTION")]
		public EntitySet<EMaterialRegist> EMaterialRegist
		{
			get
			{
				return this._EMaterialRegist;
			}
			set
			{
				this._EMaterialRegist.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_PW_CheckResult_Base_Project", Storage="_PW_CheckResult", ThisKey="ProjectId", OtherKey="ProjectId", DeleteRule="NO ACTION")]
		public EntitySet<PW_CheckResult> PW_CheckResult
		{
			get
			{
				return this._PW_CheckResult;
			}
			set
			{
				this._PW_CheckResult.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_PW_IsoInfo_Base_Project", Storage="_PW_IsoInfo", ThisKey="ProjectId", OtherKey="ProjectId", DeleteRule="NO ACTION")]
		public EntitySet<PW_IsoInfo> PW_IsoInfo
		{
			get
			{
				return this._PW_IsoInfo;
			}
			set
			{
				this._PW_IsoInfo.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_PW_JointChange_Base_Project", Storage="_PW_JointChange", ThisKey="ProjectId", OtherKey="ProjectId", DeleteRule="NO ACTION")]
		public EntitySet<PW_JointChange> PW_JointChange
		{
			get
			{
				return this._PW_JointChange;
			}
			set
			{
				this._PW_JointChange.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_PW_JointInfo_Base_Project", Storage="_PW_JointInfo", ThisKey="ProjectId", OtherKey="ProjectId", DeleteRule="NO ACTION")]
		public EntitySet<PW_JointInfo> PW_JointInfo
		{
			get
			{
				return this._PW_JointInfo;
			}
			set
			{
				this._PW_JointInfo.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Sys_DataInTemp_Base_Project", Storage="_Sys_DataInTemp", ThisKey="ProjectId", OtherKey="ProjectId", DeleteRule="NO ACTION")]
		public EntitySet<Sys_DataInTemp> Sys_DataInTemp
		{
			get
			{
				return this._Sys_DataInTemp;
			}
			set
			{
				this._Sys_DataInTemp.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Sys_Role_Base_Project", Storage="_Sys_Role", ThisKey="ProjectId", OtherKey="ProjectId", DeleteRule="NO ACTION")]
		public EntitySet<Sys_Role> Sys_Role
		{
			get
			{
				return this._Sys_Role;
			}
			set
			{
				this._Sys_Role.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Sys_User_Base_Project", Storage="_Sys_User", ThisKey="ProjectId", OtherKey="ProjectId", DeleteRule="NO ACTION")]
		public EntitySet<Sys_User> Sys_User
		{
			get
			{
				return this._Sys_User;
			}
			set
			{
				this._Sys_User.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_TP_TestPackage_Base_Project", Storage="_TP_TestPackage", ThisKey="ProjectId", OtherKey="ProjectId", DeleteRule="NO ACTION")]
		public EntitySet<TP_TestPackage> TP_TestPackage
		{
			get
			{
				return this._TP_TestPackage;
			}
			set
			{
				this._TP_TestPackage.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Base_Installation(Base_Installation entity)
		{
			this.SendPropertyChanging();
			entity.Base_Project = this;
		}
		
		private void detach_Base_Installation(Base_Installation entity)
		{
			this.SendPropertyChanging();
			entity.Base_Project = null;
		}
		
		private void attach_Base_Unit(Base_Unit entity)
		{
			this.SendPropertyChanging();
			entity.Base_Project = this;
		}
		
		private void detach_Base_Unit(Base_Unit entity)
		{
			this.SendPropertyChanging();
			entity.Base_Project = null;
		}
		
		private void attach_Base_WorkArea(Base_WorkArea entity)
		{
			this.SendPropertyChanging();
			entity.Base_Project = this;
		}
		
		private void detach_Base_WorkArea(Base_WorkArea entity)
		{
			this.SendPropertyChanging();
			entity.Base_Project = null;
		}
		
		private void attach_BO_Device(BO_Device entity)
		{
			this.SendPropertyChanging();
			entity.Base_Project = this;
		}
		
		private void detach_BO_Device(BO_Device entity)
		{
			this.SendPropertyChanging();
			entity.Base_Project = null;
		}
		
		private void attach_BO_Point(BO_Point entity)
		{
			this.SendPropertyChanging();
			entity.Base_Project = this;
		}
		
		private void detach_BO_Point(BO_Point entity)
		{
			this.SendPropertyChanging();
			entity.Base_Project = null;
		}
		
		private void attach_BO_WeldReportMain(BO_WeldReportMain entity)
		{
			this.SendPropertyChanging();
			entity.Base_Project = this;
		}
		
		private void detach_BO_WeldReportMain(BO_WeldReportMain entity)
		{
			this.SendPropertyChanging();
			entity.Base_Project = null;
		}
		
		private void attach_CH_Check(CH_Check entity)
		{
			this.SendPropertyChanging();
			entity.Base_Project = this;
		}
		
		private void detach_CH_Check(CH_Check entity)
		{
			this.SendPropertyChanging();
			entity.Base_Project = null;
		}
		
		private void attach_CH_Repair(CH_Repair entity)
		{
			this.SendPropertyChanging();
			entity.Base_Project = this;
		}
		
		private void detach_CH_Repair(CH_Repair entity)
		{
			this.SendPropertyChanging();
			entity.Base_Project = null;
		}
		
		private void attach_CH_Trust(CH_Trust entity)
		{
			this.SendPropertyChanging();
			entity.Base_Project = this;
		}
		
		private void detach_CH_Trust(CH_Trust entity)
		{
			this.SendPropertyChanging();
			entity.Base_Project = null;
		}
		
		private void attach_ElectrodeBake(ElectrodeBake entity)
		{
			this.SendPropertyChanging();
			entity.Base_Project = this;
		}
		
		private void detach_ElectrodeBake(ElectrodeBake entity)
		{
			this.SendPropertyChanging();
			entity.Base_Project = null;
		}
		
		private void attach_ElectrodeRecovery(ElectrodeRecovery entity)
		{
			this.SendPropertyChanging();
			entity.Base_Project = this;
		}
		
		private void detach_ElectrodeRecovery(ElectrodeRecovery entity)
		{
			this.SendPropertyChanging();
			entity.Base_Project = null;
		}
		
		private void attach_EMInventoryRecords(EMInventoryRecords entity)
		{
			this.SendPropertyChanging();
			entity.Base_Project = this;
		}
		
		private void detach_EMInventoryRecords(EMInventoryRecords entity)
		{
			this.SendPropertyChanging();
			entity.Base_Project = null;
		}
		
		private void attach_EWeldRHRecord(EWeldRHRecord entity)
		{
			this.SendPropertyChanging();
			entity.Base_Project = this;
		}
		
		private void detach_EWeldRHRecord(EWeldRHRecord entity)
		{
			this.SendPropertyChanging();
			entity.Base_Project = null;
		}
		
		private void attach_HotHard(HotHard entity)
		{
			this.SendPropertyChanging();
			entity.Base_Project = this;
		}
		
		private void detach_HotHard(HotHard entity)
		{
			this.SendPropertyChanging();
			entity.Base_Project = null;
		}
		
		private void attach_HotProess(HotProess entity)
		{
			this.SendPropertyChanging();
			entity.Base_Project = this;
		}
		
		private void detach_HotProess(HotProess entity)
		{
			this.SendPropertyChanging();
			entity.Base_Project = null;
		}
		
		private void attach_HS_Education(HS_Education entity)
		{
			this.SendPropertyChanging();
			entity.Base_Project = this;
		}
		
		private void detach_HS_Education(HS_Education entity)
		{
			this.SendPropertyChanging();
			entity.Base_Project = null;
		}
		
		private void attach_EMaterialRegist(EMaterialRegist entity)
		{
			this.SendPropertyChanging();
			entity.Base_Project = this;
		}
		
		private void detach_EMaterialRegist(EMaterialRegist entity)
		{
			this.SendPropertyChanging();
			entity.Base_Project = null;
		}
		
		private void attach_PW_CheckResult(PW_CheckResult entity)
		{
			this.SendPropertyChanging();
			entity.Base_Project = this;
		}
		
		private void detach_PW_CheckResult(PW_CheckResult entity)
		{
			this.SendPropertyChanging();
			entity.Base_Project = null;
		}
		
		private void attach_PW_IsoInfo(PW_IsoInfo entity)
		{
			this.SendPropertyChanging();
			entity.Base_Project = this;
		}
		
		private void detach_PW_IsoInfo(PW_IsoInfo entity)
		{
			this.SendPropertyChanging();
			entity.Base_Project = null;
		}
		
		private void attach_PW_JointChange(PW_JointChange entity)
		{
			this.SendPropertyChanging();
			entity.Base_Project = this;
		}
		
		private void detach_PW_JointChange(PW_JointChange entity)
		{
			this.SendPropertyChanging();
			entity.Base_Project = null;
		}
		
		private void attach_PW_JointInfo(PW_JointInfo entity)
		{
			this.SendPropertyChanging();
			entity.Base_Project = this;
		}
		
		private void detach_PW_JointInfo(PW_JointInfo entity)
		{
			this.SendPropertyChanging();
			entity.Base_Project = null;
		}
		
		private void attach_Sys_DataInTemp(Sys_DataInTemp entity)
		{
			this.SendPropertyChanging();
			entity.Base_Project = this;
		}
		
		private void detach_Sys_DataInTemp(Sys_DataInTemp entity)
		{
			this.SendPropertyChanging();
			entity.Base_Project = null;
		}
		
		private void attach_Sys_Role(Sys_Role entity)
		{
			this.SendPropertyChanging();
			entity.Base_Project = this;
		}
		
		private void detach_Sys_Role(Sys_Role entity)
		{
			this.SendPropertyChanging();
			entity.Base_Project = null;
		}
		
		private void attach_Sys_User(Sys_User entity)
		{
			this.SendPropertyChanging();
			entity.Base_Project = this;
		}
		
		private void detach_Sys_User(Sys_User entity)
		{
			this.SendPropertyChanging();
			entity.Base_Project = null;
		}
		
		private void attach_TP_TestPackage(TP_TestPackage entity)
		{
			this.SendPropertyChanging();
			entity.Base_Project = this;
		}
		
		private void detach_TP_TestPackage(TP_TestPackage entity)
		{
			this.SendPropertyChanging();
			entity.Base_Project = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Base_Unit")]
	public partial class Base_Unit : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _UnitId;
		
		private string _UnitCode;
		
		private string _UnitName;
		
		private string _ProjectId;
		
		private string _ProjectRange;
		
		private System.Nullable<int> _Duration;
		
		private string _Corporate;
		
		private string _Address;
		
		private string _Telephone;
		
		private string _Fax;
		
		private System.Nullable<System.DateTime> _InTime;
		
		private System.Nullable<System.DateTime> _OutTime;
		
		private string _UnitType;
		
		private System.Nullable<int> _SortIndex;
		
		private EntityRef<Base_Project> _Base_Project;
		
		private EntitySet<Base_WorkArea> _Base_WorkArea;
		
		private EntitySet<BO_NDTTrustItem> _BO_NDTTrustItem;
		
		private EntitySet<BO_Point> _BO_Point;
		
		private EntitySet<BO_WeldReportMain> _BO_WeldReportMain;
		
		private EntitySet<BS_Welder> _BS_Welder;
		
		private EntitySet<CH_Check> _CH_Check;
		
		private EntitySet<CH_Repair> _CH_Repair;
		
		private EntitySet<ElectrodeBake> _ElectrodeBake;
		
		private EntitySet<ElectrodeRecovery> _ElectrodeRecovery;
		
		private EntitySet<EWeldRHRecord> _EWeldRHRecord;
		
		private EntitySet<HotHard> _HotHard;
		
		private EntitySet<HotHard> _Unit;
		
		private EntitySet<HotProess> _HotProess;
		
		private EntitySet<HS_Education> _HS_Education;
		
		private EntitySet<PW_IsoInfo> _PW_IsoInfo;
		
		private EntitySet<Sys_User> _Sys_User;
		
		private EntitySet<TP_TestPackage> _TP_TestPackage;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUnitIdChanging(string value);
    partial void OnUnitIdChanged();
    partial void OnUnitCodeChanging(string value);
    partial void OnUnitCodeChanged();
    partial void OnUnitNameChanging(string value);
    partial void OnUnitNameChanged();
    partial void OnProjectIdChanging(string value);
    partial void OnProjectIdChanged();
    partial void OnProjectRangeChanging(string value);
    partial void OnProjectRangeChanged();
    partial void OnDurationChanging(System.Nullable<int> value);
    partial void OnDurationChanged();
    partial void OnCorporateChanging(string value);
    partial void OnCorporateChanged();
    partial void OnAddressChanging(string value);
    partial void OnAddressChanged();
    partial void OnTelephoneChanging(string value);
    partial void OnTelephoneChanged();
    partial void OnFaxChanging(string value);
    partial void OnFaxChanged();
    partial void OnInTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnInTimeChanged();
    partial void OnOutTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnOutTimeChanged();
    partial void OnUnitTypeChanging(string value);
    partial void OnUnitTypeChanged();
    partial void OnSortIndexChanging(System.Nullable<int> value);
    partial void OnSortIndexChanged();
    #endregion
		
		public Base_Unit()
		{
			this._Base_Project = default(EntityRef<Base_Project>);
			this._Base_WorkArea = new EntitySet<Base_WorkArea>(new Action<Base_WorkArea>(this.attach_Base_WorkArea), new Action<Base_WorkArea>(this.detach_Base_WorkArea));
			this._BO_NDTTrustItem = new EntitySet<BO_NDTTrustItem>(new Action<BO_NDTTrustItem>(this.attach_BO_NDTTrustItem), new Action<BO_NDTTrustItem>(this.detach_BO_NDTTrustItem));
			this._BO_Point = new EntitySet<BO_Point>(new Action<BO_Point>(this.attach_BO_Point), new Action<BO_Point>(this.detach_BO_Point));
			this._BO_WeldReportMain = new EntitySet<BO_WeldReportMain>(new Action<BO_WeldReportMain>(this.attach_BO_WeldReportMain), new Action<BO_WeldReportMain>(this.detach_BO_WeldReportMain));
			this._BS_Welder = new EntitySet<BS_Welder>(new Action<BS_Welder>(this.attach_BS_Welder), new Action<BS_Welder>(this.detach_BS_Welder));
			this._CH_Check = new EntitySet<CH_Check>(new Action<CH_Check>(this.attach_CH_Check), new Action<CH_Check>(this.detach_CH_Check));
			this._CH_Repair = new EntitySet<CH_Repair>(new Action<CH_Repair>(this.attach_CH_Repair), new Action<CH_Repair>(this.detach_CH_Repair));
			this._ElectrodeBake = new EntitySet<ElectrodeBake>(new Action<ElectrodeBake>(this.attach_ElectrodeBake), new Action<ElectrodeBake>(this.detach_ElectrodeBake));
			this._ElectrodeRecovery = new EntitySet<ElectrodeRecovery>(new Action<ElectrodeRecovery>(this.attach_ElectrodeRecovery), new Action<ElectrodeRecovery>(this.detach_ElectrodeRecovery));
			this._EWeldRHRecord = new EntitySet<EWeldRHRecord>(new Action<EWeldRHRecord>(this.attach_EWeldRHRecord), new Action<EWeldRHRecord>(this.detach_EWeldRHRecord));
			this._HotHard = new EntitySet<HotHard>(new Action<HotHard>(this.attach_HotHard), new Action<HotHard>(this.detach_HotHard));
			this._Unit = new EntitySet<HotHard>(new Action<HotHard>(this.attach_Unit), new Action<HotHard>(this.detach_Unit));
			this._HotProess = new EntitySet<HotProess>(new Action<HotProess>(this.attach_HotProess), new Action<HotProess>(this.detach_HotProess));
			this._HS_Education = new EntitySet<HS_Education>(new Action<HS_Education>(this.attach_HS_Education), new Action<HS_Education>(this.detach_HS_Education));
			this._PW_IsoInfo = new EntitySet<PW_IsoInfo>(new Action<PW_IsoInfo>(this.attach_PW_IsoInfo), new Action<PW_IsoInfo>(this.detach_PW_IsoInfo));
			this._Sys_User = new EntitySet<Sys_User>(new Action<Sys_User>(this.attach_Sys_User), new Action<Sys_User>(this.detach_Sys_User));
			this._TP_TestPackage = new EntitySet<TP_TestPackage>(new Action<TP_TestPackage>(this.attach_TP_TestPackage), new Action<TP_TestPackage>(this.detach_TP_TestPackage));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitId", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string UnitId
		{
			get
			{
				return this._UnitId;
			}
			set
			{
				if ((this._UnitId != value))
				{
					this.OnUnitIdChanging(value);
					this.SendPropertyChanging();
					this._UnitId = value;
					this.SendPropertyChanged("UnitId");
					this.OnUnitIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitCode", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string UnitCode
		{
			get
			{
				return this._UnitCode;
			}
			set
			{
				if ((this._UnitCode != value))
				{
					this.OnUnitCodeChanging(value);
					this.SendPropertyChanging();
					this._UnitCode = value;
					this.SendPropertyChanged("UnitCode");
					this.OnUnitCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitName", DbType="NVarChar(50)")]
		public string UnitName
		{
			get
			{
				return this._UnitName;
			}
			set
			{
				if ((this._UnitName != value))
				{
					this.OnUnitNameChanging(value);
					this.SendPropertyChanging();
					this._UnitName = value;
					this.SendPropertyChanged("UnitName");
					this.OnUnitNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProjectId", DbType="NVarChar(50)")]
		public string ProjectId
		{
			get
			{
				return this._ProjectId;
			}
			set
			{
				if ((this._ProjectId != value))
				{
					if (this._Base_Project.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProjectIdChanging(value);
					this.SendPropertyChanging();
					this._ProjectId = value;
					this.SendPropertyChanged("ProjectId");
					this.OnProjectIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProjectRange", DbType="NVarChar(600)")]
		public string ProjectRange
		{
			get
			{
				return this._ProjectRange;
			}
			set
			{
				if ((this._ProjectRange != value))
				{
					this.OnProjectRangeChanging(value);
					this.SendPropertyChanging();
					this._ProjectRange = value;
					this.SendPropertyChanged("ProjectRange");
					this.OnProjectRangeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Duration", DbType="Int")]
		public System.Nullable<int> Duration
		{
			get
			{
				return this._Duration;
			}
			set
			{
				if ((this._Duration != value))
				{
					this.OnDurationChanging(value);
					this.SendPropertyChanging();
					this._Duration = value;
					this.SendPropertyChanged("Duration");
					this.OnDurationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Corporate", DbType="NVarChar(20)")]
		public string Corporate
		{
			get
			{
				return this._Corporate;
			}
			set
			{
				if ((this._Corporate != value))
				{
					this.OnCorporateChanging(value);
					this.SendPropertyChanging();
					this._Corporate = value;
					this.SendPropertyChanged("Corporate");
					this.OnCorporateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="NVarChar(50)")]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this.OnAddressChanging(value);
					this.SendPropertyChanging();
					this._Address = value;
					this.SendPropertyChanged("Address");
					this.OnAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Telephone", DbType="NVarChar(20)")]
		public string Telephone
		{
			get
			{
				return this._Telephone;
			}
			set
			{
				if ((this._Telephone != value))
				{
					this.OnTelephoneChanging(value);
					this.SendPropertyChanging();
					this._Telephone = value;
					this.SendPropertyChanged("Telephone");
					this.OnTelephoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Fax", DbType="NVarChar(20)")]
		public string Fax
		{
			get
			{
				return this._Fax;
			}
			set
			{
				if ((this._Fax != value))
				{
					this.OnFaxChanging(value);
					this.SendPropertyChanging();
					this._Fax = value;
					this.SendPropertyChanged("Fax");
					this.OnFaxChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> InTime
		{
			get
			{
				return this._InTime;
			}
			set
			{
				if ((this._InTime != value))
				{
					this.OnInTimeChanging(value);
					this.SendPropertyChanging();
					this._InTime = value;
					this.SendPropertyChanged("InTime");
					this.OnInTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OutTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> OutTime
		{
			get
			{
				return this._OutTime;
			}
			set
			{
				if ((this._OutTime != value))
				{
					this.OnOutTimeChanging(value);
					this.SendPropertyChanging();
					this._OutTime = value;
					this.SendPropertyChanged("OutTime");
					this.OnOutTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitType", DbType="Char(1)")]
		public string UnitType
		{
			get
			{
				return this._UnitType;
			}
			set
			{
				if ((this._UnitType != value))
				{
					this.OnUnitTypeChanging(value);
					this.SendPropertyChanging();
					this._UnitType = value;
					this.SendPropertyChanged("UnitType");
					this.OnUnitTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SortIndex", DbType="Int")]
		public System.Nullable<int> SortIndex
		{
			get
			{
				return this._SortIndex;
			}
			set
			{
				if ((this._SortIndex != value))
				{
					this.OnSortIndexChanging(value);
					this.SendPropertyChanging();
					this._SortIndex = value;
					this.SendPropertyChanged("SortIndex");
					this.OnSortIndexChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Base_Unit_Base_Project", Storage="_Base_Project", ThisKey="ProjectId", OtherKey="ProjectId", IsForeignKey=true)]
		public Base_Project Base_Project
		{
			get
			{
				return this._Base_Project.Entity;
			}
			set
			{
				Base_Project previousValue = this._Base_Project.Entity;
				if (((previousValue != value) 
							|| (this._Base_Project.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Base_Project.Entity = null;
						previousValue.Base_Unit.Remove(this);
					}
					this._Base_Project.Entity = value;
					if ((value != null))
					{
						value.Base_Unit.Add(this);
						this._ProjectId = value.ProjectId;
					}
					else
					{
						this._ProjectId = default(string);
					}
					this.SendPropertyChanged("Base_Project");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Base_WorkArea_Base_Unit", Storage="_Base_WorkArea", ThisKey="UnitId", OtherKey="UnitId", DeleteRule="NO ACTION")]
		public EntitySet<Base_WorkArea> Base_WorkArea
		{
			get
			{
				return this._Base_WorkArea;
			}
			set
			{
				this._Base_WorkArea.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_BO_NDTTrustItem_BO_NDTTrustItem", Storage="_BO_NDTTrustItem", ThisKey="UnitId", OtherKey="BSU_ID", DeleteRule="NO ACTION")]
		public EntitySet<BO_NDTTrustItem> BO_NDTTrustItem
		{
			get
			{
				return this._BO_NDTTrustItem;
			}
			set
			{
				this._BO_NDTTrustItem.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_BO_Point_Base_Unit", Storage="_BO_Point", ThisKey="UnitId", OtherKey="BSU_ID", DeleteRule="NO ACTION")]
		public EntitySet<BO_Point> BO_Point
		{
			get
			{
				return this._BO_Point;
			}
			set
			{
				this._BO_Point.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_BO_WeldReportMain_BO_WeldReportMain", Storage="_BO_WeldReportMain", ThisKey="UnitId", OtherKey="BSU_ID", DeleteRule="NO ACTION")]
		public EntitySet<BO_WeldReportMain> BO_WeldReportMain
		{
			get
			{
				return this._BO_WeldReportMain;
			}
			set
			{
				this._BO_WeldReportMain.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_BS_Welder_Base_Unit", Storage="_BS_Welder", ThisKey="UnitId", OtherKey="WED_Unit", DeleteRule="NO ACTION")]
		public EntitySet<BS_Welder> BS_Welder
		{
			get
			{
				return this._BS_Welder;
			}
			set
			{
				this._BS_Welder.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_CH_Check_Base_Unit", Storage="_CH_Check", ThisKey="UnitId", OtherKey="UnitId", DeleteRule="NO ACTION")]
		public EntitySet<CH_Check> CH_Check
		{
			get
			{
				return this._CH_Check;
			}
			set
			{
				this._CH_Check.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_CH_Repair_Base_Unit", Storage="_CH_Repair", ThisKey="UnitId", OtherKey="BSU_ID", DeleteRule="NO ACTION")]
		public EntitySet<CH_Repair> CH_Repair
		{
			get
			{
				return this._CH_Repair;
			}
			set
			{
				this._CH_Repair.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_ElectrodeBake_Base_Unit", Storage="_ElectrodeBake", ThisKey="UnitId", OtherKey="UnitId", DeleteRule="NO ACTION")]
		public EntitySet<ElectrodeBake> ElectrodeBake
		{
			get
			{
				return this._ElectrodeBake;
			}
			set
			{
				this._ElectrodeBake.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_ElectrodeRecovery_Base_Unit", Storage="_ElectrodeRecovery", ThisKey="UnitId", OtherKey="UnitId", DeleteRule="NO ACTION")]
		public EntitySet<ElectrodeRecovery> ElectrodeRecovery
		{
			get
			{
				return this._ElectrodeRecovery;
			}
			set
			{
				this._ElectrodeRecovery.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_EWeldRHRecord_Base_Unit", Storage="_EWeldRHRecord", ThisKey="UnitId", OtherKey="UnitId", DeleteRule="NO ACTION")]
		public EntitySet<EWeldRHRecord> EWeldRHRecord
		{
			get
			{
				return this._EWeldRHRecord;
			}
			set
			{
				this._EWeldRHRecord.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_HotHard_Base_Unit_CheckUnit", Storage="_HotHard", ThisKey="UnitId", OtherKey="CheckUnit", DeleteRule="NO ACTION")]
		public EntitySet<HotHard> HotHard
		{
			get
			{
				return this._HotHard;
			}
			set
			{
				this._HotHard.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_HotHard_Base_Unit_HotHardUnit", Storage="_Unit", ThisKey="UnitId", OtherKey="HotHardUnit", DeleteRule="NO ACTION")]
		public EntitySet<HotHard> Unit
		{
			get
			{
				return this._Unit;
			}
			set
			{
				this._Unit.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_HotProess_Base_Unit", Storage="_HotProess", ThisKey="UnitId", OtherKey="UnitId", DeleteRule="NO ACTION")]
		public EntitySet<HotProess> HotProess
		{
			get
			{
				return this._HotProess;
			}
			set
			{
				this._HotProess.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_HS_Education_Base_Unit", Storage="_HS_Education", ThisKey="UnitId", OtherKey="EDU_Unit", DeleteRule="NO ACTION")]
		public EntitySet<HS_Education> HS_Education
		{
			get
			{
				return this._HS_Education;
			}
			set
			{
				this._HS_Education.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_PW_IsoInfo_Base_Unit", Storage="_PW_IsoInfo", ThisKey="UnitId", OtherKey="BSU_ID", DeleteRule="NO ACTION")]
		public EntitySet<PW_IsoInfo> PW_IsoInfo
		{
			get
			{
				return this._PW_IsoInfo;
			}
			set
			{
				this._PW_IsoInfo.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Sys_User_Base_Unit", Storage="_Sys_User", ThisKey="UnitId", OtherKey="UnitId", DeleteRule="NO ACTION")]
		public EntitySet<Sys_User> Sys_User
		{
			get
			{
				return this._Sys_User;
			}
			set
			{
				this._Sys_User.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_TP_TestPackage_TP_TestPackage1", Storage="_TP_TestPackage", ThisKey="UnitId", OtherKey="BSU_ID", DeleteRule="NO ACTION")]
		public EntitySet<TP_TestPackage> TP_TestPackage
		{
			get
			{
				return this._TP_TestPackage;
			}
			set
			{
				this._TP_TestPackage.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Base_WorkArea(Base_WorkArea entity)
		{
			this.SendPropertyChanging();
			entity.Base_Unit = this;
		}
		
		private void detach_Base_WorkArea(Base_WorkArea entity)
		{
			this.SendPropertyChanging();
			entity.Base_Unit = null;
		}
		
		private void attach_BO_NDTTrustItem(BO_NDTTrustItem entity)
		{
			this.SendPropertyChanging();
			entity.Base_Unit = this;
		}
		
		private void detach_BO_NDTTrustItem(BO_NDTTrustItem entity)
		{
			this.SendPropertyChanging();
			entity.Base_Unit = null;
		}
		
		private void attach_BO_Point(BO_Point entity)
		{
			this.SendPropertyChanging();
			entity.Base_Unit = this;
		}
		
		private void detach_BO_Point(BO_Point entity)
		{
			this.SendPropertyChanging();
			entity.Base_Unit = null;
		}
		
		private void attach_BO_WeldReportMain(BO_WeldReportMain entity)
		{
			this.SendPropertyChanging();
			entity.Base_Unit = this;
		}
		
		private void detach_BO_WeldReportMain(BO_WeldReportMain entity)
		{
			this.SendPropertyChanging();
			entity.Base_Unit = null;
		}
		
		private void attach_BS_Welder(BS_Welder entity)
		{
			this.SendPropertyChanging();
			entity.Base_Unit = this;
		}
		
		private void detach_BS_Welder(BS_Welder entity)
		{
			this.SendPropertyChanging();
			entity.Base_Unit = null;
		}
		
		private void attach_CH_Check(CH_Check entity)
		{
			this.SendPropertyChanging();
			entity.Base_Unit = this;
		}
		
		private void detach_CH_Check(CH_Check entity)
		{
			this.SendPropertyChanging();
			entity.Base_Unit = null;
		}
		
		private void attach_CH_Repair(CH_Repair entity)
		{
			this.SendPropertyChanging();
			entity.Base_Unit = this;
		}
		
		private void detach_CH_Repair(CH_Repair entity)
		{
			this.SendPropertyChanging();
			entity.Base_Unit = null;
		}
		
		private void attach_ElectrodeBake(ElectrodeBake entity)
		{
			this.SendPropertyChanging();
			entity.Base_Unit = this;
		}
		
		private void detach_ElectrodeBake(ElectrodeBake entity)
		{
			this.SendPropertyChanging();
			entity.Base_Unit = null;
		}
		
		private void attach_ElectrodeRecovery(ElectrodeRecovery entity)
		{
			this.SendPropertyChanging();
			entity.Base_Unit = this;
		}
		
		private void detach_ElectrodeRecovery(ElectrodeRecovery entity)
		{
			this.SendPropertyChanging();
			entity.Base_Unit = null;
		}
		
		private void attach_EWeldRHRecord(EWeldRHRecord entity)
		{
			this.SendPropertyChanging();
			entity.Base_Unit = this;
		}
		
		private void detach_EWeldRHRecord(EWeldRHRecord entity)
		{
			this.SendPropertyChanging();
			entity.Base_Unit = null;
		}
		
		private void attach_HotHard(HotHard entity)
		{
			this.SendPropertyChanging();
			entity.Base_Unit = this;
		}
		
		private void detach_HotHard(HotHard entity)
		{
			this.SendPropertyChanging();
			entity.Base_Unit = null;
		}
		
		private void attach_Unit(HotHard entity)
		{
			this.SendPropertyChanging();
			entity.HotHardUnitBase_Unit = this;
		}
		
		private void detach_Unit(HotHard entity)
		{
			this.SendPropertyChanging();
			entity.HotHardUnitBase_Unit = null;
		}
		
		private void attach_HotProess(HotProess entity)
		{
			this.SendPropertyChanging();
			entity.Base_Unit = this;
		}
		
		private void detach_HotProess(HotProess entity)
		{
			this.SendPropertyChanging();
			entity.Base_Unit = null;
		}
		
		private void attach_HS_Education(HS_Education entity)
		{
			this.SendPropertyChanging();
			entity.Base_Unit = this;
		}
		
		private void detach_HS_Education(HS_Education entity)
		{
			this.SendPropertyChanging();
			entity.Base_Unit = null;
		}
		
		private void attach_PW_IsoInfo(PW_IsoInfo entity)
		{
			this.SendPropertyChanging();
			entity.Base_Unit = this;
		}
		
		private void detach_PW_IsoInfo(PW_IsoInfo entity)
		{
			this.SendPropertyChanging();
			entity.Base_Unit = null;
		}
		
		private void attach_Sys_User(Sys_User entity)
		{
			this.SendPropertyChanging();
			entity.Base_Unit = this;
		}
		
		private void detach_Sys_User(Sys_User entity)
		{
			this.SendPropertyChanging();
			entity.Base_Unit = null;
		}
		
		private void attach_TP_TestPackage(TP_TestPackage entity)
		{
			this.SendPropertyChanging();
			entity.Base_Unit = this;
		}
		
		private void detach_TP_TestPackage(TP_TestPackage entity)
		{
			this.SendPropertyChanging();
			entity.Base_Unit = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Base_WorkArea")]
	public partial class Base_WorkArea : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _WorkAreaId;
		
		private string _WorkAreaCode;
		
		private string _ProjectId;
		
		private string _UnitId;
		
		private System.Nullable<int> _InstallationId;
		
		private string _Def;
		
		private string _SupervisorUnitId;
		
		private EntityRef<Base_Installation> _Base_Installation;
		
		private EntityRef<Base_Project> _Base_Project;
		
		private EntityRef<Base_Unit> _Base_Unit;
		
		private EntitySet<PW_IsoInfo> _PW_IsoInfo;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnWorkAreaIdChanging(string value);
    partial void OnWorkAreaIdChanged();
    partial void OnWorkAreaCodeChanging(string value);
    partial void OnWorkAreaCodeChanged();
    partial void OnProjectIdChanging(string value);
    partial void OnProjectIdChanged();
    partial void OnUnitIdChanging(string value);
    partial void OnUnitIdChanged();
    partial void OnInstallationIdChanging(System.Nullable<int> value);
    partial void OnInstallationIdChanged();
    partial void OnDefChanging(string value);
    partial void OnDefChanged();
    partial void OnSupervisorUnitIdChanging(string value);
    partial void OnSupervisorUnitIdChanged();
    #endregion
		
		public Base_WorkArea()
		{
			this._Base_Installation = default(EntityRef<Base_Installation>);
			this._Base_Project = default(EntityRef<Base_Project>);
			this._Base_Unit = default(EntityRef<Base_Unit>);
			this._PW_IsoInfo = new EntitySet<PW_IsoInfo>(new Action<PW_IsoInfo>(this.attach_PW_IsoInfo), new Action<PW_IsoInfo>(this.detach_PW_IsoInfo));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WorkAreaId", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string WorkAreaId
		{
			get
			{
				return this._WorkAreaId;
			}
			set
			{
				if ((this._WorkAreaId != value))
				{
					this.OnWorkAreaIdChanging(value);
					this.SendPropertyChanging();
					this._WorkAreaId = value;
					this.SendPropertyChanged("WorkAreaId");
					this.OnWorkAreaIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WorkAreaCode", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string WorkAreaCode
		{
			get
			{
				return this._WorkAreaCode;
			}
			set
			{
				if ((this._WorkAreaCode != value))
				{
					this.OnWorkAreaCodeChanging(value);
					this.SendPropertyChanging();
					this._WorkAreaCode = value;
					this.SendPropertyChanged("WorkAreaCode");
					this.OnWorkAreaCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProjectId", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string ProjectId
		{
			get
			{
				return this._ProjectId;
			}
			set
			{
				if ((this._ProjectId != value))
				{
					if (this._Base_Project.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProjectIdChanging(value);
					this.SendPropertyChanging();
					this._ProjectId = value;
					this.SendPropertyChanged("ProjectId");
					this.OnProjectIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitId", DbType="NVarChar(50)")]
		public string UnitId
		{
			get
			{
				return this._UnitId;
			}
			set
			{
				if ((this._UnitId != value))
				{
					if (this._Base_Unit.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUnitIdChanging(value);
					this.SendPropertyChanging();
					this._UnitId = value;
					this.SendPropertyChanged("UnitId");
					this.OnUnitIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InstallationId", DbType="Int")]
		public System.Nullable<int> InstallationId
		{
			get
			{
				return this._InstallationId;
			}
			set
			{
				if ((this._InstallationId != value))
				{
					if (this._Base_Installation.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnInstallationIdChanging(value);
					this.SendPropertyChanging();
					this._InstallationId = value;
					this.SendPropertyChanged("InstallationId");
					this.OnInstallationIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Def", DbType="NVarChar(400)")]
		public string Def
		{
			get
			{
				return this._Def;
			}
			set
			{
				if ((this._Def != value))
				{
					this.OnDefChanging(value);
					this.SendPropertyChanging();
					this._Def = value;
					this.SendPropertyChanged("Def");
					this.OnDefChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SupervisorUnitId", DbType="NVarChar(50)")]
		public string SupervisorUnitId
		{
			get
			{
				return this._SupervisorUnitId;
			}
			set
			{
				if ((this._SupervisorUnitId != value))
				{
					this.OnSupervisorUnitIdChanging(value);
					this.SendPropertyChanging();
					this._SupervisorUnitId = value;
					this.SendPropertyChanged("SupervisorUnitId");
					this.OnSupervisorUnitIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Base_WorkArea_Base_Installation", Storage="_Base_Installation", ThisKey="InstallationId", OtherKey="InstallationId", IsForeignKey=true)]
		public Base_Installation Base_Installation
		{
			get
			{
				return this._Base_Installation.Entity;
			}
			set
			{
				Base_Installation previousValue = this._Base_Installation.Entity;
				if (((previousValue != value) 
							|| (this._Base_Installation.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Base_Installation.Entity = null;
						previousValue.Base_WorkArea.Remove(this);
					}
					this._Base_Installation.Entity = value;
					if ((value != null))
					{
						value.Base_WorkArea.Add(this);
						this._InstallationId = value.InstallationId;
					}
					else
					{
						this._InstallationId = default(Nullable<int>);
					}
					this.SendPropertyChanged("Base_Installation");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Base_WorkArea_Base_Project", Storage="_Base_Project", ThisKey="ProjectId", OtherKey="ProjectId", IsForeignKey=true)]
		public Base_Project Base_Project
		{
			get
			{
				return this._Base_Project.Entity;
			}
			set
			{
				Base_Project previousValue = this._Base_Project.Entity;
				if (((previousValue != value) 
							|| (this._Base_Project.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Base_Project.Entity = null;
						previousValue.Base_WorkArea.Remove(this);
					}
					this._Base_Project.Entity = value;
					if ((value != null))
					{
						value.Base_WorkArea.Add(this);
						this._ProjectId = value.ProjectId;
					}
					else
					{
						this._ProjectId = default(string);
					}
					this.SendPropertyChanged("Base_Project");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Base_WorkArea_Base_Unit", Storage="_Base_Unit", ThisKey="UnitId", OtherKey="UnitId", IsForeignKey=true)]
		public Base_Unit Base_Unit
		{
			get
			{
				return this._Base_Unit.Entity;
			}
			set
			{
				Base_Unit previousValue = this._Base_Unit.Entity;
				if (((previousValue != value) 
							|| (this._Base_Unit.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Base_Unit.Entity = null;
						previousValue.Base_WorkArea.Remove(this);
					}
					this._Base_Unit.Entity = value;
					if ((value != null))
					{
						value.Base_WorkArea.Add(this);
						this._UnitId = value.UnitId;
					}
					else
					{
						this._UnitId = default(string);
					}
					this.SendPropertyChanged("Base_Unit");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_PW_IsoInfo_Base_WorkArea", Storage="_PW_IsoInfo", ThisKey="WorkAreaId", OtherKey="BAW_ID", DeleteRule="NO ACTION")]
		public EntitySet<PW_IsoInfo> PW_IsoInfo
		{
			get
			{
				return this._PW_IsoInfo;
			}
			set
			{
				this._PW_IsoInfo.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_PW_IsoInfo(PW_IsoInfo entity)
		{
			this.SendPropertyChanging();
			entity.Base_WorkArea = this;
		}
		
		private void detach_PW_IsoInfo(PW_IsoInfo entity)
		{
			this.SendPropertyChanging();
			entity.Base_WorkArea = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.BO_Device")]
	public partial class BO_Device : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Device_ID;
		
		private string _ProjectId;
		
		private string _Device_Code;
		
		private string _Device_Name;
		
		private string _Device_Def;
		
		private EntityRef<Base_Project> _Base_Project;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDevice_IDChanging(string value);
    partial void OnDevice_IDChanged();
    partial void OnProjectIdChanging(string value);
    partial void OnProjectIdChanged();
    partial void OnDevice_CodeChanging(string value);
    partial void OnDevice_CodeChanged();
    partial void OnDevice_NameChanging(string value);
    partial void OnDevice_NameChanged();
    partial void OnDevice_DefChanging(string value);
    partial void OnDevice_DefChanged();
    #endregion
		
		public BO_Device()
		{
			this._Base_Project = default(EntityRef<Base_Project>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Device_ID", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Device_ID
		{
			get
			{
				return this._Device_ID;
			}
			set
			{
				if ((this._Device_ID != value))
				{
					this.OnDevice_IDChanging(value);
					this.SendPropertyChanging();
					this._Device_ID = value;
					this.SendPropertyChanged("Device_ID");
					this.OnDevice_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProjectId", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string ProjectId
		{
			get
			{
				return this._ProjectId;
			}
			set
			{
				if ((this._ProjectId != value))
				{
					if (this._Base_Project.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProjectIdChanging(value);
					this.SendPropertyChanging();
					this._ProjectId = value;
					this.SendPropertyChanged("ProjectId");
					this.OnProjectIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Device_Code", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Device_Code
		{
			get
			{
				return this._Device_Code;
			}
			set
			{
				if ((this._Device_Code != value))
				{
					this.OnDevice_CodeChanging(value);
					this.SendPropertyChanging();
					this._Device_Code = value;
					this.SendPropertyChanged("Device_Code");
					this.OnDevice_CodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Device_Name", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Device_Name
		{
			get
			{
				return this._Device_Name;
			}
			set
			{
				if ((this._Device_Name != value))
				{
					this.OnDevice_NameChanging(value);
					this.SendPropertyChanging();
					this._Device_Name = value;
					this.SendPropertyChanged("Device_Name");
					this.OnDevice_NameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Device_Def", DbType="VarChar(100)")]
		public string Device_Def
		{
			get
			{
				return this._Device_Def;
			}
			set
			{
				if ((this._Device_Def != value))
				{
					this.OnDevice_DefChanging(value);
					this.SendPropertyChanging();
					this._Device_Def = value;
					this.SendPropertyChanged("Device_Def");
					this.OnDevice_DefChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_BO_Device_Base_Project", Storage="_Base_Project", ThisKey="ProjectId", OtherKey="ProjectId", IsForeignKey=true)]
		public Base_Project Base_Project
		{
			get
			{
				return this._Base_Project.Entity;
			}
			set
			{
				Base_Project previousValue = this._Base_Project.Entity;
				if (((previousValue != value) 
							|| (this._Base_Project.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Base_Project.Entity = null;
						previousValue.BO_Device.Remove(this);
					}
					this._Base_Project.Entity = value;
					if ((value != null))
					{
						value.BO_Device.Add(this);
						this._ProjectId = value.ProjectId;
					}
					else
					{
						this._ProjectId = default(string);
					}
					this.SendPropertyChanged("Base_Project");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.BO_NDTTrust")]
	public partial class BO_NDTTrust : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _NDTT_ID;
		
		private string _NDTT_CheckCode;
		
		private string _NDTT_Type;
		
		private string _NDTT_Specification;
		
		private System.Nullable<int> _NDTT_Number;
		
		private string _NDTR_ID;
		
		private string _STE_ID;
		
		private string _WED_ID;
		
		private string _NDTT_ExtendCheck;
		
		private string _NDTT_Remark;
		
		private string _CH_TrustID;
		
		private EntitySet<BO_NDTTrustItem> _BO_NDTTrustItem;
		
		private EntityRef<BS_NDTRate> _BS_NDTRate;
		
		private EntityRef<BS_Steel> _BS_Steel;
		
		private EntityRef<BS_Welder> _BS_Welder;
		
		private EntityRef<CH_Trust> _CH_Trust;
		
		private EntitySet<PW_JointInfo> _PW_JointInfo;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnNDTT_IDChanging(string value);
    partial void OnNDTT_IDChanged();
    partial void OnNDTT_CheckCodeChanging(string value);
    partial void OnNDTT_CheckCodeChanged();
    partial void OnNDTT_TypeChanging(string value);
    partial void OnNDTT_TypeChanged();
    partial void OnNDTT_SpecificationChanging(string value);
    partial void OnNDTT_SpecificationChanged();
    partial void OnNDTT_NumberChanging(System.Nullable<int> value);
    partial void OnNDTT_NumberChanged();
    partial void OnNDTR_IDChanging(string value);
    partial void OnNDTR_IDChanged();
    partial void OnSTE_IDChanging(string value);
    partial void OnSTE_IDChanged();
    partial void OnWED_IDChanging(string value);
    partial void OnWED_IDChanged();
    partial void OnNDTT_ExtendCheckChanging(string value);
    partial void OnNDTT_ExtendCheckChanged();
    partial void OnNDTT_RemarkChanging(string value);
    partial void OnNDTT_RemarkChanged();
    partial void OnCH_TrustIDChanging(string value);
    partial void OnCH_TrustIDChanged();
    #endregion
		
		public BO_NDTTrust()
		{
			this._BO_NDTTrustItem = new EntitySet<BO_NDTTrustItem>(new Action<BO_NDTTrustItem>(this.attach_BO_NDTTrustItem), new Action<BO_NDTTrustItem>(this.detach_BO_NDTTrustItem));
			this._BS_NDTRate = default(EntityRef<BS_NDTRate>);
			this._BS_Steel = default(EntityRef<BS_Steel>);
			this._BS_Welder = default(EntityRef<BS_Welder>);
			this._CH_Trust = default(EntityRef<CH_Trust>);
			this._PW_JointInfo = new EntitySet<PW_JointInfo>(new Action<PW_JointInfo>(this.attach_PW_JointInfo), new Action<PW_JointInfo>(this.detach_PW_JointInfo));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NDTT_ID", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string NDTT_ID
		{
			get
			{
				return this._NDTT_ID;
			}
			set
			{
				if ((this._NDTT_ID != value))
				{
					this.OnNDTT_IDChanging(value);
					this.SendPropertyChanging();
					this._NDTT_ID = value;
					this.SendPropertyChanged("NDTT_ID");
					this.OnNDTT_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NDTT_CheckCode", DbType="VarChar(50)")]
		public string NDTT_CheckCode
		{
			get
			{
				return this._NDTT_CheckCode;
			}
			set
			{
				if ((this._NDTT_CheckCode != value))
				{
					this.OnNDTT_CheckCodeChanging(value);
					this.SendPropertyChanging();
					this._NDTT_CheckCode = value;
					this.SendPropertyChanged("NDTT_CheckCode");
					this.OnNDTT_CheckCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NDTT_Type", DbType="VarChar(30)")]
		public string NDTT_Type
		{
			get
			{
				return this._NDTT_Type;
			}
			set
			{
				if ((this._NDTT_Type != value))
				{
					this.OnNDTT_TypeChanging(value);
					this.SendPropertyChanging();
					this._NDTT_Type = value;
					this.SendPropertyChanged("NDTT_Type");
					this.OnNDTT_TypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NDTT_Specification", DbType="VarChar(50)")]
		public string NDTT_Specification
		{
			get
			{
				return this._NDTT_Specification;
			}
			set
			{
				if ((this._NDTT_Specification != value))
				{
					this.OnNDTT_SpecificationChanging(value);
					this.SendPropertyChanging();
					this._NDTT_Specification = value;
					this.SendPropertyChanged("NDTT_Specification");
					this.OnNDTT_SpecificationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NDTT_Number", DbType="Int")]
		public System.Nullable<int> NDTT_Number
		{
			get
			{
				return this._NDTT_Number;
			}
			set
			{
				if ((this._NDTT_Number != value))
				{
					this.OnNDTT_NumberChanging(value);
					this.SendPropertyChanging();
					this._NDTT_Number = value;
					this.SendPropertyChanged("NDTT_Number");
					this.OnNDTT_NumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NDTR_ID", DbType="VarChar(50)")]
		public string NDTR_ID
		{
			get
			{
				return this._NDTR_ID;
			}
			set
			{
				if ((this._NDTR_ID != value))
				{
					if (this._BS_NDTRate.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnNDTR_IDChanging(value);
					this.SendPropertyChanging();
					this._NDTR_ID = value;
					this.SendPropertyChanged("NDTR_ID");
					this.OnNDTR_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_STE_ID", DbType="VarChar(50)")]
		public string STE_ID
		{
			get
			{
				return this._STE_ID;
			}
			set
			{
				if ((this._STE_ID != value))
				{
					if (this._BS_Steel.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSTE_IDChanging(value);
					this.SendPropertyChanging();
					this._STE_ID = value;
					this.SendPropertyChanged("STE_ID");
					this.OnSTE_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WED_ID", DbType="NVarChar(50)")]
		public string WED_ID
		{
			get
			{
				return this._WED_ID;
			}
			set
			{
				if ((this._WED_ID != value))
				{
					if (this._BS_Welder.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnWED_IDChanging(value);
					this.SendPropertyChanging();
					this._WED_ID = value;
					this.SendPropertyChanged("WED_ID");
					this.OnWED_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NDTT_ExtendCheck", DbType="VarChar(50)")]
		public string NDTT_ExtendCheck
		{
			get
			{
				return this._NDTT_ExtendCheck;
			}
			set
			{
				if ((this._NDTT_ExtendCheck != value))
				{
					this.OnNDTT_ExtendCheckChanging(value);
					this.SendPropertyChanging();
					this._NDTT_ExtendCheck = value;
					this.SendPropertyChanged("NDTT_ExtendCheck");
					this.OnNDTT_ExtendCheckChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NDTT_Remark", DbType="VarChar(100)")]
		public string NDTT_Remark
		{
			get
			{
				return this._NDTT_Remark;
			}
			set
			{
				if ((this._NDTT_Remark != value))
				{
					this.OnNDTT_RemarkChanging(value);
					this.SendPropertyChanging();
					this._NDTT_Remark = value;
					this.SendPropertyChanged("NDTT_Remark");
					this.OnNDTT_RemarkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CH_TrustID", DbType="VarChar(50)")]
		public string CH_TrustID
		{
			get
			{
				return this._CH_TrustID;
			}
			set
			{
				if ((this._CH_TrustID != value))
				{
					if (this._CH_Trust.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCH_TrustIDChanging(value);
					this.SendPropertyChanging();
					this._CH_TrustID = value;
					this.SendPropertyChanged("CH_TrustID");
					this.OnCH_TrustIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_BO_NDTTR_REFERENCE_BO_NDTTR", Storage="_BO_NDTTrustItem", ThisKey="NDTT_ID", OtherKey="NDTT_ID", DeleteRule="NO ACTION")]
		public EntitySet<BO_NDTTrustItem> BO_NDTTrustItem
		{
			get
			{
				return this._BO_NDTTrustItem;
			}
			set
			{
				this._BO_NDTTrustItem.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_BO_NDTTR_REFERENCE_BS_NDTRA", Storage="_BS_NDTRate", ThisKey="NDTR_ID", OtherKey="NDTR_ID", IsForeignKey=true)]
		public BS_NDTRate BS_NDTRate
		{
			get
			{
				return this._BS_NDTRate.Entity;
			}
			set
			{
				BS_NDTRate previousValue = this._BS_NDTRate.Entity;
				if (((previousValue != value) 
							|| (this._BS_NDTRate.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._BS_NDTRate.Entity = null;
						previousValue.BO_NDTTrust.Remove(this);
					}
					this._BS_NDTRate.Entity = value;
					if ((value != null))
					{
						value.BO_NDTTrust.Add(this);
						this._NDTR_ID = value.NDTR_ID;
					}
					else
					{
						this._NDTR_ID = default(string);
					}
					this.SendPropertyChanged("BS_NDTRate");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_BO_NDTTR_REFERENCE_BS_STEEL", Storage="_BS_Steel", ThisKey="STE_ID", OtherKey="STE_ID", IsForeignKey=true)]
		public BS_Steel BS_Steel
		{
			get
			{
				return this._BS_Steel.Entity;
			}
			set
			{
				BS_Steel previousValue = this._BS_Steel.Entity;
				if (((previousValue != value) 
							|| (this._BS_Steel.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._BS_Steel.Entity = null;
						previousValue.BO_NDTTrust.Remove(this);
					}
					this._BS_Steel.Entity = value;
					if ((value != null))
					{
						value.BO_NDTTrust.Add(this);
						this._STE_ID = value.STE_ID;
					}
					else
					{
						this._STE_ID = default(string);
					}
					this.SendPropertyChanged("BS_Steel");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_BO_NDTTR_REFERENCE_BS_WELDE", Storage="_BS_Welder", ThisKey="WED_ID", OtherKey="WED_ID", IsForeignKey=true)]
		public BS_Welder BS_Welder
		{
			get
			{
				return this._BS_Welder.Entity;
			}
			set
			{
				BS_Welder previousValue = this._BS_Welder.Entity;
				if (((previousValue != value) 
							|| (this._BS_Welder.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._BS_Welder.Entity = null;
						previousValue.BO_NDTTrust.Remove(this);
					}
					this._BS_Welder.Entity = value;
					if ((value != null))
					{
						value.BO_NDTTrust.Add(this);
						this._WED_ID = value.WED_ID;
					}
					else
					{
						this._WED_ID = default(string);
					}
					this.SendPropertyChanged("BS_Welder");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_BO_NDTTrust_CH_Trust", Storage="_CH_Trust", ThisKey="CH_TrustID", OtherKey="CH_TrustID", IsForeignKey=true)]
		public CH_Trust CH_Trust
		{
			get
			{
				return this._CH_Trust.Entity;
			}
			set
			{
				CH_Trust previousValue = this._CH_Trust.Entity;
				if (((previousValue != value) 
							|| (this._CH_Trust.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CH_Trust.Entity = null;
						previousValue.BO_NDTTrust.Remove(this);
					}
					this._CH_Trust.Entity = value;
					if ((value != null))
					{
						value.BO_NDTTrust.Add(this);
						this._CH_TrustID = value.CH_TrustID;
					}
					else
					{
						this._CH_TrustID = default(string);
					}
					this.SendPropertyChanged("CH_Trust");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_PW_JointInfo_BO_NDTTrust", Storage="_PW_JointInfo", ThisKey="NDTT_ID", OtherKey="NDTT_ID", DeleteRule="NO ACTION")]
		public EntitySet<PW_JointInfo> PW_JointInfo
		{
			get
			{
				return this._PW_JointInfo;
			}
			set
			{
				this._PW_JointInfo.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_BO_NDTTrustItem(BO_NDTTrustItem entity)
		{
			this.SendPropertyChanging();
			entity.BO_NDTTrust = this;
		}
		
		private void detach_BO_NDTTrustItem(BO_NDTTrustItem entity)
		{
			this.SendPropertyChanging();
			entity.BO_NDTTrust = null;
		}
		
		private void attach_PW_JointInfo(PW_JointInfo entity)
		{
			this.SendPropertyChanging();
			entity.BO_NDTTrust = this;
		}
		
		private void detach_PW_JointInfo(PW_JointInfo entity)
		{
			this.SendPropertyChanging();
			entity.BO_NDTTrust = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.BO_NDTTrustItem")]
	public partial class BO_NDTTrustItem : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _NDTTI_ID;
		
		private string _NDTT_ID;
		
		private string _BSU_ID;
		
		private string _NDTTI_Code;
		
		private string _NDTTI_TestPlace;
		
		private string _NDTTI_Project;
		
		private string _NDTTI_UnitProject;
		
		private string _NDTTI_CheckName;
		
		private string _ISO_ID;
		
		private string _NDTTI_PassClass;
		
		private System.Nullable<System.DateTime> _NDTTI_CheckDate;
		
		private string _NDTTI_CheckMan;
		
		private string _NDTTI_ProjectType;
		
		private EntityRef<BO_NDTTrust> _BO_NDTTrust;
		
		private EntityRef<PW_IsoInfo> _PW_IsoInfo;
		
		private EntityRef<Base_Unit> _Base_Unit;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnNDTTI_IDChanging(string value);
    partial void OnNDTTI_IDChanged();
    partial void OnNDTT_IDChanging(string value);
    partial void OnNDTT_IDChanged();
    partial void OnBSU_IDChanging(string value);
    partial void OnBSU_IDChanged();
    partial void OnNDTTI_CodeChanging(string value);
    partial void OnNDTTI_CodeChanged();
    partial void OnNDTTI_TestPlaceChanging(string value);
    partial void OnNDTTI_TestPlaceChanged();
    partial void OnNDTTI_ProjectChanging(string value);
    partial void OnNDTTI_ProjectChanged();
    partial void OnNDTTI_UnitProjectChanging(string value);
    partial void OnNDTTI_UnitProjectChanged();
    partial void OnNDTTI_CheckNameChanging(string value);
    partial void OnNDTTI_CheckNameChanged();
    partial void OnISO_IDChanging(string value);
    partial void OnISO_IDChanged();
    partial void OnNDTTI_PassClassChanging(string value);
    partial void OnNDTTI_PassClassChanged();
    partial void OnNDTTI_CheckDateChanging(System.Nullable<System.DateTime> value);
    partial void OnNDTTI_CheckDateChanged();
    partial void OnNDTTI_CheckManChanging(string value);
    partial void OnNDTTI_CheckManChanged();
    partial void OnNDTTI_ProjectTypeChanging(string value);
    partial void OnNDTTI_ProjectTypeChanged();
    #endregion
		
		public BO_NDTTrustItem()
		{
			this._BO_NDTTrust = default(EntityRef<BO_NDTTrust>);
			this._PW_IsoInfo = default(EntityRef<PW_IsoInfo>);
			this._Base_Unit = default(EntityRef<Base_Unit>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NDTTI_ID", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string NDTTI_ID
		{
			get
			{
				return this._NDTTI_ID;
			}
			set
			{
				if ((this._NDTTI_ID != value))
				{
					this.OnNDTTI_IDChanging(value);
					this.SendPropertyChanging();
					this._NDTTI_ID = value;
					this.SendPropertyChanged("NDTTI_ID");
					this.OnNDTTI_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NDTT_ID", DbType="VarChar(50)")]
		public string NDTT_ID
		{
			get
			{
				return this._NDTT_ID;
			}
			set
			{
				if ((this._NDTT_ID != value))
				{
					if (this._BO_NDTTrust.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnNDTT_IDChanging(value);
					this.SendPropertyChanging();
					this._NDTT_ID = value;
					this.SendPropertyChanged("NDTT_ID");
					this.OnNDTT_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BSU_ID", DbType="NVarChar(50)")]
		public string BSU_ID
		{
			get
			{
				return this._BSU_ID;
			}
			set
			{
				if ((this._BSU_ID != value))
				{
					if (this._Base_Unit.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBSU_IDChanging(value);
					this.SendPropertyChanging();
					this._BSU_ID = value;
					this.SendPropertyChanged("BSU_ID");
					this.OnBSU_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NDTTI_Code", DbType="VarChar(50)")]
		public string NDTTI_Code
		{
			get
			{
				return this._NDTTI_Code;
			}
			set
			{
				if ((this._NDTTI_Code != value))
				{
					this.OnNDTTI_CodeChanging(value);
					this.SendPropertyChanging();
					this._NDTTI_Code = value;
					this.SendPropertyChanged("NDTTI_Code");
					this.OnNDTTI_CodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NDTTI_TestPlace", DbType="VarChar(50)")]
		public string NDTTI_TestPlace
		{
			get
			{
				return this._NDTTI_TestPlace;
			}
			set
			{
				if ((this._NDTTI_TestPlace != value))
				{
					this.OnNDTTI_TestPlaceChanging(value);
					this.SendPropertyChanging();
					this._NDTTI_TestPlace = value;
					this.SendPropertyChanged("NDTTI_TestPlace");
					this.OnNDTTI_TestPlaceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NDTTI_Project", DbType="VarChar(50)")]
		public string NDTTI_Project
		{
			get
			{
				return this._NDTTI_Project;
			}
			set
			{
				if ((this._NDTTI_Project != value))
				{
					this.OnNDTTI_ProjectChanging(value);
					this.SendPropertyChanging();
					this._NDTTI_Project = value;
					this.SendPropertyChanged("NDTTI_Project");
					this.OnNDTTI_ProjectChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NDTTI_UnitProject", DbType="VarChar(50)")]
		public string NDTTI_UnitProject
		{
			get
			{
				return this._NDTTI_UnitProject;
			}
			set
			{
				if ((this._NDTTI_UnitProject != value))
				{
					this.OnNDTTI_UnitProjectChanging(value);
					this.SendPropertyChanging();
					this._NDTTI_UnitProject = value;
					this.SendPropertyChanged("NDTTI_UnitProject");
					this.OnNDTTI_UnitProjectChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NDTTI_CheckName", DbType="VarChar(50)")]
		public string NDTTI_CheckName
		{
			get
			{
				return this._NDTTI_CheckName;
			}
			set
			{
				if ((this._NDTTI_CheckName != value))
				{
					this.OnNDTTI_CheckNameChanging(value);
					this.SendPropertyChanging();
					this._NDTTI_CheckName = value;
					this.SendPropertyChanged("NDTTI_CheckName");
					this.OnNDTTI_CheckNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ISO_ID", DbType="VarChar(50)")]
		public string ISO_ID
		{
			get
			{
				return this._ISO_ID;
			}
			set
			{
				if ((this._ISO_ID != value))
				{
					if (this._PW_IsoInfo.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnISO_IDChanging(value);
					this.SendPropertyChanging();
					this._ISO_ID = value;
					this.SendPropertyChanged("ISO_ID");
					this.OnISO_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NDTTI_PassClass", DbType="VarChar(10)")]
		public string NDTTI_PassClass
		{
			get
			{
				return this._NDTTI_PassClass;
			}
			set
			{
				if ((this._NDTTI_PassClass != value))
				{
					this.OnNDTTI_PassClassChanging(value);
					this.SendPropertyChanging();
					this._NDTTI_PassClass = value;
					this.SendPropertyChanged("NDTTI_PassClass");
					this.OnNDTTI_PassClassChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NDTTI_CheckDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> NDTTI_CheckDate
		{
			get
			{
				return this._NDTTI_CheckDate;
			}
			set
			{
				if ((this._NDTTI_CheckDate != value))
				{
					this.OnNDTTI_CheckDateChanging(value);
					this.SendPropertyChanging();
					this._NDTTI_CheckDate = value;
					this.SendPropertyChanged("NDTTI_CheckDate");
					this.OnNDTTI_CheckDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NDTTI_CheckMan", DbType="VarChar(10)")]
		public string NDTTI_CheckMan
		{
			get
			{
				return this._NDTTI_CheckMan;
			}
			set
			{
				if ((this._NDTTI_CheckMan != value))
				{
					this.OnNDTTI_CheckManChanging(value);
					this.SendPropertyChanging();
					this._NDTTI_CheckMan = value;
					this.SendPropertyChanged("NDTTI_CheckMan");
					this.OnNDTTI_CheckManChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NDTTI_ProjectType", DbType="VarChar(50)")]
		public string NDTTI_ProjectType
		{
			get
			{
				return this._NDTTI_ProjectType;
			}
			set
			{
				if ((this._NDTTI_ProjectType != value))
				{
					this.OnNDTTI_ProjectTypeChanging(value);
					this.SendPropertyChanging();
					this._NDTTI_ProjectType = value;
					this.SendPropertyChanged("NDTTI_ProjectType");
					this.OnNDTTI_ProjectTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_BO_NDTTR_REFERENCE_BO_NDTTR", Storage="_BO_NDTTrust", ThisKey="NDTT_ID", OtherKey="NDTT_ID", IsForeignKey=true)]
		public BO_NDTTrust BO_NDTTrust
		{
			get
			{
				return this._BO_NDTTrust.Entity;
			}
			set
			{
				BO_NDTTrust previousValue = this._BO_NDTTrust.Entity;
				if (((previousValue != value) 
							|| (this._BO_NDTTrust.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._BO_NDTTrust.Entity = null;
						previousValue.BO_NDTTrustItem.Remove(this);
					}
					this._BO_NDTTrust.Entity = value;
					if ((value != null))
					{
						value.BO_NDTTrustItem.Add(this);
						this._NDTT_ID = value.NDTT_ID;
					}
					else
					{
						this._NDTT_ID = default(string);
					}
					this.SendPropertyChanged("BO_NDTTrust");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_BO_NDTTR_REFERENCE_PW_ISOIN", Storage="_PW_IsoInfo", ThisKey="ISO_ID", OtherKey="ISO_ID", IsForeignKey=true)]
		public PW_IsoInfo PW_IsoInfo
		{
			get
			{
				return this._PW_IsoInfo.Entity;
			}
			set
			{
				PW_IsoInfo previousValue = this._PW_IsoInfo.Entity;
				if (((previousValue != value) 
							|| (this._PW_IsoInfo.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PW_IsoInfo.Entity = null;
						previousValue.BO_NDTTrustItem.Remove(this);
					}
					this._PW_IsoInfo.Entity = value;
					if ((value != null))
					{
						value.BO_NDTTrustItem.Add(this);
						this._ISO_ID = value.ISO_ID;
					}
					else
					{
						this._ISO_ID = default(string);
					}
					this.SendPropertyChanged("PW_IsoInfo");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_BO_NDTTrustItem_BO_NDTTrustItem", Storage="_Base_Unit", ThisKey="BSU_ID", OtherKey="UnitId", IsForeignKey=true)]
		public Base_Unit Base_Unit
		{
			get
			{
				return this._Base_Unit.Entity;
			}
			set
			{
				Base_Unit previousValue = this._Base_Unit.Entity;
				if (((previousValue != value) 
							|| (this._Base_Unit.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Base_Unit.Entity = null;
						previousValue.BO_NDTTrustItem.Remove(this);
					}
					this._Base_Unit.Entity = value;
					if ((value != null))
					{
						value.BO_NDTTrustItem.Add(this);
						this._BSU_ID = value.UnitId;
					}
					else
					{
						this._BSU_ID = default(string);
					}
					this.SendPropertyChanged("Base_Unit");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.BO_Point")]
	public partial class BO_Point : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _PW_PointID;
		
		private string _ProjectId;
		
		private string _BSU_ID;
		
		private System.Nullable<int> _InstallationId;
		
		private string _PW_PointNo;
		
		private string _PW_PointType;
		
		private System.Nullable<System.DateTime> _PW_PointDate;
		
		private string _PW_Tabler;
		
		private System.Nullable<System.DateTime> _PW_TablerDate;
		
		private string _PW_Remark;
		
		private EntityRef<Base_Project> _Base_Project;
		
		private EntityRef<Base_Unit> _Base_Unit;
		
		private EntitySet<PW_JointInfo> _PW_JointInfo;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPW_PointIDChanging(string value);
    partial void OnPW_PointIDChanged();
    partial void OnProjectIdChanging(string value);
    partial void OnProjectIdChanged();
    partial void OnBSU_IDChanging(string value);
    partial void OnBSU_IDChanged();
    partial void OnInstallationIdChanging(System.Nullable<int> value);
    partial void OnInstallationIdChanged();
    partial void OnPW_PointNoChanging(string value);
    partial void OnPW_PointNoChanged();
    partial void OnPW_PointTypeChanging(string value);
    partial void OnPW_PointTypeChanged();
    partial void OnPW_PointDateChanging(System.Nullable<System.DateTime> value);
    partial void OnPW_PointDateChanged();
    partial void OnPW_TablerChanging(string value);
    partial void OnPW_TablerChanged();
    partial void OnPW_TablerDateChanging(System.Nullable<System.DateTime> value);
    partial void OnPW_TablerDateChanged();
    partial void OnPW_RemarkChanging(string value);
    partial void OnPW_RemarkChanged();
    #endregion
		
		public BO_Point()
		{
			this._Base_Project = default(EntityRef<Base_Project>);
			this._Base_Unit = default(EntityRef<Base_Unit>);
			this._PW_JointInfo = new EntitySet<PW_JointInfo>(new Action<PW_JointInfo>(this.attach_PW_JointInfo), new Action<PW_JointInfo>(this.detach_PW_JointInfo));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PW_PointID", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string PW_PointID
		{
			get
			{
				return this._PW_PointID;
			}
			set
			{
				if ((this._PW_PointID != value))
				{
					this.OnPW_PointIDChanging(value);
					this.SendPropertyChanging();
					this._PW_PointID = value;
					this.SendPropertyChanged("PW_PointID");
					this.OnPW_PointIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProjectId", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string ProjectId
		{
			get
			{
				return this._ProjectId;
			}
			set
			{
				if ((this._ProjectId != value))
				{
					if (this._Base_Project.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProjectIdChanging(value);
					this.SendPropertyChanging();
					this._ProjectId = value;
					this.SendPropertyChanged("ProjectId");
					this.OnProjectIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BSU_ID", DbType="NVarChar(50)")]
		public string BSU_ID
		{
			get
			{
				return this._BSU_ID;
			}
			set
			{
				if ((this._BSU_ID != value))
				{
					if (this._Base_Unit.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBSU_IDChanging(value);
					this.SendPropertyChanging();
					this._BSU_ID = value;
					this.SendPropertyChanged("BSU_ID");
					this.OnBSU_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InstallationId", DbType="Int")]
		public System.Nullable<int> InstallationId
		{
			get
			{
				return this._InstallationId;
			}
			set
			{
				if ((this._InstallationId != value))
				{
					this.OnInstallationIdChanging(value);
					this.SendPropertyChanging();
					this._InstallationId = value;
					this.SendPropertyChanged("InstallationId");
					this.OnInstallationIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PW_PointNo", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string PW_PointNo
		{
			get
			{
				return this._PW_PointNo;
			}
			set
			{
				if ((this._PW_PointNo != value))
				{
					this.OnPW_PointNoChanging(value);
					this.SendPropertyChanging();
					this._PW_PointNo = value;
					this.SendPropertyChanged("PW_PointNo");
					this.OnPW_PointNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PW_PointType", DbType="VarChar(50)")]
		public string PW_PointType
		{
			get
			{
				return this._PW_PointType;
			}
			set
			{
				if ((this._PW_PointType != value))
				{
					this.OnPW_PointTypeChanging(value);
					this.SendPropertyChanging();
					this._PW_PointType = value;
					this.SendPropertyChanged("PW_PointType");
					this.OnPW_PointTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PW_PointDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> PW_PointDate
		{
			get
			{
				return this._PW_PointDate;
			}
			set
			{
				if ((this._PW_PointDate != value))
				{
					this.OnPW_PointDateChanging(value);
					this.SendPropertyChanging();
					this._PW_PointDate = value;
					this.SendPropertyChanged("PW_PointDate");
					this.OnPW_PointDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PW_Tabler", DbType="VarChar(50)")]
		public string PW_Tabler
		{
			get
			{
				return this._PW_Tabler;
			}
			set
			{
				if ((this._PW_Tabler != value))
				{
					this.OnPW_TablerChanging(value);
					this.SendPropertyChanging();
					this._PW_Tabler = value;
					this.SendPropertyChanged("PW_Tabler");
					this.OnPW_TablerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PW_TablerDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> PW_TablerDate
		{
			get
			{
				return this._PW_TablerDate;
			}
			set
			{
				if ((this._PW_TablerDate != value))
				{
					this.OnPW_TablerDateChanging(value);
					this.SendPropertyChanging();
					this._PW_TablerDate = value;
					this.SendPropertyChanged("PW_TablerDate");
					this.OnPW_TablerDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PW_Remark", DbType="VarChar(100)")]
		public string PW_Remark
		{
			get
			{
				return this._PW_Remark;
			}
			set
			{
				if ((this._PW_Remark != value))
				{
					this.OnPW_RemarkChanging(value);
					this.SendPropertyChanging();
					this._PW_Remark = value;
					this.SendPropertyChanged("PW_Remark");
					this.OnPW_RemarkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_BO_Point_Base_Project", Storage="_Base_Project", ThisKey="ProjectId", OtherKey="ProjectId", IsForeignKey=true)]
		public Base_Project Base_Project
		{
			get
			{
				return this._Base_Project.Entity;
			}
			set
			{
				Base_Project previousValue = this._Base_Project.Entity;
				if (((previousValue != value) 
							|| (this._Base_Project.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Base_Project.Entity = null;
						previousValue.BO_Point.Remove(this);
					}
					this._Base_Project.Entity = value;
					if ((value != null))
					{
						value.BO_Point.Add(this);
						this._ProjectId = value.ProjectId;
					}
					else
					{
						this._ProjectId = default(string);
					}
					this.SendPropertyChanged("Base_Project");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_BO_Point_Base_Unit", Storage="_Base_Unit", ThisKey="BSU_ID", OtherKey="UnitId", IsForeignKey=true)]
		public Base_Unit Base_Unit
		{
			get
			{
				return this._Base_Unit.Entity;
			}
			set
			{
				Base_Unit previousValue = this._Base_Unit.Entity;
				if (((previousValue != value) 
							|| (this._Base_Unit.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Base_Unit.Entity = null;
						previousValue.BO_Point.Remove(this);
					}
					this._Base_Unit.Entity = value;
					if ((value != null))
					{
						value.BO_Point.Add(this);
						this._BSU_ID = value.UnitId;
					}
					else
					{
						this._BSU_ID = default(string);
					}
					this.SendPropertyChanged("Base_Unit");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_PW_JointInfo_BO_Point", Storage="_PW_JointInfo", ThisKey="PW_PointID", OtherKey="PW_PointID", DeleteRule="NO ACTION")]
		public EntitySet<PW_JointInfo> PW_JointInfo
		{
			get
			{
				return this._PW_JointInfo;
			}
			set
			{
				this._PW_JointInfo.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_PW_JointInfo(PW_JointInfo entity)
		{
			this.SendPropertyChanging();
			entity.BO_Point = this;
		}
		
		private void detach_PW_JointInfo(PW_JointInfo entity)
		{
			this.SendPropertyChanging();
			entity.BO_Point = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.BO_WeldReportMain")]
	public partial class BO_WeldReportMain : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _DReportID;
		
		private string _ProjectId;
		
		private System.Nullable<int> _InstallationId;
		
		private string _BSU_ID;
		
		private System.DateTime _JOT_WeldDate;
		
		private string _JOT_DailyReportNo;
		
		private string _CHT_Tabler;
		
		private System.Nullable<System.DateTime> _CHT_TableDate;
		
		private string _JOT_Remark;
		
		private string _SetValue;
		
		private EntityRef<Base_Installation> _Base_Installation;
		
		private EntityRef<Base_Project> _Base_Project;
		
		private EntityRef<Base_Unit> _Base_Unit;
		
		private EntitySet<PW_JointInfo> _PW_JointInfo;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDReportIDChanging(string value);
    partial void OnDReportIDChanged();
    partial void OnProjectIdChanging(string value);
    partial void OnProjectIdChanged();
    partial void OnInstallationIdChanging(System.Nullable<int> value);
    partial void OnInstallationIdChanged();
    partial void OnBSU_IDChanging(string value);
    partial void OnBSU_IDChanged();
    partial void OnJOT_WeldDateChanging(System.DateTime value);
    partial void OnJOT_WeldDateChanged();
    partial void OnJOT_DailyReportNoChanging(string value);
    partial void OnJOT_DailyReportNoChanged();
    partial void OnCHT_TablerChanging(string value);
    partial void OnCHT_TablerChanged();
    partial void OnCHT_TableDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCHT_TableDateChanged();
    partial void OnJOT_RemarkChanging(string value);
    partial void OnJOT_RemarkChanged();
    partial void OnSetValueChanging(string value);
    partial void OnSetValueChanged();
    #endregion
		
		public BO_WeldReportMain()
		{
			this._Base_Installation = default(EntityRef<Base_Installation>);
			this._Base_Project = default(EntityRef<Base_Project>);
			this._Base_Unit = default(EntityRef<Base_Unit>);
			this._PW_JointInfo = new EntitySet<PW_JointInfo>(new Action<PW_JointInfo>(this.attach_PW_JointInfo), new Action<PW_JointInfo>(this.detach_PW_JointInfo));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DReportID", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string DReportID
		{
			get
			{
				return this._DReportID;
			}
			set
			{
				if ((this._DReportID != value))
				{
					this.OnDReportIDChanging(value);
					this.SendPropertyChanging();
					this._DReportID = value;
					this.SendPropertyChanged("DReportID");
					this.OnDReportIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProjectId", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string ProjectId
		{
			get
			{
				return this._ProjectId;
			}
			set
			{
				if ((this._ProjectId != value))
				{
					if (this._Base_Project.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProjectIdChanging(value);
					this.SendPropertyChanging();
					this._ProjectId = value;
					this.SendPropertyChanged("ProjectId");
					this.OnProjectIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InstallationId", DbType="Int")]
		public System.Nullable<int> InstallationId
		{
			get
			{
				return this._InstallationId;
			}
			set
			{
				if ((this._InstallationId != value))
				{
					if (this._Base_Installation.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnInstallationIdChanging(value);
					this.SendPropertyChanging();
					this._InstallationId = value;
					this.SendPropertyChanged("InstallationId");
					this.OnInstallationIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BSU_ID", DbType="NVarChar(50)")]
		public string BSU_ID
		{
			get
			{
				return this._BSU_ID;
			}
			set
			{
				if ((this._BSU_ID != value))
				{
					if (this._Base_Unit.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBSU_IDChanging(value);
					this.SendPropertyChanging();
					this._BSU_ID = value;
					this.SendPropertyChanged("BSU_ID");
					this.OnBSU_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JOT_WeldDate", DbType="DateTime NOT NULL")]
		public System.DateTime JOT_WeldDate
		{
			get
			{
				return this._JOT_WeldDate;
			}
			set
			{
				if ((this._JOT_WeldDate != value))
				{
					this.OnJOT_WeldDateChanging(value);
					this.SendPropertyChanging();
					this._JOT_WeldDate = value;
					this.SendPropertyChanged("JOT_WeldDate");
					this.OnJOT_WeldDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JOT_DailyReportNo", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string JOT_DailyReportNo
		{
			get
			{
				return this._JOT_DailyReportNo;
			}
			set
			{
				if ((this._JOT_DailyReportNo != value))
				{
					this.OnJOT_DailyReportNoChanging(value);
					this.SendPropertyChanging();
					this._JOT_DailyReportNo = value;
					this.SendPropertyChanged("JOT_DailyReportNo");
					this.OnJOT_DailyReportNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CHT_Tabler", DbType="VarChar(20)")]
		public string CHT_Tabler
		{
			get
			{
				return this._CHT_Tabler;
			}
			set
			{
				if ((this._CHT_Tabler != value))
				{
					this.OnCHT_TablerChanging(value);
					this.SendPropertyChanging();
					this._CHT_Tabler = value;
					this.SendPropertyChanged("CHT_Tabler");
					this.OnCHT_TablerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CHT_TableDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CHT_TableDate
		{
			get
			{
				return this._CHT_TableDate;
			}
			set
			{
				if ((this._CHT_TableDate != value))
				{
					this.OnCHT_TableDateChanging(value);
					this.SendPropertyChanging();
					this._CHT_TableDate = value;
					this.SendPropertyChanged("CHT_TableDate");
					this.OnCHT_TableDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JOT_Remark", DbType="VarChar(100)")]
		public string JOT_Remark
		{
			get
			{
				return this._JOT_Remark;
			}
			set
			{
				if ((this._JOT_Remark != value))
				{
					this.OnJOT_RemarkChanging(value);
					this.SendPropertyChanging();
					this._JOT_Remark = value;
					this.SendPropertyChanged("JOT_Remark");
					this.OnJOT_RemarkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SetValue", DbType="NVarChar(10)")]
		public string SetValue
		{
			get
			{
				return this._SetValue;
			}
			set
			{
				if ((this._SetValue != value))
				{
					this.OnSetValueChanging(value);
					this.SendPropertyChanging();
					this._SetValue = value;
					this.SendPropertyChanged("SetValue");
					this.OnSetValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_BO_WeldReportMain_Base_Installation", Storage="_Base_Installation", ThisKey="InstallationId", OtherKey="InstallationId", IsForeignKey=true)]
		public Base_Installation Base_Installation
		{
			get
			{
				return this._Base_Installation.Entity;
			}
			set
			{
				Base_Installation previousValue = this._Base_Installation.Entity;
				if (((previousValue != value) 
							|| (this._Base_Installation.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Base_Installation.Entity = null;
						previousValue.BO_WeldReportMain.Remove(this);
					}
					this._Base_Installation.Entity = value;
					if ((value != null))
					{
						value.BO_WeldReportMain.Add(this);
						this._InstallationId = value.InstallationId;
					}
					else
					{
						this._InstallationId = default(Nullable<int>);
					}
					this.SendPropertyChanged("Base_Installation");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_BO_WeldReportMain_Base_Project", Storage="_Base_Project", ThisKey="ProjectId", OtherKey="ProjectId", IsForeignKey=true)]
		public Base_Project Base_Project
		{
			get
			{
				return this._Base_Project.Entity;
			}
			set
			{
				Base_Project previousValue = this._Base_Project.Entity;
				if (((previousValue != value) 
							|| (this._Base_Project.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Base_Project.Entity = null;
						previousValue.BO_WeldReportMain.Remove(this);
					}
					this._Base_Project.Entity = value;
					if ((value != null))
					{
						value.BO_WeldReportMain.Add(this);
						this._ProjectId = value.ProjectId;
					}
					else
					{
						this._ProjectId = default(string);
					}
					this.SendPropertyChanged("Base_Project");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_BO_WeldReportMain_BO_WeldReportMain", Storage="_Base_Unit", ThisKey="BSU_ID", OtherKey="UnitId", IsForeignKey=true)]
		public Base_Unit Base_Unit
		{
			get
			{
				return this._Base_Unit.Entity;
			}
			set
			{
				Base_Unit previousValue = this._Base_Unit.Entity;
				if (((previousValue != value) 
							|| (this._Base_Unit.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Base_Unit.Entity = null;
						previousValue.BO_WeldReportMain.Remove(this);
					}
					this._Base_Unit.Entity = value;
					if ((value != null))
					{
						value.BO_WeldReportMain.Add(this);
						this._BSU_ID = value.UnitId;
					}
					else
					{
						this._BSU_ID = default(string);
					}
					this.SendPropertyChanged("Base_Unit");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_PW_JointInfo_BO_WeldReportMain", Storage="_PW_JointInfo", ThisKey="DReportID", OtherKey="DReportID", DeleteRule="NO ACTION")]
		public EntitySet<PW_JointInfo> PW_JointInfo
		{
			get
			{
				return this._PW_JointInfo;
			}
			set
			{
				this._PW_JointInfo.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_PW_JointInfo(PW_JointInfo entity)
		{
			this.SendPropertyChanging();
			entity.BO_WeldReportMain = this;
		}
		
		private void detach_PW_JointInfo(PW_JointInfo entity)
		{
			this.SendPropertyChanging();
			entity.BO_WeldReportMain = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.BS_Component")]
	public partial class BS_Component : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _COM_ID;
		
		private string _COM_Code;
		
		private string _COM_Name;
		
		private string _COM_Remark;
		
		private EntitySet<PW_JointInfo> _PW_JointInfo;
		
		private EntitySet<PW_JointInfo> _COM_;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCOM_IDChanging(string value);
    partial void OnCOM_IDChanged();
    partial void OnCOM_CodeChanging(string value);
    partial void OnCOM_CodeChanged();
    partial void OnCOM_NameChanging(string value);
    partial void OnCOM_NameChanged();
    partial void OnCOM_RemarkChanging(string value);
    partial void OnCOM_RemarkChanged();
    #endregion
		
		public BS_Component()
		{
			this._PW_JointInfo = new EntitySet<PW_JointInfo>(new Action<PW_JointInfo>(this.attach_PW_JointInfo), new Action<PW_JointInfo>(this.detach_PW_JointInfo));
			this._COM_ = new EntitySet<PW_JointInfo>(new Action<PW_JointInfo>(this.attach_COM_), new Action<PW_JointInfo>(this.detach_COM_));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_COM_ID", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string COM_ID
		{
			get
			{
				return this._COM_ID;
			}
			set
			{
				if ((this._COM_ID != value))
				{
					this.OnCOM_IDChanging(value);
					this.SendPropertyChanging();
					this._COM_ID = value;
					this.SendPropertyChanged("COM_ID");
					this.OnCOM_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_COM_Code", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string COM_Code
		{
			get
			{
				return this._COM_Code;
			}
			set
			{
				if ((this._COM_Code != value))
				{
					this.OnCOM_CodeChanging(value);
					this.SendPropertyChanging();
					this._COM_Code = value;
					this.SendPropertyChanged("COM_Code");
					this.OnCOM_CodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_COM_Name", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string COM_Name
		{
			get
			{
				return this._COM_Name;
			}
			set
			{
				if ((this._COM_Name != value))
				{
					this.OnCOM_NameChanging(value);
					this.SendPropertyChanging();
					this._COM_Name = value;
					this.SendPropertyChanged("COM_Name");
					this.OnCOM_NameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_COM_Remark", DbType="VarChar(100)")]
		public string COM_Remark
		{
			get
			{
				return this._COM_Remark;
			}
			set
			{
				if ((this._COM_Remark != value))
				{
					this.OnCOM_RemarkChanging(value);
					this.SendPropertyChanging();
					this._COM_Remark = value;
					this.SendPropertyChanged("COM_Remark");
					this.OnCOM_RemarkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_PW_JointInfo_BS_Component", Storage="_PW_JointInfo", ThisKey="COM_ID", OtherKey="JOT_Component1", DeleteRule="NO ACTION")]
		public EntitySet<PW_JointInfo> PW_JointInfo
		{
			get
			{
				return this._PW_JointInfo;
			}
			set
			{
				this._PW_JointInfo.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_PW_JointInfo_BS_Component1", Storage="_COM_", ThisKey="COM_ID", OtherKey="JOT_Component2", DeleteRule="NO ACTION")]
		public EntitySet<PW_JointInfo> COM_
		{
			get
			{
				return this._COM_;
			}
			set
			{
				this._COM_.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_PW_JointInfo(PW_JointInfo entity)
		{
			this.SendPropertyChanging();
			entity.BS_Component = this;
		}
		
		private void detach_PW_JointInfo(PW_JointInfo entity)
		{
			this.SendPropertyChanging();
			entity.BS_Component = null;
		}
		
		private void attach_COM_(PW_JointInfo entity)
		{
			this.SendPropertyChanging();
			entity.JOT_Component2BS_Component = this;
		}
		
		private void detach_COM_(PW_JointInfo entity)
		{
			this.SendPropertyChanging();
			entity.JOT_Component2BS_Component = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.BS_IsoClass")]
	public partial class BS_IsoClass : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ISC_ID;
		
		private string _ISC_IsoCode;
		
		private string _ISC_IsoClass;
		
		private string _ISC_IsoName;
		
		private string _ISC_Remark;
		
		private EntitySet<PW_IsoInfo> _PW_IsoInfo;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnISC_IDChanging(string value);
    partial void OnISC_IDChanged();
    partial void OnISC_IsoCodeChanging(string value);
    partial void OnISC_IsoCodeChanged();
    partial void OnISC_IsoClassChanging(string value);
    partial void OnISC_IsoClassChanged();
    partial void OnISC_IsoNameChanging(string value);
    partial void OnISC_IsoNameChanged();
    partial void OnISC_RemarkChanging(string value);
    partial void OnISC_RemarkChanged();
    #endregion
		
		public BS_IsoClass()
		{
			this._PW_IsoInfo = new EntitySet<PW_IsoInfo>(new Action<PW_IsoInfo>(this.attach_PW_IsoInfo), new Action<PW_IsoInfo>(this.detach_PW_IsoInfo));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ISC_ID", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ISC_ID
		{
			get
			{
				return this._ISC_ID;
			}
			set
			{
				if ((this._ISC_ID != value))
				{
					this.OnISC_IDChanging(value);
					this.SendPropertyChanging();
					this._ISC_ID = value;
					this.SendPropertyChanged("ISC_ID");
					this.OnISC_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ISC_IsoCode", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string ISC_IsoCode
		{
			get
			{
				return this._ISC_IsoCode;
			}
			set
			{
				if ((this._ISC_IsoCode != value))
				{
					this.OnISC_IsoCodeChanging(value);
					this.SendPropertyChanging();
					this._ISC_IsoCode = value;
					this.SendPropertyChanged("ISC_IsoCode");
					this.OnISC_IsoCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ISC_IsoClass", DbType="VarChar(50)")]
		public string ISC_IsoClass
		{
			get
			{
				return this._ISC_IsoClass;
			}
			set
			{
				if ((this._ISC_IsoClass != value))
				{
					this.OnISC_IsoClassChanging(value);
					this.SendPropertyChanging();
					this._ISC_IsoClass = value;
					this.SendPropertyChanged("ISC_IsoClass");
					this.OnISC_IsoClassChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ISC_IsoName", DbType="VarChar(50)")]
		public string ISC_IsoName
		{
			get
			{
				return this._ISC_IsoName;
			}
			set
			{
				if ((this._ISC_IsoName != value))
				{
					this.OnISC_IsoNameChanging(value);
					this.SendPropertyChanging();
					this._ISC_IsoName = value;
					this.SendPropertyChanged("ISC_IsoName");
					this.OnISC_IsoNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ISC_Remark", DbType="VarChar(100)")]
		public string ISC_Remark
		{
			get
			{
				return this._ISC_Remark;
			}
			set
			{
				if ((this._ISC_Remark != value))
				{
					this.OnISC_RemarkChanging(value);
					this.SendPropertyChanging();
					this._ISC_Remark = value;
					this.SendPropertyChanged("ISC_Remark");
					this.OnISC_RemarkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_PW_IsoInfo_BS_IsoClass", Storage="_PW_IsoInfo", ThisKey="ISC_ID", OtherKey="ISC_ID", DeleteRule="NO ACTION")]
		public EntitySet<PW_IsoInfo> PW_IsoInfo
		{
			get
			{
				return this._PW_IsoInfo;
			}
			set
			{
				this._PW_IsoInfo.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_PW_IsoInfo(PW_IsoInfo entity)
		{
			this.SendPropertyChanging();
			entity.BS_IsoClass = this;
		}
		
		private void detach_PW_IsoInfo(PW_IsoInfo entity)
		{
			this.SendPropertyChanging();
			entity.BS_IsoClass = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.BS_JointType")]
	public partial class BS_JointType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _JOTY_ID;
		
		private string _JOTY_Code;
		
		private string _JOTY_Name;
		
		private string _JOTY_Remark;
		
		private EntitySet<PW_JointInfo> _PW_JointInfo;
		
		private EntitySet<PW_ProcedureImageManage> _PW_ProcedureImageManage;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnJOTY_IDChanging(string value);
    partial void OnJOTY_IDChanged();
    partial void OnJOTY_CodeChanging(string value);
    partial void OnJOTY_CodeChanged();
    partial void OnJOTY_NameChanging(string value);
    partial void OnJOTY_NameChanged();
    partial void OnJOTY_RemarkChanging(string value);
    partial void OnJOTY_RemarkChanged();
    #endregion
		
		public BS_JointType()
		{
			this._PW_JointInfo = new EntitySet<PW_JointInfo>(new Action<PW_JointInfo>(this.attach_PW_JointInfo), new Action<PW_JointInfo>(this.detach_PW_JointInfo));
			this._PW_ProcedureImageManage = new EntitySet<PW_ProcedureImageManage>(new Action<PW_ProcedureImageManage>(this.attach_PW_ProcedureImageManage), new Action<PW_ProcedureImageManage>(this.detach_PW_ProcedureImageManage));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JOTY_ID", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string JOTY_ID
		{
			get
			{
				return this._JOTY_ID;
			}
			set
			{
				if ((this._JOTY_ID != value))
				{
					this.OnJOTY_IDChanging(value);
					this.SendPropertyChanging();
					this._JOTY_ID = value;
					this.SendPropertyChanged("JOTY_ID");
					this.OnJOTY_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JOTY_Code", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string JOTY_Code
		{
			get
			{
				return this._JOTY_Code;
			}
			set
			{
				if ((this._JOTY_Code != value))
				{
					this.OnJOTY_CodeChanging(value);
					this.SendPropertyChanging();
					this._JOTY_Code = value;
					this.SendPropertyChanged("JOTY_Code");
					this.OnJOTY_CodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JOTY_Name", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string JOTY_Name
		{
			get
			{
				return this._JOTY_Name;
			}
			set
			{
				if ((this._JOTY_Name != value))
				{
					this.OnJOTY_NameChanging(value);
					this.SendPropertyChanging();
					this._JOTY_Name = value;
					this.SendPropertyChanged("JOTY_Name");
					this.OnJOTY_NameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JOTY_Remark", DbType="VarChar(100)")]
		public string JOTY_Remark
		{
			get
			{
				return this._JOTY_Remark;
			}
			set
			{
				if ((this._JOTY_Remark != value))
				{
					this.OnJOTY_RemarkChanging(value);
					this.SendPropertyChanging();
					this._JOTY_Remark = value;
					this.SendPropertyChanged("JOTY_Remark");
					this.OnJOTY_RemarkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_PW_JointInfo_BS_JointType", Storage="_PW_JointInfo", ThisKey="JOTY_ID", OtherKey="JOTY_ID", DeleteRule="NO ACTION")]
		public EntitySet<PW_JointInfo> PW_JointInfo
		{
			get
			{
				return this._PW_JointInfo;
			}
			set
			{
				this._PW_JointInfo.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_PW_ProcedureImageManage_BS_JointType", Storage="_PW_ProcedureImageManage", ThisKey="JOTY_ID", OtherKey="JOTY_ID", DeleteRule="NO ACTION")]
		public EntitySet<PW_ProcedureImageManage> PW_ProcedureImageManage
		{
			get
			{
				return this._PW_ProcedureImageManage;
			}
			set
			{
				this._PW_ProcedureImageManage.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_PW_JointInfo(PW_JointInfo entity)
		{
			this.SendPropertyChanging();
			entity.BS_JointType = this;
		}
		
		private void detach_PW_JointInfo(PW_JointInfo entity)
		{
			this.SendPropertyChanging();
			entity.BS_JointType = null;
		}
		
		private void attach_PW_ProcedureImageManage(PW_ProcedureImageManage entity)
		{
			this.SendPropertyChanging();
			entity.BS_JointType = this;
		}
		
		private void detach_PW_ProcedureImageManage(PW_ProcedureImageManage entity)
		{
			this.SendPropertyChanging();
			entity.BS_JointType = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.BS_NDTRate")]
	public partial class BS_NDTRate : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _NDTR_ID;
		
		private string _NDTR_Code;
		
		private string _NDTR_Name;
		
		private string _NDTR_Rate;
		
		private string _NDTR_Remark;
		
		private EntitySet<BO_NDTTrust> _BO_NDTTrust;
		
		private EntitySet<PW_IsoInfo> _PW_IsoInfo;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnNDTR_IDChanging(string value);
    partial void OnNDTR_IDChanged();
    partial void OnNDTR_CodeChanging(string value);
    partial void OnNDTR_CodeChanged();
    partial void OnNDTR_NameChanging(string value);
    partial void OnNDTR_NameChanged();
    partial void OnNDTR_RateChanging(string value);
    partial void OnNDTR_RateChanged();
    partial void OnNDTR_RemarkChanging(string value);
    partial void OnNDTR_RemarkChanged();
    #endregion
		
		public BS_NDTRate()
		{
			this._BO_NDTTrust = new EntitySet<BO_NDTTrust>(new Action<BO_NDTTrust>(this.attach_BO_NDTTrust), new Action<BO_NDTTrust>(this.detach_BO_NDTTrust));
			this._PW_IsoInfo = new EntitySet<PW_IsoInfo>(new Action<PW_IsoInfo>(this.attach_PW_IsoInfo), new Action<PW_IsoInfo>(this.detach_PW_IsoInfo));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NDTR_ID", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string NDTR_ID
		{
			get
			{
				return this._NDTR_ID;
			}
			set
			{
				if ((this._NDTR_ID != value))
				{
					this.OnNDTR_IDChanging(value);
					this.SendPropertyChanging();
					this._NDTR_ID = value;
					this.SendPropertyChanged("NDTR_ID");
					this.OnNDTR_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NDTR_Code", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string NDTR_Code
		{
			get
			{
				return this._NDTR_Code;
			}
			set
			{
				if ((this._NDTR_Code != value))
				{
					this.OnNDTR_CodeChanging(value);
					this.SendPropertyChanging();
					this._NDTR_Code = value;
					this.SendPropertyChanged("NDTR_Code");
					this.OnNDTR_CodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NDTR_Name", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string NDTR_Name
		{
			get
			{
				return this._NDTR_Name;
			}
			set
			{
				if ((this._NDTR_Name != value))
				{
					this.OnNDTR_NameChanging(value);
					this.SendPropertyChanging();
					this._NDTR_Name = value;
					this.SendPropertyChanged("NDTR_Name");
					this.OnNDTR_NameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NDTR_Rate", DbType="VarChar(100)")]
		public string NDTR_Rate
		{
			get
			{
				return this._NDTR_Rate;
			}
			set
			{
				if ((this._NDTR_Rate != value))
				{
					this.OnNDTR_RateChanging(value);
					this.SendPropertyChanging();
					this._NDTR_Rate = value;
					this.SendPropertyChanged("NDTR_Rate");
					this.OnNDTR_RateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NDTR_Remark", DbType="VarChar(100)")]
		public string NDTR_Remark
		{
			get
			{
				return this._NDTR_Remark;
			}
			set
			{
				if ((this._NDTR_Remark != value))
				{
					this.OnNDTR_RemarkChanging(value);
					this.SendPropertyChanging();
					this._NDTR_Remark = value;
					this.SendPropertyChanged("NDTR_Remark");
					this.OnNDTR_RemarkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_BO_NDTTR_REFERENCE_BS_NDTRA", Storage="_BO_NDTTrust", ThisKey="NDTR_ID", OtherKey="NDTR_ID", DeleteRule="NO ACTION")]
		public EntitySet<BO_NDTTrust> BO_NDTTrust
		{
			get
			{
				return this._BO_NDTTrust;
			}
			set
			{
				this._BO_NDTTrust.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_PW_IsoInfo_BS_NDTRate", Storage="_PW_IsoInfo", ThisKey="NDTR_ID", OtherKey="NDTR_ID", DeleteRule="NO ACTION")]
		public EntitySet<PW_IsoInfo> PW_IsoInfo
		{
			get
			{
				return this._PW_IsoInfo;
			}
			set
			{
				this._PW_IsoInfo.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_BO_NDTTrust(BO_NDTTrust entity)
		{
			this.SendPropertyChanging();
			entity.BS_NDTRate = this;
		}
		
		private void detach_BO_NDTTrust(BO_NDTTrust entity)
		{
			this.SendPropertyChanging();
			entity.BS_NDTRate = null;
		}
		
		private void attach_PW_IsoInfo(PW_IsoInfo entity)
		{
			this.SendPropertyChanging();
			entity.BS_NDTRate = this;
		}
		
		private void detach_PW_IsoInfo(PW_IsoInfo entity)
		{
			this.SendPropertyChanging();
			entity.BS_NDTRate = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.BS_NDTType")]
	public partial class BS_NDTType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _NDT_ID;
		
		private string _NDT_Code;
		
		private string _NDT_Name;
		
		private string _SysType;
		
		private string _NDT_Description;
		
		private System.Nullable<decimal> _NDT_SecuritySpace;
		
		private string _NDT_Harm;
		
		private string _NDT_Remark;
		
		private EntitySet<PW_IsoInfo> _PW_IsoInfo;
		
		private EntitySet<PW_JointInfo> _PW_JointInfo;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnNDT_IDChanging(string value);
    partial void OnNDT_IDChanged();
    partial void OnNDT_CodeChanging(string value);
    partial void OnNDT_CodeChanged();
    partial void OnNDT_NameChanging(string value);
    partial void OnNDT_NameChanged();
    partial void OnSysTypeChanging(string value);
    partial void OnSysTypeChanged();
    partial void OnNDT_DescriptionChanging(string value);
    partial void OnNDT_DescriptionChanged();
    partial void OnNDT_SecuritySpaceChanging(System.Nullable<decimal> value);
    partial void OnNDT_SecuritySpaceChanged();
    partial void OnNDT_HarmChanging(string value);
    partial void OnNDT_HarmChanged();
    partial void OnNDT_RemarkChanging(string value);
    partial void OnNDT_RemarkChanged();
    #endregion
		
		public BS_NDTType()
		{
			this._PW_IsoInfo = new EntitySet<PW_IsoInfo>(new Action<PW_IsoInfo>(this.attach_PW_IsoInfo), new Action<PW_IsoInfo>(this.detach_PW_IsoInfo));
			this._PW_JointInfo = new EntitySet<PW_JointInfo>(new Action<PW_JointInfo>(this.attach_PW_JointInfo), new Action<PW_JointInfo>(this.detach_PW_JointInfo));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NDT_ID", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string NDT_ID
		{
			get
			{
				return this._NDT_ID;
			}
			set
			{
				if ((this._NDT_ID != value))
				{
					this.OnNDT_IDChanging(value);
					this.SendPropertyChanging();
					this._NDT_ID = value;
					this.SendPropertyChanged("NDT_ID");
					this.OnNDT_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NDT_Code", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string NDT_Code
		{
			get
			{
				return this._NDT_Code;
			}
			set
			{
				if ((this._NDT_Code != value))
				{
					this.OnNDT_CodeChanging(value);
					this.SendPropertyChanging();
					this._NDT_Code = value;
					this.SendPropertyChanged("NDT_Code");
					this.OnNDT_CodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NDT_Name", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string NDT_Name
		{
			get
			{
				return this._NDT_Name;
			}
			set
			{
				if ((this._NDT_Name != value))
				{
					this.OnNDT_NameChanging(value);
					this.SendPropertyChanging();
					this._NDT_Name = value;
					this.SendPropertyChanged("NDT_Name");
					this.OnNDT_NameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SysType", DbType="VarChar(50)")]
		public string SysType
		{
			get
			{
				return this._SysType;
			}
			set
			{
				if ((this._SysType != value))
				{
					this.OnSysTypeChanging(value);
					this.SendPropertyChanging();
					this._SysType = value;
					this.SendPropertyChanged("SysType");
					this.OnSysTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NDT_Description", DbType="VarChar(50)")]
		public string NDT_Description
		{
			get
			{
				return this._NDT_Description;
			}
			set
			{
				if ((this._NDT_Description != value))
				{
					this.OnNDT_DescriptionChanging(value);
					this.SendPropertyChanging();
					this._NDT_Description = value;
					this.SendPropertyChanged("NDT_Description");
					this.OnNDT_DescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NDT_SecuritySpace", DbType="Decimal(18,4)")]
		public System.Nullable<decimal> NDT_SecuritySpace
		{
			get
			{
				return this._NDT_SecuritySpace;
			}
			set
			{
				if ((this._NDT_SecuritySpace != value))
				{
					this.OnNDT_SecuritySpaceChanging(value);
					this.SendPropertyChanging();
					this._NDT_SecuritySpace = value;
					this.SendPropertyChanged("NDT_SecuritySpace");
					this.OnNDT_SecuritySpaceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NDT_Harm", DbType="VarChar(100)")]
		public string NDT_Harm
		{
			get
			{
				return this._NDT_Harm;
			}
			set
			{
				if ((this._NDT_Harm != value))
				{
					this.OnNDT_HarmChanging(value);
					this.SendPropertyChanging();
					this._NDT_Harm = value;
					this.SendPropertyChanged("NDT_Harm");
					this.OnNDT_HarmChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NDT_Remark", DbType="VarChar(100)")]
		public string NDT_Remark
		{
			get
			{
				return this._NDT_Remark;
			}
			set
			{
				if ((this._NDT_Remark != value))
				{
					this.OnNDT_RemarkChanging(value);
					this.SendPropertyChanging();
					this._NDT_Remark = value;
					this.SendPropertyChanged("NDT_Remark");
					this.OnNDT_RemarkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_PW_IsoInfo_BS_NDTType", Storage="_PW_IsoInfo", ThisKey="NDT_ID", OtherKey="NDT_ID", DeleteRule="NO ACTION")]
		public EntitySet<PW_IsoInfo> PW_IsoInfo
		{
			get
			{
				return this._PW_IsoInfo;
			}
			set
			{
				this._PW_IsoInfo.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_PW_JointInfo_BS_NDTType", Storage="_PW_JointInfo", ThisKey="NDT_ID", OtherKey="NDT_ID", DeleteRule="NO ACTION")]
		public EntitySet<PW_JointInfo> PW_JointInfo
		{
			get
			{
				return this._PW_JointInfo;
			}
			set
			{
				this._PW_JointInfo.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_PW_IsoInfo(PW_IsoInfo entity)
		{
			this.SendPropertyChanging();
			entity.BS_NDTType = this;
		}
		
		private void detach_PW_IsoInfo(PW_IsoInfo entity)
		{
			this.SendPropertyChanging();
			entity.BS_NDTType = null;
		}
		
		private void attach_PW_JointInfo(PW_JointInfo entity)
		{
			this.SendPropertyChanging();
			entity.BS_NDTType = this;
		}
		
		private void detach_PW_JointInfo(PW_JointInfo entity)
		{
			this.SendPropertyChanging();
			entity.BS_NDTType = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.BS_PackageTestType")]
	public partial class BS_PackageTestType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _TPT_ID;
		
		private string _TPT_Code;
		
		private string _TPT_TypeName;
		
		private string _TPT_Remark;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTPT_IDChanging(string value);
    partial void OnTPT_IDChanged();
    partial void OnTPT_CodeChanging(string value);
    partial void OnTPT_CodeChanged();
    partial void OnTPT_TypeNameChanging(string value);
    partial void OnTPT_TypeNameChanged();
    partial void OnTPT_RemarkChanging(string value);
    partial void OnTPT_RemarkChanged();
    #endregion
		
		public BS_PackageTestType()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TPT_ID", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string TPT_ID
		{
			get
			{
				return this._TPT_ID;
			}
			set
			{
				if ((this._TPT_ID != value))
				{
					this.OnTPT_IDChanging(value);
					this.SendPropertyChanging();
					this._TPT_ID = value;
					this.SendPropertyChanged("TPT_ID");
					this.OnTPT_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TPT_Code", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string TPT_Code
		{
			get
			{
				return this._TPT_Code;
			}
			set
			{
				if ((this._TPT_Code != value))
				{
					this.OnTPT_CodeChanging(value);
					this.SendPropertyChanging();
					this._TPT_Code = value;
					this.SendPropertyChanged("TPT_Code");
					this.OnTPT_CodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TPT_TypeName", DbType="VarChar(40) NOT NULL", CanBeNull=false)]
		public string TPT_TypeName
		{
			get
			{
				return this._TPT_TypeName;
			}
			set
			{
				if ((this._TPT_TypeName != value))
				{
					this.OnTPT_TypeNameChanging(value);
					this.SendPropertyChanging();
					this._TPT_TypeName = value;
					this.SendPropertyChanged("TPT_TypeName");
					this.OnTPT_TypeNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TPT_Remark", DbType="VarChar(100)")]
		public string TPT_Remark
		{
			get
			{
				return this._TPT_Remark;
			}
			set
			{
				if ((this._TPT_Remark != value))
				{
					this.OnTPT_RemarkChanging(value);
					this.SendPropertyChanging();
					this._TPT_Remark = value;
					this.SendPropertyChanged("TPT_Remark");
					this.OnTPT_RemarkChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.BS_SchTab")]
	public partial class BS_SchTab : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _BST_ID;
		
		private string _BST_Code;
		
		private System.Nullable<decimal> _BST_Dia;
		
		private string _BST_DN;
		
		private System.Nullable<decimal> _BST_Inch;
		
		private System.Nullable<decimal> _BST_Sch5s;
		
		private System.Nullable<decimal> _BST_Sch10s;
		
		private System.Nullable<decimal> _BST_Sch10;
		
		private System.Nullable<decimal> _BST_Sch20;
		
		private System.Nullable<decimal> _BST_Sch30;
		
		private System.Nullable<decimal> _BST_Sch40s;
		
		private System.Nullable<decimal> _BST_STD;
		
		private System.Nullable<decimal> _BST_Sch40;
		
		private System.Nullable<decimal> _BST_Sch60;
		
		private System.Nullable<decimal> _BST_Sch80s;
		
		private System.Nullable<decimal> _BST_XS;
		
		private System.Nullable<decimal> _BST_Sch80;
		
		private System.Nullable<decimal> _BST_Sch100;
		
		private System.Nullable<decimal> _BST_Sch120;
		
		private System.Nullable<decimal> _BST_Sch140;
		
		private System.Nullable<decimal> _BST_Sch160;
		
		private System.Nullable<decimal> _BST_XXS;
		
		private string _BST_Remark;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnBST_IDChanging(string value);
    partial void OnBST_IDChanged();
    partial void OnBST_CodeChanging(string value);
    partial void OnBST_CodeChanged();
    partial void OnBST_DiaChanging(System.Nullable<decimal> value);
    partial void OnBST_DiaChanged();
    partial void OnBST_DNChanging(string value);
    partial void OnBST_DNChanged();
    partial void OnBST_InchChanging(System.Nullable<decimal> value);
    partial void OnBST_InchChanged();
    partial void OnBST_Sch5sChanging(System.Nullable<decimal> value);
    partial void OnBST_Sch5sChanged();
    partial void OnBST_Sch10sChanging(System.Nullable<decimal> value);
    partial void OnBST_Sch10sChanged();
    partial void OnBST_Sch10Changing(System.Nullable<decimal> value);
    partial void OnBST_Sch10Changed();
    partial void OnBST_Sch20Changing(System.Nullable<decimal> value);
    partial void OnBST_Sch20Changed();
    partial void OnBST_Sch30Changing(System.Nullable<decimal> value);
    partial void OnBST_Sch30Changed();
    partial void OnBST_Sch40sChanging(System.Nullable<decimal> value);
    partial void OnBST_Sch40sChanged();
    partial void OnBST_STDChanging(System.Nullable<decimal> value);
    partial void OnBST_STDChanged();
    partial void OnBST_Sch40Changing(System.Nullable<decimal> value);
    partial void OnBST_Sch40Changed();
    partial void OnBST_Sch60Changing(System.Nullable<decimal> value);
    partial void OnBST_Sch60Changed();
    partial void OnBST_Sch80sChanging(System.Nullable<decimal> value);
    partial void OnBST_Sch80sChanged();
    partial void OnBST_XSChanging(System.Nullable<decimal> value);
    partial void OnBST_XSChanged();
    partial void OnBST_Sch80Changing(System.Nullable<decimal> value);
    partial void OnBST_Sch80Changed();
    partial void OnBST_Sch100Changing(System.Nullable<decimal> value);
    partial void OnBST_Sch100Changed();
    partial void OnBST_Sch120Changing(System.Nullable<decimal> value);
    partial void OnBST_Sch120Changed();
    partial void OnBST_Sch140Changing(System.Nullable<decimal> value);
    partial void OnBST_Sch140Changed();
    partial void OnBST_Sch160Changing(System.Nullable<decimal> value);
    partial void OnBST_Sch160Changed();
    partial void OnBST_XXSChanging(System.Nullable<decimal> value);
    partial void OnBST_XXSChanged();
    partial void OnBST_RemarkChanging(string value);
    partial void OnBST_RemarkChanged();
    #endregion
		
		public BS_SchTab()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BST_ID", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string BST_ID
		{
			get
			{
				return this._BST_ID;
			}
			set
			{
				if ((this._BST_ID != value))
				{
					this.OnBST_IDChanging(value);
					this.SendPropertyChanging();
					this._BST_ID = value;
					this.SendPropertyChanged("BST_ID");
					this.OnBST_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BST_Code", DbType="VarChar(50)")]
		public string BST_Code
		{
			get
			{
				return this._BST_Code;
			}
			set
			{
				if ((this._BST_Code != value))
				{
					this.OnBST_CodeChanging(value);
					this.SendPropertyChanging();
					this._BST_Code = value;
					this.SendPropertyChanged("BST_Code");
					this.OnBST_CodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BST_Dia", DbType="Decimal(18,4)")]
		public System.Nullable<decimal> BST_Dia
		{
			get
			{
				return this._BST_Dia;
			}
			set
			{
				if ((this._BST_Dia != value))
				{
					this.OnBST_DiaChanging(value);
					this.SendPropertyChanging();
					this._BST_Dia = value;
					this.SendPropertyChanged("BST_Dia");
					this.OnBST_DiaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BST_DN", DbType="VarChar(20)")]
		public string BST_DN
		{
			get
			{
				return this._BST_DN;
			}
			set
			{
				if ((this._BST_DN != value))
				{
					this.OnBST_DNChanging(value);
					this.SendPropertyChanging();
					this._BST_DN = value;
					this.SendPropertyChanged("BST_DN");
					this.OnBST_DNChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BST_Inch", DbType="Decimal(18,4)")]
		public System.Nullable<decimal> BST_Inch
		{
			get
			{
				return this._BST_Inch;
			}
			set
			{
				if ((this._BST_Inch != value))
				{
					this.OnBST_InchChanging(value);
					this.SendPropertyChanging();
					this._BST_Inch = value;
					this.SendPropertyChanged("BST_Inch");
					this.OnBST_InchChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BST_Sch5s", DbType="Decimal(18,4)")]
		public System.Nullable<decimal> BST_Sch5s
		{
			get
			{
				return this._BST_Sch5s;
			}
			set
			{
				if ((this._BST_Sch5s != value))
				{
					this.OnBST_Sch5sChanging(value);
					this.SendPropertyChanging();
					this._BST_Sch5s = value;
					this.SendPropertyChanged("BST_Sch5s");
					this.OnBST_Sch5sChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BST_Sch10s", DbType="Decimal(18,4)")]
		public System.Nullable<decimal> BST_Sch10s
		{
			get
			{
				return this._BST_Sch10s;
			}
			set
			{
				if ((this._BST_Sch10s != value))
				{
					this.OnBST_Sch10sChanging(value);
					this.SendPropertyChanging();
					this._BST_Sch10s = value;
					this.SendPropertyChanged("BST_Sch10s");
					this.OnBST_Sch10sChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BST_Sch10", DbType="Decimal(18,4)")]
		public System.Nullable<decimal> BST_Sch10
		{
			get
			{
				return this._BST_Sch10;
			}
			set
			{
				if ((this._BST_Sch10 != value))
				{
					this.OnBST_Sch10Changing(value);
					this.SendPropertyChanging();
					this._BST_Sch10 = value;
					this.SendPropertyChanged("BST_Sch10");
					this.OnBST_Sch10Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BST_Sch20", DbType="Decimal(18,4)")]
		public System.Nullable<decimal> BST_Sch20
		{
			get
			{
				return this._BST_Sch20;
			}
			set
			{
				if ((this._BST_Sch20 != value))
				{
					this.OnBST_Sch20Changing(value);
					this.SendPropertyChanging();
					this._BST_Sch20 = value;
					this.SendPropertyChanged("BST_Sch20");
					this.OnBST_Sch20Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BST_Sch30", DbType="Decimal(18,4)")]
		public System.Nullable<decimal> BST_Sch30
		{
			get
			{
				return this._BST_Sch30;
			}
			set
			{
				if ((this._BST_Sch30 != value))
				{
					this.OnBST_Sch30Changing(value);
					this.SendPropertyChanging();
					this._BST_Sch30 = value;
					this.SendPropertyChanged("BST_Sch30");
					this.OnBST_Sch30Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BST_Sch40s", DbType="Decimal(18,4)")]
		public System.Nullable<decimal> BST_Sch40s
		{
			get
			{
				return this._BST_Sch40s;
			}
			set
			{
				if ((this._BST_Sch40s != value))
				{
					this.OnBST_Sch40sChanging(value);
					this.SendPropertyChanging();
					this._BST_Sch40s = value;
					this.SendPropertyChanged("BST_Sch40s");
					this.OnBST_Sch40sChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BST_STD", DbType="Decimal(18,4)")]
		public System.Nullable<decimal> BST_STD
		{
			get
			{
				return this._BST_STD;
			}
			set
			{
				if ((this._BST_STD != value))
				{
					this.OnBST_STDChanging(value);
					this.SendPropertyChanging();
					this._BST_STD = value;
					this.SendPropertyChanged("BST_STD");
					this.OnBST_STDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BST_Sch40", DbType="Decimal(18,4)")]
		public System.Nullable<decimal> BST_Sch40
		{
			get
			{
				return this._BST_Sch40;
			}
			set
			{
				if ((this._BST_Sch40 != value))
				{
					this.OnBST_Sch40Changing(value);
					this.SendPropertyChanging();
					this._BST_Sch40 = value;
					this.SendPropertyChanged("BST_Sch40");
					this.OnBST_Sch40Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BST_Sch60", DbType="Decimal(18,4)")]
		public System.Nullable<decimal> BST_Sch60
		{
			get
			{
				return this._BST_Sch60;
			}
			set
			{
				if ((this._BST_Sch60 != value))
				{
					this.OnBST_Sch60Changing(value);
					this.SendPropertyChanging();
					this._BST_Sch60 = value;
					this.SendPropertyChanged("BST_Sch60");
					this.OnBST_Sch60Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BST_Sch80s", DbType="Decimal(18,4)")]
		public System.Nullable<decimal> BST_Sch80s
		{
			get
			{
				return this._BST_Sch80s;
			}
			set
			{
				if ((this._BST_Sch80s != value))
				{
					this.OnBST_Sch80sChanging(value);
					this.SendPropertyChanging();
					this._BST_Sch80s = value;
					this.SendPropertyChanged("BST_Sch80s");
					this.OnBST_Sch80sChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BST_XS", DbType="Decimal(18,4)")]
		public System.Nullable<decimal> BST_XS
		{
			get
			{
				return this._BST_XS;
			}
			set
			{
				if ((this._BST_XS != value))
				{
					this.OnBST_XSChanging(value);
					this.SendPropertyChanging();
					this._BST_XS = value;
					this.SendPropertyChanged("BST_XS");
					this.OnBST_XSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BST_Sch80", DbType="Decimal(18,4)")]
		public System.Nullable<decimal> BST_Sch80
		{
			get
			{
				return this._BST_Sch80;
			}
			set
			{
				if ((this._BST_Sch80 != value))
				{
					this.OnBST_Sch80Changing(value);
					this.SendPropertyChanging();
					this._BST_Sch80 = value;
					this.SendPropertyChanged("BST_Sch80");
					this.OnBST_Sch80Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BST_Sch100", DbType="Decimal(18,4)")]
		public System.Nullable<decimal> BST_Sch100
		{
			get
			{
				return this._BST_Sch100;
			}
			set
			{
				if ((this._BST_Sch100 != value))
				{
					this.OnBST_Sch100Changing(value);
					this.SendPropertyChanging();
					this._BST_Sch100 = value;
					this.SendPropertyChanged("BST_Sch100");
					this.OnBST_Sch100Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BST_Sch120", DbType="Decimal(18,4)")]
		public System.Nullable<decimal> BST_Sch120
		{
			get
			{
				return this._BST_Sch120;
			}
			set
			{
				if ((this._BST_Sch120 != value))
				{
					this.OnBST_Sch120Changing(value);
					this.SendPropertyChanging();
					this._BST_Sch120 = value;
					this.SendPropertyChanged("BST_Sch120");
					this.OnBST_Sch120Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BST_Sch140", DbType="Decimal(18,4)")]
		public System.Nullable<decimal> BST_Sch140
		{
			get
			{
				return this._BST_Sch140;
			}
			set
			{
				if ((this._BST_Sch140 != value))
				{
					this.OnBST_Sch140Changing(value);
					this.SendPropertyChanging();
					this._BST_Sch140 = value;
					this.SendPropertyChanged("BST_Sch140");
					this.OnBST_Sch140Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BST_Sch160", DbType="Decimal(18,4)")]
		public System.Nullable<decimal> BST_Sch160
		{
			get
			{
				return this._BST_Sch160;
			}
			set
			{
				if ((this._BST_Sch160 != value))
				{
					this.OnBST_Sch160Changing(value);
					this.SendPropertyChanging();
					this._BST_Sch160 = value;
					this.SendPropertyChanged("BST_Sch160");
					this.OnBST_Sch160Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BST_XXS", DbType="Decimal(18,4)")]
		public System.Nullable<decimal> BST_XXS
		{
			get
			{
				return this._BST_XXS;
			}
			set
			{
				if ((this._BST_XXS != value))
				{
					this.OnBST_XXSChanging(value);
					this.SendPropertyChanging();
					this._BST_XXS = value;
					this.SendPropertyChanged("BST_XXS");
					this.OnBST_XXSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BST_Remark", DbType="VarChar(50)")]
		public string BST_Remark
		{
			get
			{
				return this._BST_Remark;
			}
			set
			{
				if ((this._BST_Remark != value))
				{
					this.OnBST_RemarkChanging(value);
					this.SendPropertyChanging();
					this._BST_Remark = value;
					this.SendPropertyChanged("BST_Remark");
					this.OnBST_RemarkChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.BS_Service")]
	public partial class BS_Service : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _SER_ID;
		
		private string _SER_Code;
		
		private string _SER_Name;
		
		private string _SER_Remark;
		
		private EntitySet<PW_IsoInfo> _PW_IsoInfo;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSER_IDChanging(string value);
    partial void OnSER_IDChanged();
    partial void OnSER_CodeChanging(string value);
    partial void OnSER_CodeChanged();
    partial void OnSER_NameChanging(string value);
    partial void OnSER_NameChanged();
    partial void OnSER_RemarkChanging(string value);
    partial void OnSER_RemarkChanged();
    #endregion
		
		public BS_Service()
		{
			this._PW_IsoInfo = new EntitySet<PW_IsoInfo>(new Action<PW_IsoInfo>(this.attach_PW_IsoInfo), new Action<PW_IsoInfo>(this.detach_PW_IsoInfo));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SER_ID", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string SER_ID
		{
			get
			{
				return this._SER_ID;
			}
			set
			{
				if ((this._SER_ID != value))
				{
					this.OnSER_IDChanging(value);
					this.SendPropertyChanging();
					this._SER_ID = value;
					this.SendPropertyChanged("SER_ID");
					this.OnSER_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SER_Code", DbType="VarChar(40) NOT NULL", CanBeNull=false)]
		public string SER_Code
		{
			get
			{
				return this._SER_Code;
			}
			set
			{
				if ((this._SER_Code != value))
				{
					this.OnSER_CodeChanging(value);
					this.SendPropertyChanging();
					this._SER_Code = value;
					this.SendPropertyChanged("SER_Code");
					this.OnSER_CodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SER_Name", DbType="VarChar(80) NOT NULL", CanBeNull=false)]
		public string SER_Name
		{
			get
			{
				return this._SER_Name;
			}
			set
			{
				if ((this._SER_Name != value))
				{
					this.OnSER_NameChanging(value);
					this.SendPropertyChanging();
					this._SER_Name = value;
					this.SendPropertyChanged("SER_Name");
					this.OnSER_NameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SER_Remark", DbType="VarChar(100)")]
		public string SER_Remark
		{
			get
			{
				return this._SER_Remark;
			}
			set
			{
				if ((this._SER_Remark != value))
				{
					this.OnSER_RemarkChanging(value);
					this.SendPropertyChanging();
					this._SER_Remark = value;
					this.SendPropertyChanged("SER_Remark");
					this.OnSER_RemarkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_PW_IsoInfo_BS_Service", Storage="_PW_IsoInfo", ThisKey="SER_ID", OtherKey="SER_ID", DeleteRule="NO ACTION")]
		public EntitySet<PW_IsoInfo> PW_IsoInfo
		{
			get
			{
				return this._PW_IsoInfo;
			}
			set
			{
				this._PW_IsoInfo.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_PW_IsoInfo(PW_IsoInfo entity)
		{
			this.SendPropertyChanging();
			entity.BS_Service = this;
		}
		
		private void detach_PW_IsoInfo(PW_IsoInfo entity)
		{
			this.SendPropertyChanging();
			entity.BS_Service = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.BS_SlopeType")]
	public partial class BS_SlopeType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _JST_ID;
		
		private string _JST_Code;
		
		private string _JST_Name;
		
		private string _JST_Remark;
		
		private EntitySet<PW_JointInfo> _PW_JointInfo;
		
		private EntitySet<PW_ProcedureImageManage> _PW_ProcedureImageManage;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnJST_IDChanging(string value);
    partial void OnJST_IDChanged();
    partial void OnJST_CodeChanging(string value);
    partial void OnJST_CodeChanged();
    partial void OnJST_NameChanging(string value);
    partial void OnJST_NameChanged();
    partial void OnJST_RemarkChanging(string value);
    partial void OnJST_RemarkChanged();
    #endregion
		
		public BS_SlopeType()
		{
			this._PW_JointInfo = new EntitySet<PW_JointInfo>(new Action<PW_JointInfo>(this.attach_PW_JointInfo), new Action<PW_JointInfo>(this.detach_PW_JointInfo));
			this._PW_ProcedureImageManage = new EntitySet<PW_ProcedureImageManage>(new Action<PW_ProcedureImageManage>(this.attach_PW_ProcedureImageManage), new Action<PW_ProcedureImageManage>(this.detach_PW_ProcedureImageManage));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JST_ID", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string JST_ID
		{
			get
			{
				return this._JST_ID;
			}
			set
			{
				if ((this._JST_ID != value))
				{
					this.OnJST_IDChanging(value);
					this.SendPropertyChanging();
					this._JST_ID = value;
					this.SendPropertyChanged("JST_ID");
					this.OnJST_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JST_Code", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string JST_Code
		{
			get
			{
				return this._JST_Code;
			}
			set
			{
				if ((this._JST_Code != value))
				{
					this.OnJST_CodeChanging(value);
					this.SendPropertyChanging();
					this._JST_Code = value;
					this.SendPropertyChanged("JST_Code");
					this.OnJST_CodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JST_Name", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string JST_Name
		{
			get
			{
				return this._JST_Name;
			}
			set
			{
				if ((this._JST_Name != value))
				{
					this.OnJST_NameChanging(value);
					this.SendPropertyChanging();
					this._JST_Name = value;
					this.SendPropertyChanged("JST_Name");
					this.OnJST_NameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JST_Remark", DbType="VarChar(100)")]
		public string JST_Remark
		{
			get
			{
				return this._JST_Remark;
			}
			set
			{
				if ((this._JST_Remark != value))
				{
					this.OnJST_RemarkChanging(value);
					this.SendPropertyChanging();
					this._JST_Remark = value;
					this.SendPropertyChanged("JST_Remark");
					this.OnJST_RemarkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_PW_JointInfo_BS_SlopeType", Storage="_PW_JointInfo", ThisKey="JST_ID", OtherKey="JST_ID", DeleteRule="NO ACTION")]
		public EntitySet<PW_JointInfo> PW_JointInfo
		{
			get
			{
				return this._PW_JointInfo;
			}
			set
			{
				this._PW_JointInfo.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_PW_ProcedureImageManage_BS_SlopeType", Storage="_PW_ProcedureImageManage", ThisKey="JST_ID", OtherKey="JST_ID", DeleteRule="NO ACTION")]
		public EntitySet<PW_ProcedureImageManage> PW_ProcedureImageManage
		{
			get
			{
				return this._PW_ProcedureImageManage;
			}
			set
			{
				this._PW_ProcedureImageManage.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_PW_JointInfo(PW_JointInfo entity)
		{
			this.SendPropertyChanging();
			entity.BS_SlopeType = this;
		}
		
		private void detach_PW_JointInfo(PW_JointInfo entity)
		{
			this.SendPropertyChanging();
			entity.BS_SlopeType = null;
		}
		
		private void attach_PW_ProcedureImageManage(PW_ProcedureImageManage entity)
		{
			this.SendPropertyChanging();
			entity.BS_SlopeType = this;
		}
		
		private void detach_PW_ProcedureImageManage(PW_ProcedureImageManage entity)
		{
			this.SendPropertyChanging();
			entity.BS_SlopeType = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.BS_Steel")]
	public partial class BS_Steel : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _STE_ID;
		
		private string _STE_Code;
		
		private string _STE_Name;
		
		private System.Nullable<int> _STE_SteelType;
		
		private string _STE_Remark;
		
		private string _MaterialType;
		
		private string _MaterialGroup;
		
		private EntitySet<BO_NDTTrust> _BO_NDTTrust;
		
		private EntitySet<EMaterialRegistItem> _EMaterialRegistItem;
		
		private EntitySet<PW_IsoInfo> _PW_IsoInfo;
		
		private EntitySet<PW_JointInfo> _PW_JointInfo;
		
		private EntitySet<PW_JointInfo> _STE_;
		
		private EntitySet<PW_WeldingProcedure> _PW_WeldingProcedure;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSTE_IDChanging(string value);
    partial void OnSTE_IDChanged();
    partial void OnSTE_CodeChanging(string value);
    partial void OnSTE_CodeChanged();
    partial void OnSTE_NameChanging(string value);
    partial void OnSTE_NameChanged();
    partial void OnSTE_SteelTypeChanging(System.Nullable<int> value);
    partial void OnSTE_SteelTypeChanged();
    partial void OnSTE_RemarkChanging(string value);
    partial void OnSTE_RemarkChanged();
    partial void OnMaterialTypeChanging(string value);
    partial void OnMaterialTypeChanged();
    partial void OnMaterialGroupChanging(string value);
    partial void OnMaterialGroupChanged();
    #endregion
		
		public BS_Steel()
		{
			this._BO_NDTTrust = new EntitySet<BO_NDTTrust>(new Action<BO_NDTTrust>(this.attach_BO_NDTTrust), new Action<BO_NDTTrust>(this.detach_BO_NDTTrust));
			this._EMaterialRegistItem = new EntitySet<EMaterialRegistItem>(new Action<EMaterialRegistItem>(this.attach_EMaterialRegistItem), new Action<EMaterialRegistItem>(this.detach_EMaterialRegistItem));
			this._PW_IsoInfo = new EntitySet<PW_IsoInfo>(new Action<PW_IsoInfo>(this.attach_PW_IsoInfo), new Action<PW_IsoInfo>(this.detach_PW_IsoInfo));
			this._PW_JointInfo = new EntitySet<PW_JointInfo>(new Action<PW_JointInfo>(this.attach_PW_JointInfo), new Action<PW_JointInfo>(this.detach_PW_JointInfo));
			this._STE_ = new EntitySet<PW_JointInfo>(new Action<PW_JointInfo>(this.attach_STE_), new Action<PW_JointInfo>(this.detach_STE_));
			this._PW_WeldingProcedure = new EntitySet<PW_WeldingProcedure>(new Action<PW_WeldingProcedure>(this.attach_PW_WeldingProcedure), new Action<PW_WeldingProcedure>(this.detach_PW_WeldingProcedure));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_STE_ID", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string STE_ID
		{
			get
			{
				return this._STE_ID;
			}
			set
			{
				if ((this._STE_ID != value))
				{
					this.OnSTE_IDChanging(value);
					this.SendPropertyChanging();
					this._STE_ID = value;
					this.SendPropertyChanged("STE_ID");
					this.OnSTE_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_STE_Code", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string STE_Code
		{
			get
			{
				return this._STE_Code;
			}
			set
			{
				if ((this._STE_Code != value))
				{
					this.OnSTE_CodeChanging(value);
					this.SendPropertyChanging();
					this._STE_Code = value;
					this.SendPropertyChanged("STE_Code");
					this.OnSTE_CodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_STE_Name", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string STE_Name
		{
			get
			{
				return this._STE_Name;
			}
			set
			{
				if ((this._STE_Name != value))
				{
					this.OnSTE_NameChanging(value);
					this.SendPropertyChanging();
					this._STE_Name = value;
					this.SendPropertyChanged("STE_Name");
					this.OnSTE_NameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_STE_SteelType", DbType="Int")]
		public System.Nullable<int> STE_SteelType
		{
			get
			{
				return this._STE_SteelType;
			}
			set
			{
				if ((this._STE_SteelType != value))
				{
					this.OnSTE_SteelTypeChanging(value);
					this.SendPropertyChanging();
					this._STE_SteelType = value;
					this.SendPropertyChanged("STE_SteelType");
					this.OnSTE_SteelTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_STE_Remark", DbType="VarChar(100)")]
		public string STE_Remark
		{
			get
			{
				return this._STE_Remark;
			}
			set
			{
				if ((this._STE_Remark != value))
				{
					this.OnSTE_RemarkChanging(value);
					this.SendPropertyChanging();
					this._STE_Remark = value;
					this.SendPropertyChanged("STE_Remark");
					this.OnSTE_RemarkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaterialType", DbType="NVarChar(50)")]
		public string MaterialType
		{
			get
			{
				return this._MaterialType;
			}
			set
			{
				if ((this._MaterialType != value))
				{
					this.OnMaterialTypeChanging(value);
					this.SendPropertyChanging();
					this._MaterialType = value;
					this.SendPropertyChanged("MaterialType");
					this.OnMaterialTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaterialGroup", DbType="NVarChar(50)")]
		public string MaterialGroup
		{
			get
			{
				return this._MaterialGroup;
			}
			set
			{
				if ((this._MaterialGroup != value))
				{
					this.OnMaterialGroupChanging(value);
					this.SendPropertyChanging();
					this._MaterialGroup = value;
					this.SendPropertyChanged("MaterialGroup");
					this.OnMaterialGroupChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_BO_NDTTR_REFERENCE_BS_STEEL", Storage="_BO_NDTTrust", ThisKey="STE_ID", OtherKey="STE_ID", DeleteRule="NO ACTION")]
		public EntitySet<BO_NDTTrust> BO_NDTTrust
		{
			get
			{
				return this._BO_NDTTrust;
			}
			set
			{
				this._BO_NDTTrust.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_EMaterialRegistItem_BS_Steel", Storage="_EMaterialRegistItem", ThisKey="STE_ID", OtherKey="STE_ID", DeleteRule="NO ACTION")]
		public EntitySet<EMaterialRegistItem> EMaterialRegistItem
		{
			get
			{
				return this._EMaterialRegistItem;
			}
			set
			{
				this._EMaterialRegistItem.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_PW_IsoInfo_BS_Steel", Storage="_PW_IsoInfo", ThisKey="STE_ID", OtherKey="STE_ID", DeleteRule="NO ACTION")]
		public EntitySet<PW_IsoInfo> PW_IsoInfo
		{
			get
			{
				return this._PW_IsoInfo;
			}
			set
			{
				this._PW_IsoInfo.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_PW_JointInfo_BS_Steel", Storage="_PW_JointInfo", ThisKey="STE_ID", OtherKey="STE_ID", DeleteRule="NO ACTION")]
		public EntitySet<PW_JointInfo> PW_JointInfo
		{
			get
			{
				return this._PW_JointInfo;
			}
			set
			{
				this._PW_JointInfo.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_PW_JointInfo_BS_Steel1", Storage="_STE_", ThisKey="STE_ID", OtherKey="STE_ID2", DeleteRule="NO ACTION")]
		public EntitySet<PW_JointInfo> STE_
		{
			get
			{
				return this._STE_;
			}
			set
			{
				this._STE_.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_PW_WeldingProcedure_BS_WeldMaterial", Storage="_PW_WeldingProcedure", ThisKey="STE_ID", OtherKey="STE_ID", DeleteRule="NO ACTION")]
		public EntitySet<PW_WeldingProcedure> PW_WeldingProcedure
		{
			get
			{
				return this._PW_WeldingProcedure;
			}
			set
			{
				this._PW_WeldingProcedure.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_BO_NDTTrust(BO_NDTTrust entity)
		{
			this.SendPropertyChanging();
			entity.BS_Steel = this;
		}
		
		private void detach_BO_NDTTrust(BO_NDTTrust entity)
		{
			this.SendPropertyChanging();
			entity.BS_Steel = null;
		}
		
		private void attach_EMaterialRegistItem(EMaterialRegistItem entity)
		{
			this.SendPropertyChanging();
			entity.BS_Steel = this;
		}
		
		private void detach_EMaterialRegistItem(EMaterialRegistItem entity)
		{
			this.SendPropertyChanging();
			entity.BS_Steel = null;
		}
		
		private void attach_PW_IsoInfo(PW_IsoInfo entity)
		{
			this.SendPropertyChanging();
			entity.BS_Steel = this;
		}
		
		private void detach_PW_IsoInfo(PW_IsoInfo entity)
		{
			this.SendPropertyChanging();
			entity.BS_Steel = null;
		}
		
		private void attach_PW_JointInfo(PW_JointInfo entity)
		{
			this.SendPropertyChanging();
			entity.BS_Steel = this;
		}
		
		private void detach_PW_JointInfo(PW_JointInfo entity)
		{
			this.SendPropertyChanging();
			entity.BS_Steel = null;
		}
		
		private void attach_STE_(PW_JointInfo entity)
		{
			this.SendPropertyChanging();
			entity.STE_ID2BS_Steel = this;
		}
		
		private void detach_STE_(PW_JointInfo entity)
		{
			this.SendPropertyChanging();
			entity.STE_ID2BS_Steel = null;
		}
		
		private void attach_PW_WeldingProcedure(PW_WeldingProcedure entity)
		{
			this.SendPropertyChanging();
			entity.BS_Steel = this;
		}
		
		private void detach_PW_WeldingProcedure(PW_WeldingProcedure entity)
		{
			this.SendPropertyChanging();
			entity.BS_Steel = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.BS_Welder")]
	public partial class BS_Welder : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _WED_ID;
		
		private string _WED_Unit;
		
		private string _EDU_ID;
		
		private string _SE_EquipmentID;
		
		private string _NP_NondestructivePersonID;
		
		private string _WED_Code;
		
		private string _WED_Name;
		
		private string _WED_UserType;
		
		private string _WED_Sex;
		
		private System.Nullable<System.DateTime> _WED_Birthday;
		
		private string _WED_WorkCode;
		
		private string _WED_Class;
		
		private System.Nullable<System.DateTime> _LimitDate;
		
		private System.Nullable<decimal> _WED_TotalDin;
		
		private System.Nullable<decimal> _WED_TotalJoint;
		
		private System.Nullable<decimal> _WED_ExtendDin;
		
		private System.Nullable<decimal> _WED_ExtendJoint;
		
		private System.Nullable<decimal> _WED_RepairJoint;
		
		private System.Nullable<bool> _WED_IfOnGuard;
		
		private string _WED_Remark;
		
		private System.Nullable<int> _WED_TotalFilm;
		
		private System.Nullable<int> _WED_PassFilm;
		
		private System.Nullable<int> _WED_ExtendTotalFilm;
		
		private System.Nullable<int> _WED_ExtendPassFilm;
		
		private string _ProjectId;
		
		private System.Nullable<decimal> _ThicknessMax;
		
		private System.Nullable<decimal> _ThicknessMin;
		
		private System.Nullable<decimal> _SizesMax;
		
		private System.Nullable<decimal> _SizesMin;
		
		private string _IdentityCard;
		
		private EntitySet<BO_NDTTrust> _BO_NDTTrust;
		
		private EntityRef<Base_Unit> _Base_Unit;
		
		private EntityRef<BS_Welder> _WED_;
		
		private EntityRef<BS_Welder> _BS_Welder_BS_Welder;
		
		private EntityRef<HS_Education> _HS_Education;
		
		private EntitySet<BS_WelderScore> _BS_WelderScore;
		
		private EntitySet<BS_WeldMethodItem> _BS_WeldMethodItem;
		
		private EntitySet<PW_JointInfo> _PW_JointInfo;
		
		private EntitySet<PW_JointInfo> _PW_JointInfo_BS_Welder1;
		
		private EntitySet<PW_JointInfo> _PW_JointInfo_BS_Welder2;
		
		private EntitySet<PW_JointInfo> _PW_JointInfo_BS_Welder3;
		
		private EntitySet<PW_JointInfo> _PW_JointInfo_BS_Welder4;
		
		private EntitySet<PW_JointInfo> _PW_JointInfo_BS_Welder5;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnWED_IDChanging(string value);
    partial void OnWED_IDChanged();
    partial void OnWED_UnitChanging(string value);
    partial void OnWED_UnitChanged();
    partial void OnEDU_IDChanging(string value);
    partial void OnEDU_IDChanged();
    partial void OnSE_EquipmentIDChanging(string value);
    partial void OnSE_EquipmentIDChanged();
    partial void OnNP_NondestructivePersonIDChanging(string value);
    partial void OnNP_NondestructivePersonIDChanged();
    partial void OnWED_CodeChanging(string value);
    partial void OnWED_CodeChanged();
    partial void OnWED_NameChanging(string value);
    partial void OnWED_NameChanged();
    partial void OnWED_UserTypeChanging(string value);
    partial void OnWED_UserTypeChanged();
    partial void OnWED_SexChanging(string value);
    partial void OnWED_SexChanged();
    partial void OnWED_BirthdayChanging(System.Nullable<System.DateTime> value);
    partial void OnWED_BirthdayChanged();
    partial void OnWED_WorkCodeChanging(string value);
    partial void OnWED_WorkCodeChanged();
    partial void OnWED_ClassChanging(string value);
    partial void OnWED_ClassChanged();
    partial void OnLimitDateChanging(System.Nullable<System.DateTime> value);
    partial void OnLimitDateChanged();
    partial void OnWED_TotalDinChanging(System.Nullable<decimal> value);
    partial void OnWED_TotalDinChanged();
    partial void OnWED_TotalJointChanging(System.Nullable<decimal> value);
    partial void OnWED_TotalJointChanged();
    partial void OnWED_ExtendDinChanging(System.Nullable<decimal> value);
    partial void OnWED_ExtendDinChanged();
    partial void OnWED_ExtendJointChanging(System.Nullable<decimal> value);
    partial void OnWED_ExtendJointChanged();
    partial void OnWED_RepairJointChanging(System.Nullable<decimal> value);
    partial void OnWED_RepairJointChanged();
    partial void OnWED_IfOnGuardChanging(System.Nullable<bool> value);
    partial void OnWED_IfOnGuardChanged();
    partial void OnWED_RemarkChanging(string value);
    partial void OnWED_RemarkChanged();
    partial void OnWED_TotalFilmChanging(System.Nullable<int> value);
    partial void OnWED_TotalFilmChanged();
    partial void OnWED_PassFilmChanging(System.Nullable<int> value);
    partial void OnWED_PassFilmChanged();
    partial void OnWED_ExtendTotalFilmChanging(System.Nullable<int> value);
    partial void OnWED_ExtendTotalFilmChanged();
    partial void OnWED_ExtendPassFilmChanging(System.Nullable<int> value);
    partial void OnWED_ExtendPassFilmChanged();
    partial void OnProjectIdChanging(string value);
    partial void OnProjectIdChanged();
    partial void OnThicknessMaxChanging(System.Nullable<decimal> value);
    partial void OnThicknessMaxChanged();
    partial void OnThicknessMinChanging(System.Nullable<decimal> value);
    partial void OnThicknessMinChanged();
    partial void OnSizesMaxChanging(System.Nullable<decimal> value);
    partial void OnSizesMaxChanged();
    partial void OnSizesMinChanging(System.Nullable<decimal> value);
    partial void OnSizesMinChanged();
    partial void OnIdentityCardChanging(string value);
    partial void OnIdentityCardChanged();
    #endregion
		
		public BS_Welder()
		{
			this._BO_NDTTrust = new EntitySet<BO_NDTTrust>(new Action<BO_NDTTrust>(this.attach_BO_NDTTrust), new Action<BO_NDTTrust>(this.detach_BO_NDTTrust));
			this._Base_Unit = default(EntityRef<Base_Unit>);
			this._WED_ = default(EntityRef<BS_Welder>);
			this._BS_Welder_BS_Welder = default(EntityRef<BS_Welder>);
			this._HS_Education = default(EntityRef<HS_Education>);
			this._BS_WelderScore = new EntitySet<BS_WelderScore>(new Action<BS_WelderScore>(this.attach_BS_WelderScore), new Action<BS_WelderScore>(this.detach_BS_WelderScore));
			this._BS_WeldMethodItem = new EntitySet<BS_WeldMethodItem>(new Action<BS_WeldMethodItem>(this.attach_BS_WeldMethodItem), new Action<BS_WeldMethodItem>(this.detach_BS_WeldMethodItem));
			this._PW_JointInfo = new EntitySet<PW_JointInfo>(new Action<PW_JointInfo>(this.attach_PW_JointInfo), new Action<PW_JointInfo>(this.detach_PW_JointInfo));
			this._PW_JointInfo_BS_Welder1 = new EntitySet<PW_JointInfo>(new Action<PW_JointInfo>(this.attach_PW_JointInfo_BS_Welder1), new Action<PW_JointInfo>(this.detach_PW_JointInfo_BS_Welder1));
			this._PW_JointInfo_BS_Welder2 = new EntitySet<PW_JointInfo>(new Action<PW_JointInfo>(this.attach_PW_JointInfo_BS_Welder2), new Action<PW_JointInfo>(this.detach_PW_JointInfo_BS_Welder2));
			this._PW_JointInfo_BS_Welder3 = new EntitySet<PW_JointInfo>(new Action<PW_JointInfo>(this.attach_PW_JointInfo_BS_Welder3), new Action<PW_JointInfo>(this.detach_PW_JointInfo_BS_Welder3));
			this._PW_JointInfo_BS_Welder4 = new EntitySet<PW_JointInfo>(new Action<PW_JointInfo>(this.attach_PW_JointInfo_BS_Welder4), new Action<PW_JointInfo>(this.detach_PW_JointInfo_BS_Welder4));
			this._PW_JointInfo_BS_Welder5 = new EntitySet<PW_JointInfo>(new Action<PW_JointInfo>(this.attach_PW_JointInfo_BS_Welder5), new Action<PW_JointInfo>(this.detach_PW_JointInfo_BS_Welder5));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WED_ID", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string WED_ID
		{
			get
			{
				return this._WED_ID;
			}
			set
			{
				if ((this._WED_ID != value))
				{
					if (this._WED_.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnWED_IDChanging(value);
					this.SendPropertyChanging();
					this._WED_ID = value;
					this.SendPropertyChanged("WED_ID");
					this.OnWED_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WED_Unit", DbType="NVarChar(50)")]
		public string WED_Unit
		{
			get
			{
				return this._WED_Unit;
			}
			set
			{
				if ((this._WED_Unit != value))
				{
					if (this._Base_Unit.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnWED_UnitChanging(value);
					this.SendPropertyChanging();
					this._WED_Unit = value;
					this.SendPropertyChanged("WED_Unit");
					this.OnWED_UnitChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EDU_ID", DbType="VarChar(50)")]
		public string EDU_ID
		{
			get
			{
				return this._EDU_ID;
			}
			set
			{
				if ((this._EDU_ID != value))
				{
					if (this._HS_Education.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEDU_IDChanging(value);
					this.SendPropertyChanging();
					this._EDU_ID = value;
					this.SendPropertyChanged("EDU_ID");
					this.OnEDU_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SE_EquipmentID", DbType="VarChar(300)")]
		public string SE_EquipmentID
		{
			get
			{
				return this._SE_EquipmentID;
			}
			set
			{
				if ((this._SE_EquipmentID != value))
				{
					this.OnSE_EquipmentIDChanging(value);
					this.SendPropertyChanging();
					this._SE_EquipmentID = value;
					this.SendPropertyChanged("SE_EquipmentID");
					this.OnSE_EquipmentIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NP_NondestructivePersonID", DbType="VarChar(50)")]
		public string NP_NondestructivePersonID
		{
			get
			{
				return this._NP_NondestructivePersonID;
			}
			set
			{
				if ((this._NP_NondestructivePersonID != value))
				{
					this.OnNP_NondestructivePersonIDChanging(value);
					this.SendPropertyChanging();
					this._NP_NondestructivePersonID = value;
					this.SendPropertyChanged("NP_NondestructivePersonID");
					this.OnNP_NondestructivePersonIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WED_Code", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string WED_Code
		{
			get
			{
				return this._WED_Code;
			}
			set
			{
				if ((this._WED_Code != value))
				{
					this.OnWED_CodeChanging(value);
					this.SendPropertyChanging();
					this._WED_Code = value;
					this.SendPropertyChanged("WED_Code");
					this.OnWED_CodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WED_Name", DbType="VarChar(40)")]
		public string WED_Name
		{
			get
			{
				return this._WED_Name;
			}
			set
			{
				if ((this._WED_Name != value))
				{
					this.OnWED_NameChanging(value);
					this.SendPropertyChanging();
					this._WED_Name = value;
					this.SendPropertyChanged("WED_Name");
					this.OnWED_NameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WED_UserType", DbType="Char(10)")]
		public string WED_UserType
		{
			get
			{
				return this._WED_UserType;
			}
			set
			{
				if ((this._WED_UserType != value))
				{
					this.OnWED_UserTypeChanging(value);
					this.SendPropertyChanging();
					this._WED_UserType = value;
					this.SendPropertyChanged("WED_UserType");
					this.OnWED_UserTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WED_Sex", DbType="Char(1)")]
		public string WED_Sex
		{
			get
			{
				return this._WED_Sex;
			}
			set
			{
				if ((this._WED_Sex != value))
				{
					this.OnWED_SexChanging(value);
					this.SendPropertyChanging();
					this._WED_Sex = value;
					this.SendPropertyChanged("WED_Sex");
					this.OnWED_SexChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WED_Birthday", DbType="DateTime")]
		public System.Nullable<System.DateTime> WED_Birthday
		{
			get
			{
				return this._WED_Birthday;
			}
			set
			{
				if ((this._WED_Birthday != value))
				{
					this.OnWED_BirthdayChanging(value);
					this.SendPropertyChanging();
					this._WED_Birthday = value;
					this.SendPropertyChanged("WED_Birthday");
					this.OnWED_BirthdayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WED_WorkCode", DbType="VarChar(20)")]
		public string WED_WorkCode
		{
			get
			{
				return this._WED_WorkCode;
			}
			set
			{
				if ((this._WED_WorkCode != value))
				{
					this.OnWED_WorkCodeChanging(value);
					this.SendPropertyChanging();
					this._WED_WorkCode = value;
					this.SendPropertyChanged("WED_WorkCode");
					this.OnWED_WorkCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WED_Class", DbType="VarChar(15)")]
		public string WED_Class
		{
			get
			{
				return this._WED_Class;
			}
			set
			{
				if ((this._WED_Class != value))
				{
					this.OnWED_ClassChanging(value);
					this.SendPropertyChanging();
					this._WED_Class = value;
					this.SendPropertyChanged("WED_Class");
					this.OnWED_ClassChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LimitDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> LimitDate
		{
			get
			{
				return this._LimitDate;
			}
			set
			{
				if ((this._LimitDate != value))
				{
					this.OnLimitDateChanging(value);
					this.SendPropertyChanging();
					this._LimitDate = value;
					this.SendPropertyChanged("LimitDate");
					this.OnLimitDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WED_TotalDin", DbType="Decimal(18,4)")]
		public System.Nullable<decimal> WED_TotalDin
		{
			get
			{
				return this._WED_TotalDin;
			}
			set
			{
				if ((this._WED_TotalDin != value))
				{
					this.OnWED_TotalDinChanging(value);
					this.SendPropertyChanging();
					this._WED_TotalDin = value;
					this.SendPropertyChanged("WED_TotalDin");
					this.OnWED_TotalDinChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WED_TotalJoint", DbType="Decimal(18,4)")]
		public System.Nullable<decimal> WED_TotalJoint
		{
			get
			{
				return this._WED_TotalJoint;
			}
			set
			{
				if ((this._WED_TotalJoint != value))
				{
					this.OnWED_TotalJointChanging(value);
					this.SendPropertyChanging();
					this._WED_TotalJoint = value;
					this.SendPropertyChanged("WED_TotalJoint");
					this.OnWED_TotalJointChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WED_ExtendDin", DbType="Decimal(18,4)")]
		public System.Nullable<decimal> WED_ExtendDin
		{
			get
			{
				return this._WED_ExtendDin;
			}
			set
			{
				if ((this._WED_ExtendDin != value))
				{
					this.OnWED_ExtendDinChanging(value);
					this.SendPropertyChanging();
					this._WED_ExtendDin = value;
					this.SendPropertyChanged("WED_ExtendDin");
					this.OnWED_ExtendDinChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WED_ExtendJoint", DbType="Decimal(18,4)")]
		public System.Nullable<decimal> WED_ExtendJoint
		{
			get
			{
				return this._WED_ExtendJoint;
			}
			set
			{
				if ((this._WED_ExtendJoint != value))
				{
					this.OnWED_ExtendJointChanging(value);
					this.SendPropertyChanging();
					this._WED_ExtendJoint = value;
					this.SendPropertyChanged("WED_ExtendJoint");
					this.OnWED_ExtendJointChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WED_RepairJoint", DbType="Decimal(18,4)")]
		public System.Nullable<decimal> WED_RepairJoint
		{
			get
			{
				return this._WED_RepairJoint;
			}
			set
			{
				if ((this._WED_RepairJoint != value))
				{
					this.OnWED_RepairJointChanging(value);
					this.SendPropertyChanging();
					this._WED_RepairJoint = value;
					this.SendPropertyChanged("WED_RepairJoint");
					this.OnWED_RepairJointChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WED_IfOnGuard", DbType="Bit")]
		public System.Nullable<bool> WED_IfOnGuard
		{
			get
			{
				return this._WED_IfOnGuard;
			}
			set
			{
				if ((this._WED_IfOnGuard != value))
				{
					this.OnWED_IfOnGuardChanging(value);
					this.SendPropertyChanging();
					this._WED_IfOnGuard = value;
					this.SendPropertyChanged("WED_IfOnGuard");
					this.OnWED_IfOnGuardChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WED_Remark", DbType="VarChar(100)")]
		public string WED_Remark
		{
			get
			{
				return this._WED_Remark;
			}
			set
			{
				if ((this._WED_Remark != value))
				{
					this.OnWED_RemarkChanging(value);
					this.SendPropertyChanging();
					this._WED_Remark = value;
					this.SendPropertyChanged("WED_Remark");
					this.OnWED_RemarkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WED_TotalFilm", DbType="Int")]
		public System.Nullable<int> WED_TotalFilm
		{
			get
			{
				return this._WED_TotalFilm;
			}
			set
			{
				if ((this._WED_TotalFilm != value))
				{
					this.OnWED_TotalFilmChanging(value);
					this.SendPropertyChanging();
					this._WED_TotalFilm = value;
					this.SendPropertyChanged("WED_TotalFilm");
					this.OnWED_TotalFilmChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WED_PassFilm", DbType="Int")]
		public System.Nullable<int> WED_PassFilm
		{
			get
			{
				return this._WED_PassFilm;
			}
			set
			{
				if ((this._WED_PassFilm != value))
				{
					this.OnWED_PassFilmChanging(value);
					this.SendPropertyChanging();
					this._WED_PassFilm = value;
					this.SendPropertyChanged("WED_PassFilm");
					this.OnWED_PassFilmChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WED_ExtendTotalFilm", DbType="Int")]
		public System.Nullable<int> WED_ExtendTotalFilm
		{
			get
			{
				return this._WED_ExtendTotalFilm;
			}
			set
			{
				if ((this._WED_ExtendTotalFilm != value))
				{
					this.OnWED_ExtendTotalFilmChanging(value);
					this.SendPropertyChanging();
					this._WED_ExtendTotalFilm = value;
					this.SendPropertyChanged("WED_ExtendTotalFilm");
					this.OnWED_ExtendTotalFilmChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WED_ExtendPassFilm", DbType="Int")]
		public System.Nullable<int> WED_ExtendPassFilm
		{
			get
			{
				return this._WED_ExtendPassFilm;
			}
			set
			{
				if ((this._WED_ExtendPassFilm != value))
				{
					this.OnWED_ExtendPassFilmChanging(value);
					this.SendPropertyChanging();
					this._WED_ExtendPassFilm = value;
					this.SendPropertyChanged("WED_ExtendPassFilm");
					this.OnWED_ExtendPassFilmChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProjectId", DbType="NVarChar(50)")]
		public string ProjectId
		{
			get
			{
				return this._ProjectId;
			}
			set
			{
				if ((this._ProjectId != value))
				{
					this.OnProjectIdChanging(value);
					this.SendPropertyChanging();
					this._ProjectId = value;
					this.SendPropertyChanged("ProjectId");
					this.OnProjectIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ThicknessMax", DbType="Decimal(18,4)")]
		public System.Nullable<decimal> ThicknessMax
		{
			get
			{
				return this._ThicknessMax;
			}
			set
			{
				if ((this._ThicknessMax != value))
				{
					this.OnThicknessMaxChanging(value);
					this.SendPropertyChanging();
					this._ThicknessMax = value;
					this.SendPropertyChanged("ThicknessMax");
					this.OnThicknessMaxChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ThicknessMin", DbType="Decimal(18,4)")]
		public System.Nullable<decimal> ThicknessMin
		{
			get
			{
				return this._ThicknessMin;
			}
			set
			{
				if ((this._ThicknessMin != value))
				{
					this.OnThicknessMinChanging(value);
					this.SendPropertyChanging();
					this._ThicknessMin = value;
					this.SendPropertyChanged("ThicknessMin");
					this.OnThicknessMinChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SizesMax", DbType="Decimal(18,4)")]
		public System.Nullable<decimal> SizesMax
		{
			get
			{
				return this._SizesMax;
			}
			set
			{
				if ((this._SizesMax != value))
				{
					this.OnSizesMaxChanging(value);
					this.SendPropertyChanging();
					this._SizesMax = value;
					this.SendPropertyChanged("SizesMax");
					this.OnSizesMaxChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SizesMin", DbType="Decimal(18,4)")]
		public System.Nullable<decimal> SizesMin
		{
			get
			{
				return this._SizesMin;
			}
			set
			{
				if ((this._SizesMin != value))
				{
					this.OnSizesMinChanging(value);
					this.SendPropertyChanging();
					this._SizesMin = value;
					this.SendPropertyChanged("SizesMin");
					this.OnSizesMinChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdentityCard", DbType="NVarChar(18)")]
		public string IdentityCard
		{
			get
			{
				return this._IdentityCard;
			}
			set
			{
				if ((this._IdentityCard != value))
				{
					this.OnIdentityCardChanging(value);
					this.SendPropertyChanging();
					this._IdentityCard = value;
					this.SendPropertyChanged("IdentityCard");
					this.OnIdentityCardChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_BO_NDTTR_REFERENCE_BS_WELDE", Storage="_BO_NDTTrust", ThisKey="WED_ID", OtherKey="WED_ID", DeleteRule="NO ACTION")]
		public EntitySet<BO_NDTTrust> BO_NDTTrust
		{
			get
			{
				return this._BO_NDTTrust;
			}
			set
			{
				this._BO_NDTTrust.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_BS_Welder_Base_Unit", Storage="_Base_Unit", ThisKey="WED_Unit", OtherKey="UnitId", IsForeignKey=true)]
		public Base_Unit Base_Unit
		{
			get
			{
				return this._Base_Unit.Entity;
			}
			set
			{
				Base_Unit previousValue = this._Base_Unit.Entity;
				if (((previousValue != value) 
							|| (this._Base_Unit.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Base_Unit.Entity = null;
						previousValue.BS_Welder.Remove(this);
					}
					this._Base_Unit.Entity = value;
					if ((value != null))
					{
						value.BS_Welder.Add(this);
						this._WED_Unit = value.UnitId;
					}
					else
					{
						this._WED_Unit = default(string);
					}
					this.SendPropertyChanged("Base_Unit");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_BS_Welder_BS_Welder", Storage="_WED_", ThisKey="WED_ID", OtherKey="WED_ID", IsForeignKey=true)]
		public BS_Welder WED_
		{
			get
			{
				return this._WED_.Entity;
			}
			set
			{
				BS_Welder previousValue = this._WED_.Entity;
				if (((previousValue != value) 
							|| (this._WED_.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._WED_.Entity = null;
						previousValue.BS_Welder_BS_Welder = null;
					}
					this._WED_.Entity = value;
					if ((value != null))
					{
						value.BS_Welder_BS_Welder = this;
						this._WED_ID = value.WED_ID;
					}
					else
					{
						this._WED_ID = default(string);
					}
					this.SendPropertyChanged("WED_");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_BS_Welder_BS_Welder", Storage="_BS_Welder_BS_Welder", ThisKey="WED_ID", OtherKey="WED_ID", IsUnique=true, IsForeignKey=false, DeleteRule="NO ACTION")]
		public BS_Welder BS_Welder_BS_Welder
		{
			get
			{
				return this._BS_Welder_BS_Welder.Entity;
			}
			set
			{
				BS_Welder previousValue = this._BS_Welder_BS_Welder.Entity;
				if (((previousValue != value) 
							|| (this._BS_Welder_BS_Welder.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._BS_Welder_BS_Welder.Entity = null;
						previousValue.WED_ = null;
					}
					this._BS_Welder_BS_Welder.Entity = value;
					if ((value != null))
					{
						value.WED_ = this;
					}
					this.SendPropertyChanged("BS_Welder_BS_Welder");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_BS_Welder_HS_Education", Storage="_HS_Education", ThisKey="EDU_ID", OtherKey="EDU_ID", IsForeignKey=true)]
		public HS_Education HS_Education
		{
			get
			{
				return this._HS_Education.Entity;
			}
			set
			{
				HS_Education previousValue = this._HS_Education.Entity;
				if (((previousValue != value) 
							|| (this._HS_Education.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._HS_Education.Entity = null;
						previousValue.BS_Welder.Remove(this);
					}
					this._HS_Education.Entity = value;
					if ((value != null))
					{
						value.BS_Welder.Add(this);
						this._EDU_ID = value.EDU_ID;
					}
					else
					{
						this._EDU_ID = default(string);
					}
					this.SendPropertyChanged("HS_Education");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_BS_WelderScore_BS_Welder", Storage="_BS_WelderScore", ThisKey="WED_ID", OtherKey="WED_ID", DeleteRule="NO ACTION")]
		public EntitySet<BS_WelderScore> BS_WelderScore
		{
			get
			{
				return this._BS_WelderScore;
			}
			set
			{
				this._BS_WelderScore.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_BS_WeldMethodItem_BS_Welder", Storage="_BS_WeldMethodItem", ThisKey="WED_ID", OtherKey="WED_ID", DeleteRule="NO ACTION")]
		public EntitySet<BS_WeldMethodItem> BS_WeldMethodItem
		{
			get
			{
				return this._BS_WeldMethodItem;
			}
			set
			{
				this._BS_WeldMethodItem.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_PW_JointInfo_BS_Welder", Storage="_PW_JointInfo", ThisKey="WED_ID", OtherKey="JOT_CellWelder", DeleteRule="NO ACTION")]
		public EntitySet<PW_JointInfo> PW_JointInfo
		{
			get
			{
				return this._PW_JointInfo;
			}
			set
			{
				this._PW_JointInfo.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_PW_JointInfo_BS_Welder1", Storage="_PW_JointInfo_BS_Welder1", ThisKey="WED_ID", OtherKey="JOT_FloorWelder", DeleteRule="NO ACTION")]
		public EntitySet<PW_JointInfo> PW_JointInfo_BS_Welder1
		{
			get
			{
				return this._PW_JointInfo_BS_Welder1;
			}
			set
			{
				this._PW_JointInfo_BS_Welder1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_PW_JointInfo_BS_Welder2", Storage="_PW_JointInfo_BS_Welder2", ThisKey="WED_ID", OtherKey="Fix1_FloorWeld", DeleteRule="NO ACTION")]
		public EntitySet<PW_JointInfo> PW_JointInfo_BS_Welder2
		{
			get
			{
				return this._PW_JointInfo_BS_Welder2;
			}
			set
			{
				this._PW_JointInfo_BS_Welder2.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_PW_JointInfo_BS_Welder3", Storage="_PW_JointInfo_BS_Welder3", ThisKey="WED_ID", OtherKey="Fix2_FloorWeld", DeleteRule="NO ACTION")]
		public EntitySet<PW_JointInfo> PW_JointInfo_BS_Welder3
		{
			get
			{
				return this._PW_JointInfo_BS_Welder3;
			}
			set
			{
				this._PW_JointInfo_BS_Welder3.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_PW_JointInfo_BS_Welder4", Storage="_PW_JointInfo_BS_Welder4", ThisKey="WED_ID", OtherKey="Fix2_CellWelder", DeleteRule="NO ACTION")]
		public EntitySet<PW_JointInfo> PW_JointInfo_BS_Welder4
		{
			get
			{
				return this._PW_JointInfo_BS_Welder4;
			}
			set
			{
				this._PW_JointInfo_BS_Welder4.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_PW_JointInfo_BS_Welder5", Storage="_PW_JointInfo_BS_Welder5", ThisKey="WED_ID", OtherKey="Fix1_CellWelder", DeleteRule="NO ACTION")]
		public EntitySet<PW_JointInfo> PW_JointInfo_BS_Welder5
		{
			get
			{
				return this._PW_JointInfo_BS_Welder5;
			}
			set
			{
				this._PW_JointInfo_BS_Welder5.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_BO_NDTTrust(BO_NDTTrust entity)
		{
			this.SendPropertyChanging();
			entity.BS_Welder = this;
		}
		
		private void detach_BO_NDTTrust(BO_NDTTrust entity)
		{
			this.SendPropertyChanging();
			entity.BS_Welder = null;
		}
		
		private void attach_BS_WelderScore(BS_WelderScore entity)
		{
			this.SendPropertyChanging();
			entity.BS_Welder = this;
		}
		
		private void detach_BS_WelderScore(BS_WelderScore entity)
		{
			this.SendPropertyChanging();
			entity.BS_Welder = null;
		}
		
		private void attach_BS_WeldMethodItem(BS_WeldMethodItem entity)
		{
			this.SendPropertyChanging();
			entity.BS_Welder = this;
		}
		
		private void detach_BS_WeldMethodItem(BS_WeldMethodItem entity)
		{
			this.SendPropertyChanging();
			entity.BS_Welder = null;
		}
		
		private void attach_PW_JointInfo(PW_JointInfo entity)
		{
			this.SendPropertyChanging();
			entity.BS_Welder = this;
		}
		
		private void detach_PW_JointInfo(PW_JointInfo entity)
		{
			this.SendPropertyChanging();
			entity.BS_Welder = null;
		}
		
		private void attach_PW_JointInfo_BS_Welder1(PW_JointInfo entity)
		{
			this.SendPropertyChanging();
			entity.JOT_FloorWelderBS_Welder = this;
		}
		
		private void detach_PW_JointInfo_BS_Welder1(PW_JointInfo entity)
		{
			this.SendPropertyChanging();
			entity.JOT_FloorWelderBS_Welder = null;
		}
		
		private void attach_PW_JointInfo_BS_Welder2(PW_JointInfo entity)
		{
			this.SendPropertyChanging();
			entity.Fix1_FloorWeldBS_Welder = this;
		}
		
		private void detach_PW_JointInfo_BS_Welder2(PW_JointInfo entity)
		{
			this.SendPropertyChanging();
			entity.Fix1_FloorWeldBS_Welder = null;
		}
		
		private void attach_PW_JointInfo_BS_Welder3(PW_JointInfo entity)
		{
			this.SendPropertyChanging();
			entity.Fix2_FloorWeldBS_Welder = this;
		}
		
		private void detach_PW_JointInfo_BS_Welder3(PW_JointInfo entity)
		{
			this.SendPropertyChanging();
			entity.Fix2_FloorWeldBS_Welder = null;
		}
		
		private void attach_PW_JointInfo_BS_Welder4(PW_JointInfo entity)
		{
			this.SendPropertyChanging();
			entity.Fix2_CellWelderBS_Welder = this;
		}
		
		private void detach_PW_JointInfo_BS_Welder4(PW_JointInfo entity)
		{
			this.SendPropertyChanging();
			entity.Fix2_CellWelderBS_Welder = null;
		}
		
		private void attach_PW_JointInfo_BS_Welder5(PW_JointInfo entity)
		{
			this.SendPropertyChanging();
			entity.Fix1_CellWelderBS_Welder = this;
		}
		
		private void detach_PW_JointInfo_BS_Welder5(PW_JointInfo entity)
		{
			this.SendPropertyChanging();
			entity.Fix1_CellWelderBS_Welder = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.BS_WelderItem")]
	public partial class BS_WelderItem : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _WEDItem_ID;
		
		private string _WED_ID;
		
		private string _STE_ID;
		
		private System.Nullable<decimal> _ThicknessMax;
		
		private System.Nullable<decimal> _ThicknessMin;
		
		private System.Nullable<decimal> _SizesMax;
		
		private System.Nullable<decimal> _SizesMin;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnWEDItem_IDChanging(string value);
    partial void OnWEDItem_IDChanged();
    partial void OnWED_IDChanging(string value);
    partial void OnWED_IDChanged();
    partial void OnSTE_IDChanging(string value);
    partial void OnSTE_IDChanged();
    partial void OnThicknessMaxChanging(System.Nullable<decimal> value);
    partial void OnThicknessMaxChanged();
    partial void OnThicknessMinChanging(System.Nullable<decimal> value);
    partial void OnThicknessMinChanged();
    partial void OnSizesMaxChanging(System.Nullable<decimal> value);
    partial void OnSizesMaxChanged();
    partial void OnSizesMinChanging(System.Nullable<decimal> value);
    partial void OnSizesMinChanged();
    #endregion
		
		public BS_WelderItem()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WEDItem_ID", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string WEDItem_ID
		{
			get
			{
				return this._WEDItem_ID;
			}
			set
			{
				if ((this._WEDItem_ID != value))
				{
					this.OnWEDItem_IDChanging(value);
					this.SendPropertyChanging();
					this._WEDItem_ID = value;
					this.SendPropertyChanged("WEDItem_ID");
					this.OnWEDItem_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WED_ID", DbType="NVarChar(50)")]
		public string WED_ID
		{
			get
			{
				return this._WED_ID;
			}
			set
			{
				if ((this._WED_ID != value))
				{
					this.OnWED_IDChanging(value);
					this.SendPropertyChanging();
					this._WED_ID = value;
					this.SendPropertyChanged("WED_ID");
					this.OnWED_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_STE_ID", DbType="NVarChar(50)")]
		public string STE_ID
		{
			get
			{
				return this._STE_ID;
			}
			set
			{
				if ((this._STE_ID != value))
				{
					this.OnSTE_IDChanging(value);
					this.SendPropertyChanging();
					this._STE_ID = value;
					this.SendPropertyChanged("STE_ID");
					this.OnSTE_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ThicknessMax", DbType="Decimal(18,4)")]
		public System.Nullable<decimal> ThicknessMax
		{
			get
			{
				return this._ThicknessMax;
			}
			set
			{
				if ((this._ThicknessMax != value))
				{
					this.OnThicknessMaxChanging(value);
					this.SendPropertyChanging();
					this._ThicknessMax = value;
					this.SendPropertyChanged("ThicknessMax");
					this.OnThicknessMaxChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ThicknessMin", DbType="Decimal(18,4)")]
		public System.Nullable<decimal> ThicknessMin
		{
			get
			{
				return this._ThicknessMin;
			}
			set
			{
				if ((this._ThicknessMin != value))
				{
					this.OnThicknessMinChanging(value);
					this.SendPropertyChanging();
					this._ThicknessMin = value;
					this.SendPropertyChanged("ThicknessMin");
					this.OnThicknessMinChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SizesMax", DbType="Decimal(18,4)")]
		public System.Nullable<decimal> SizesMax
		{
			get
			{
				return this._SizesMax;
			}
			set
			{
				if ((this._SizesMax != value))
				{
					this.OnSizesMaxChanging(value);
					this.SendPropertyChanging();
					this._SizesMax = value;
					this.SendPropertyChanged("SizesMax");
					this.OnSizesMaxChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SizesMin", DbType="Decimal(18,4)")]
		public System.Nullable<decimal> SizesMin
		{
			get
			{
				return this._SizesMin;
			}
			set
			{
				if ((this._SizesMin != value))
				{
					this.OnSizesMinChanging(value);
					this.SendPropertyChanging();
					this._SizesMin = value;
					this.SendPropertyChanged("SizesMin");
					this.OnSizesMinChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.BS_WelderScore")]
	public partial class BS_WelderScore : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _WelderScoreId;
		
		private string _WED_ID;
		
		private string _ProjectName;
		
		private string _UnitName;
		
		private System.Nullable<int> _TotalJot;
		
		private System.Nullable<int> _QualifiedJot;
		
		private string _WeldRange;
		
		private string _Remark;
		
		private EntityRef<BS_Welder> _BS_Welder;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnWelderScoreIdChanging(string value);
    partial void OnWelderScoreIdChanged();
    partial void OnWED_IDChanging(string value);
    partial void OnWED_IDChanged();
    partial void OnProjectNameChanging(string value);
    partial void OnProjectNameChanged();
    partial void OnUnitNameChanging(string value);
    partial void OnUnitNameChanged();
    partial void OnTotalJotChanging(System.Nullable<int> value);
    partial void OnTotalJotChanged();
    partial void OnQualifiedJotChanging(System.Nullable<int> value);
    partial void OnQualifiedJotChanged();
    partial void OnWeldRangeChanging(string value);
    partial void OnWeldRangeChanged();
    partial void OnRemarkChanging(string value);
    partial void OnRemarkChanged();
    #endregion
		
		public BS_WelderScore()
		{
			this._BS_Welder = default(EntityRef<BS_Welder>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WelderScoreId", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string WelderScoreId
		{
			get
			{
				return this._WelderScoreId;
			}
			set
			{
				if ((this._WelderScoreId != value))
				{
					this.OnWelderScoreIdChanging(value);
					this.SendPropertyChanging();
					this._WelderScoreId = value;
					this.SendPropertyChanged("WelderScoreId");
					this.OnWelderScoreIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WED_ID", DbType="NVarChar(50)")]
		public string WED_ID
		{
			get
			{
				return this._WED_ID;
			}
			set
			{
				if ((this._WED_ID != value))
				{
					if (this._BS_Welder.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnWED_IDChanging(value);
					this.SendPropertyChanging();
					this._WED_ID = value;
					this.SendPropertyChanged("WED_ID");
					this.OnWED_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProjectName", DbType="NVarChar(100)")]
		public string ProjectName
		{
			get
			{
				return this._ProjectName;
			}
			set
			{
				if ((this._ProjectName != value))
				{
					this.OnProjectNameChanging(value);
					this.SendPropertyChanging();
					this._ProjectName = value;
					this.SendPropertyChanged("ProjectName");
					this.OnProjectNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitName", DbType="NVarChar(50)")]
		public string UnitName
		{
			get
			{
				return this._UnitName;
			}
			set
			{
				if ((this._UnitName != value))
				{
					this.OnUnitNameChanging(value);
					this.SendPropertyChanging();
					this._UnitName = value;
					this.SendPropertyChanged("UnitName");
					this.OnUnitNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalJot", DbType="Int")]
		public System.Nullable<int> TotalJot
		{
			get
			{
				return this._TotalJot;
			}
			set
			{
				if ((this._TotalJot != value))
				{
					this.OnTotalJotChanging(value);
					this.SendPropertyChanging();
					this._TotalJot = value;
					this.SendPropertyChanged("TotalJot");
					this.OnTotalJotChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QualifiedJot", DbType="Int")]
		public System.Nullable<int> QualifiedJot
		{
			get
			{
				return this._QualifiedJot;
			}
			set
			{
				if ((this._QualifiedJot != value))
				{
					this.OnQualifiedJotChanging(value);
					this.SendPropertyChanging();
					this._QualifiedJot = value;
					this.SendPropertyChanged("QualifiedJot");
					this.OnQualifiedJotChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WeldRange", DbType="NVarChar(100)")]
		public string WeldRange
		{
			get
			{
				return this._WeldRange;
			}
			set
			{
				if ((this._WeldRange != value))
				{
					this.OnWeldRangeChanging(value);
					this.SendPropertyChanging();
					this._WeldRange = value;
					this.SendPropertyChanged("WeldRange");
					this.OnWeldRangeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Remark", DbType="NVarChar(300)")]
		public string Remark
		{
			get
			{
				return this._Remark;
			}
			set
			{
				if ((this._Remark != value))
				{
					this.OnRemarkChanging(value);
					this.SendPropertyChanging();
					this._Remark = value;
					this.SendPropertyChanged("Remark");
					this.OnRemarkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_BS_WelderScore_BS_Welder", Storage="_BS_Welder", ThisKey="WED_ID", OtherKey="WED_ID", IsForeignKey=true)]
		public BS_Welder BS_Welder
		{
			get
			{
				return this._BS_Welder.Entity;
			}
			set
			{
				BS_Welder previousValue = this._BS_Welder.Entity;
				if (((previousValue != value) 
							|| (this._BS_Welder.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._BS_Welder.Entity = null;
						previousValue.BS_WelderScore.Remove(this);
					}
					this._BS_Welder.Entity = value;
					if ((value != null))
					{
						value.BS_WelderScore.Add(this);
						this._WED_ID = value.WED_ID;
					}
					else
					{
						this._WED_ID = default(string);
					}
					this.SendPropertyChanged("BS_Welder");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.BS_WeldLocation")]
	public partial class BS_WeldLocation : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _WLO_Code;
		
		private string _WLO_Name;
		
		private string _WLO_Remark;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnWLO_CodeChanging(string value);
    partial void OnWLO_CodeChanged();
    partial void OnWLO_NameChanging(string value);
    partial void OnWLO_NameChanged();
    partial void OnWLO_RemarkChanging(string value);
    partial void OnWLO_RemarkChanged();
    #endregion
		
		public BS_WeldLocation()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WLO_Code", DbType="VarChar(20) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string WLO_Code
		{
			get
			{
				return this._WLO_Code;
			}
			set
			{
				if ((this._WLO_Code != value))
				{
					this.OnWLO_CodeChanging(value);
					this.SendPropertyChanging();
					this._WLO_Code = value;
					this.SendPropertyChanged("WLO_Code");
					this.OnWLO_CodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WLO_Name", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string WLO_Name
		{
			get
			{
				return this._WLO_Name;
			}
			set
			{
				if ((this._WLO_Name != value))
				{
					this.OnWLO_NameChanging(value);
					this.SendPropertyChanging();
					this._WLO_Name = value;
					this.SendPropertyChanged("WLO_Name");
					this.OnWLO_NameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WLO_Remark", DbType="VarChar(100)")]
		public string WLO_Remark
		{
			get
			{
				return this._WLO_Remark;
			}
			set
			{
				if ((this._WLO_Remark != value))
				{
					this.OnWLO_RemarkChanging(value);
					this.SendPropertyChanging();
					this._WLO_Remark = value;
					this.SendPropertyChanged("WLO_Remark");
					this.OnWLO_RemarkChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.BS_WeldMaterial")]
	public partial class BS_WeldMaterial : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _WMT_ID;
		
		private string _WMT_MatCode;
		
		private string _WMT_MatName;
		
		private string _WMT_MatType;
		
		private string _WMT_Remark;
		
		private EntitySet<EMaterialRegistItem> _EMaterialRegistItem;
		
		private EntitySet<EMInventoryRecords> _EMInventoryRecords;
		
		private EntitySet<PW_JointInfo> _PW_JointInfo;
		
		private EntitySet<PW_JointInfo> _WMT_;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnWMT_IDChanging(string value);
    partial void OnWMT_IDChanged();
    partial void OnWMT_MatCodeChanging(string value);
    partial void OnWMT_MatCodeChanged();
    partial void OnWMT_MatNameChanging(string value);
    partial void OnWMT_MatNameChanged();
    partial void OnWMT_MatTypeChanging(string value);
    partial void OnWMT_MatTypeChanged();
    partial void OnWMT_RemarkChanging(string value);
    partial void OnWMT_RemarkChanged();
    #endregion
		
		public BS_WeldMaterial()
		{
			this._EMaterialRegistItem = new EntitySet<EMaterialRegistItem>(new Action<EMaterialRegistItem>(this.attach_EMaterialRegistItem), new Action<EMaterialRegistItem>(this.detach_EMaterialRegistItem));
			this._EMInventoryRecords = new EntitySet<EMInventoryRecords>(new Action<EMInventoryRecords>(this.attach_EMInventoryRecords), new Action<EMInventoryRecords>(this.detach_EMInventoryRecords));
			this._PW_JointInfo = new EntitySet<PW_JointInfo>(new Action<PW_JointInfo>(this.attach_PW_JointInfo), new Action<PW_JointInfo>(this.detach_PW_JointInfo));
			this._WMT_ = new EntitySet<PW_JointInfo>(new Action<PW_JointInfo>(this.attach_WMT_), new Action<PW_JointInfo>(this.detach_WMT_));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WMT_ID", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string WMT_ID
		{
			get
			{
				return this._WMT_ID;
			}
			set
			{
				if ((this._WMT_ID != value))
				{
					this.OnWMT_IDChanging(value);
					this.SendPropertyChanging();
					this._WMT_ID = value;
					this.SendPropertyChanged("WMT_ID");
					this.OnWMT_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WMT_MatCode", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string WMT_MatCode
		{
			get
			{
				return this._WMT_MatCode;
			}
			set
			{
				if ((this._WMT_MatCode != value))
				{
					this.OnWMT_MatCodeChanging(value);
					this.SendPropertyChanging();
					this._WMT_MatCode = value;
					this.SendPropertyChanged("WMT_MatCode");
					this.OnWMT_MatCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WMT_MatName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string WMT_MatName
		{
			get
			{
				return this._WMT_MatName;
			}
			set
			{
				if ((this._WMT_MatName != value))
				{
					this.OnWMT_MatNameChanging(value);
					this.SendPropertyChanging();
					this._WMT_MatName = value;
					this.SendPropertyChanged("WMT_MatName");
					this.OnWMT_MatNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WMT_MatType", DbType="VarChar(20)")]
		public string WMT_MatType
		{
			get
			{
				return this._WMT_MatType;
			}
			set
			{
				if ((this._WMT_MatType != value))
				{
					this.OnWMT_MatTypeChanging(value);
					this.SendPropertyChanging();
					this._WMT_MatType = value;
					this.SendPropertyChanged("WMT_MatType");
					this.OnWMT_MatTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WMT_Remark", DbType="VarChar(100)")]
		public string WMT_Remark
		{
			get
			{
				return this._WMT_Remark;
			}
			set
			{
				if ((this._WMT_Remark != value))
				{
					this.OnWMT_RemarkChanging(value);
					this.SendPropertyChanging();
					this._WMT_Remark = value;
					this.SendPropertyChanged("WMT_Remark");
					this.OnWMT_RemarkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_EMaterialRegistItem_BS_WeldMaterial", Storage="_EMaterialRegistItem", ThisKey="WMT_ID", OtherKey="WMT_ID", DeleteRule="NO ACTION")]
		public EntitySet<EMaterialRegistItem> EMaterialRegistItem
		{
			get
			{
				return this._EMaterialRegistItem;
			}
			set
			{
				this._EMaterialRegistItem.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_EMInventoryRecords_BS_WeldMaterial", Storage="_EMInventoryRecords", ThisKey="WMT_ID", OtherKey="WMT_ID", DeleteRule="NO ACTION")]
		public EntitySet<EMInventoryRecords> EMInventoryRecords
		{
			get
			{
				return this._EMInventoryRecords;
			}
			set
			{
				this._EMInventoryRecords.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_PW_JointInfo_BS_WeldMaterial", Storage="_PW_JointInfo", ThisKey="WMT_ID", OtherKey="JOT_WeldMat", DeleteRule="NO ACTION")]
		public EntitySet<PW_JointInfo> PW_JointInfo
		{
			get
			{
				return this._PW_JointInfo;
			}
			set
			{
				this._PW_JointInfo.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_PW_JointInfo_BS_WeldMaterial1", Storage="_WMT_", ThisKey="WMT_ID", OtherKey="JOT_WeldSilk", DeleteRule="NO ACTION")]
		public EntitySet<PW_JointInfo> WMT_
		{
			get
			{
				return this._WMT_;
			}
			set
			{
				this._WMT_.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_EMaterialRegistItem(EMaterialRegistItem entity)
		{
			this.SendPropertyChanging();
			entity.BS_WeldMaterial = this;
		}
		
		private void detach_EMaterialRegistItem(EMaterialRegistItem entity)
		{
			this.SendPropertyChanging();
			entity.BS_WeldMaterial = null;
		}
		
		private void attach_EMInventoryRecords(EMInventoryRecords entity)
		{
			this.SendPropertyChanging();
			entity.BS_WeldMaterial = this;
		}
		
		private void detach_EMInventoryRecords(EMInventoryRecords entity)
		{
			this.SendPropertyChanging();
			entity.BS_WeldMaterial = null;
		}
		
		private void attach_PW_JointInfo(PW_JointInfo entity)
		{
			this.SendPropertyChanging();
			entity.BS_WeldMaterial = this;
		}
		
		private void detach_PW_JointInfo(PW_JointInfo entity)
		{
			this.SendPropertyChanging();
			entity.BS_WeldMaterial = null;
		}
		
		private void attach_WMT_(PW_JointInfo entity)
		{
			this.SendPropertyChanging();
			entity.JOT_WeldSilkBS_WeldMaterial = this;
		}
		
		private void detach_WMT_(PW_JointInfo entity)
		{
			this.SendPropertyChanging();
			entity.JOT_WeldSilkBS_WeldMaterial = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.BS_WeldMethod")]
	public partial class BS_WeldMethod : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _WME_ID;
		
		private string _WME_Code;
		
		private string _WME_Name;
		
		private string _WME_Remark;
		
		private EntitySet<BS_WeldMethodItem> _BS_WeldMethodItem;
		
		private EntitySet<PW_JointInfo> _PW_JointInfo;
		
		private EntitySet<PW_ProcedureImageManage> _PW_ProcedureImageManage;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnWME_IDChanging(string value);
    partial void OnWME_IDChanged();
    partial void OnWME_CodeChanging(string value);
    partial void OnWME_CodeChanged();
    partial void OnWME_NameChanging(string value);
    partial void OnWME_NameChanged();
    partial void OnWME_RemarkChanging(string value);
    partial void OnWME_RemarkChanged();
    #endregion
		
		public BS_WeldMethod()
		{
			this._BS_WeldMethodItem = new EntitySet<BS_WeldMethodItem>(new Action<BS_WeldMethodItem>(this.attach_BS_WeldMethodItem), new Action<BS_WeldMethodItem>(this.detach_BS_WeldMethodItem));
			this._PW_JointInfo = new EntitySet<PW_JointInfo>(new Action<PW_JointInfo>(this.attach_PW_JointInfo), new Action<PW_JointInfo>(this.detach_PW_JointInfo));
			this._PW_ProcedureImageManage = new EntitySet<PW_ProcedureImageManage>(new Action<PW_ProcedureImageManage>(this.attach_PW_ProcedureImageManage), new Action<PW_ProcedureImageManage>(this.detach_PW_ProcedureImageManage));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WME_ID", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string WME_ID
		{
			get
			{
				return this._WME_ID;
			}
			set
			{
				if ((this._WME_ID != value))
				{
					this.OnWME_IDChanging(value);
					this.SendPropertyChanging();
					this._WME_ID = value;
					this.SendPropertyChanged("WME_ID");
					this.OnWME_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WME_Code", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string WME_Code
		{
			get
			{
				return this._WME_Code;
			}
			set
			{
				if ((this._WME_Code != value))
				{
					this.OnWME_CodeChanging(value);
					this.SendPropertyChanging();
					this._WME_Code = value;
					this.SendPropertyChanged("WME_Code");
					this.OnWME_CodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WME_Name", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string WME_Name
		{
			get
			{
				return this._WME_Name;
			}
			set
			{
				if ((this._WME_Name != value))
				{
					this.OnWME_NameChanging(value);
					this.SendPropertyChanging();
					this._WME_Name = value;
					this.SendPropertyChanged("WME_Name");
					this.OnWME_NameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WME_Remark", DbType="VarChar(100)")]
		public string WME_Remark
		{
			get
			{
				return this._WME_Remark;
			}
			set
			{
				if ((this._WME_Remark != value))
				{
					this.OnWME_RemarkChanging(value);
					this.SendPropertyChanging();
					this._WME_Remark = value;
					this.SendPropertyChanged("WME_Remark");
					this.OnWME_RemarkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_BS_WeldMethodItem_BS_WeldMethod", Storage="_BS_WeldMethodItem", ThisKey="WME_ID", OtherKey="WME_ID", DeleteRule="NO ACTION")]
		public EntitySet<BS_WeldMethodItem> BS_WeldMethodItem
		{
			get
			{
				return this._BS_WeldMethodItem;
			}
			set
			{
				this._BS_WeldMethodItem.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_PW_JointInfo_BS_WeldMethod", Storage="_PW_JointInfo", ThisKey="WME_ID", OtherKey="WME_ID", DeleteRule="NO ACTION")]
		public EntitySet<PW_JointInfo> PW_JointInfo
		{
			get
			{
				return this._PW_JointInfo;
			}
			set
			{
				this._PW_JointInfo.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_PW_ProcedureImageManage_BS_WeldMethod", Storage="_PW_ProcedureImageManage", ThisKey="WME_ID", OtherKey="WME_ID", DeleteRule="NO ACTION")]
		public EntitySet<PW_ProcedureImageManage> PW_ProcedureImageManage
		{
			get
			{
				return this._PW_ProcedureImageManage;
			}
			set
			{
				this._PW_ProcedureImageManage.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_BS_WeldMethodItem(BS_WeldMethodItem entity)
		{
			this.SendPropertyChanging();
			entity.BS_WeldMethod = this;
		}
		
		private void detach_BS_WeldMethodItem(BS_WeldMethodItem entity)
		{
			this.SendPropertyChanging();
			entity.BS_WeldMethod = null;
		}
		
		private void attach_PW_JointInfo(PW_JointInfo entity)
		{
			this.SendPropertyChanging();
			entity.BS_WeldMethod = this;
		}
		
		private void detach_PW_JointInfo(PW_JointInfo entity)
		{
			this.SendPropertyChanging();
			entity.BS_WeldMethod = null;
		}
		
		private void attach_PW_ProcedureImageManage(PW_ProcedureImageManage entity)
		{
			this.SendPropertyChanging();
			entity.BS_WeldMethod = this;
		}
		
		private void detach_PW_ProcedureImageManage(PW_ProcedureImageManage entity)
		{
			this.SendPropertyChanging();
			entity.BS_WeldMethod = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.BS_WeldMethodItem")]
	public partial class BS_WeldMethodItem : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _WeldMethodItemId;
		
		private string _WED_ID;
		
		private string _WME_ID;
		
		private EntityRef<BS_Welder> _BS_Welder;
		
		private EntityRef<BS_WeldMethod> _BS_WeldMethod;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnWeldMethodItemIdChanging(string value);
    partial void OnWeldMethodItemIdChanged();
    partial void OnWED_IDChanging(string value);
    partial void OnWED_IDChanged();
    partial void OnWME_IDChanging(string value);
    partial void OnWME_IDChanged();
    #endregion
		
		public BS_WeldMethodItem()
		{
			this._BS_Welder = default(EntityRef<BS_Welder>);
			this._BS_WeldMethod = default(EntityRef<BS_WeldMethod>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WeldMethodItemId", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string WeldMethodItemId
		{
			get
			{
				return this._WeldMethodItemId;
			}
			set
			{
				if ((this._WeldMethodItemId != value))
				{
					this.OnWeldMethodItemIdChanging(value);
					this.SendPropertyChanging();
					this._WeldMethodItemId = value;
					this.SendPropertyChanged("WeldMethodItemId");
					this.OnWeldMethodItemIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WED_ID", DbType="NVarChar(50)")]
		public string WED_ID
		{
			get
			{
				return this._WED_ID;
			}
			set
			{
				if ((this._WED_ID != value))
				{
					if (this._BS_Welder.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnWED_IDChanging(value);
					this.SendPropertyChanging();
					this._WED_ID = value;
					this.SendPropertyChanged("WED_ID");
					this.OnWED_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WME_ID", DbType="VarChar(50)")]
		public string WME_ID
		{
			get
			{
				return this._WME_ID;
			}
			set
			{
				if ((this._WME_ID != value))
				{
					if (this._BS_WeldMethod.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnWME_IDChanging(value);
					this.SendPropertyChanging();
					this._WME_ID = value;
					this.SendPropertyChanged("WME_ID");
					this.OnWME_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_BS_WeldMethodItem_BS_Welder", Storage="_BS_Welder", ThisKey="WED_ID", OtherKey="WED_ID", IsForeignKey=true)]
		public BS_Welder BS_Welder
		{
			get
			{
				return this._BS_Welder.Entity;
			}
			set
			{
				BS_Welder previousValue = this._BS_Welder.Entity;
				if (((previousValue != value) 
							|| (this._BS_Welder.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._BS_Welder.Entity = null;
						previousValue.BS_WeldMethodItem.Remove(this);
					}
					this._BS_Welder.Entity = value;
					if ((value != null))
					{
						value.BS_WeldMethodItem.Add(this);
						this._WED_ID = value.WED_ID;
					}
					else
					{
						this._WED_ID = default(string);
					}
					this.SendPropertyChanged("BS_Welder");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_BS_WeldMethodItem_BS_WeldMethod", Storage="_BS_WeldMethod", ThisKey="WME_ID", OtherKey="WME_ID", IsForeignKey=true)]
		public BS_WeldMethod BS_WeldMethod
		{
			get
			{
				return this._BS_WeldMethod.Entity;
			}
			set
			{
				BS_WeldMethod previousValue = this._BS_WeldMethod.Entity;
				if (((previousValue != value) 
							|| (this._BS_WeldMethod.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._BS_WeldMethod.Entity = null;
						previousValue.BS_WeldMethodItem.Remove(this);
					}
					this._BS_WeldMethod.Entity = value;
					if ((value != null))
					{
						value.BS_WeldMethodItem.Add(this);
						this._WME_ID = value.WME_ID;
					}
					else
					{
						this._WME_ID = default(string);
					}
					this.SendPropertyChanged("BS_WeldMethod");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ButtonToMenu")]
	public partial class ButtonToMenu : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ButtonToMenuId;
		
		private string _MenuId;
		
		private string _ButtonName;
		
		private System.Nullable<int> _SortIndex;
		
		private EntityRef<Sys_Menu> _Sys_Menu;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnButtonToMenuIdChanging(string value);
    partial void OnButtonToMenuIdChanged();
    partial void OnMenuIdChanging(string value);
    partial void OnMenuIdChanged();
    partial void OnButtonNameChanging(string value);
    partial void OnButtonNameChanged();
    partial void OnSortIndexChanging(System.Nullable<int> value);
    partial void OnSortIndexChanged();
    #endregion
		
		public ButtonToMenu()
		{
			this._Sys_Menu = default(EntityRef<Sys_Menu>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ButtonToMenuId", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ButtonToMenuId
		{
			get
			{
				return this._ButtonToMenuId;
			}
			set
			{
				if ((this._ButtonToMenuId != value))
				{
					this.OnButtonToMenuIdChanging(value);
					this.SendPropertyChanging();
					this._ButtonToMenuId = value;
					this.SendPropertyChanged("ButtonToMenuId");
					this.OnButtonToMenuIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MenuId", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string MenuId
		{
			get
			{
				return this._MenuId;
			}
			set
			{
				if ((this._MenuId != value))
				{
					if (this._Sys_Menu.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMenuIdChanging(value);
					this.SendPropertyChanging();
					this._MenuId = value;
					this.SendPropertyChanged("MenuId");
					this.OnMenuIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ButtonName", DbType="NVarChar(10) NOT NULL", CanBeNull=false)]
		public string ButtonName
		{
			get
			{
				return this._ButtonName;
			}
			set
			{
				if ((this._ButtonName != value))
				{
					this.OnButtonNameChanging(value);
					this.SendPropertyChanging();
					this._ButtonName = value;
					this.SendPropertyChanged("ButtonName");
					this.OnButtonNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SortIndex", DbType="Int")]
		public System.Nullable<int> SortIndex
		{
			get
			{
				return this._SortIndex;
			}
			set
			{
				if ((this._SortIndex != value))
				{
					this.OnSortIndexChanging(value);
					this.SendPropertyChanging();
					this._SortIndex = value;
					this.SendPropertyChanged("SortIndex");
					this.OnSortIndexChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_ButtonToMenu_Sys_Menu", Storage="_Sys_Menu", ThisKey="MenuId", OtherKey="MenuId", IsForeignKey=true)]
		public Sys_Menu Sys_Menu
		{
			get
			{
				return this._Sys_Menu.Entity;
			}
			set
			{
				Sys_Menu previousValue = this._Sys_Menu.Entity;
				if (((previousValue != value) 
							|| (this._Sys_Menu.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Sys_Menu.Entity = null;
						previousValue.ButtonToMenu.Remove(this);
					}
					this._Sys_Menu.Entity = value;
					if ((value != null))
					{
						value.ButtonToMenu.Add(this);
						this._MenuId = value.MenuId;
					}
					else
					{
						this._MenuId = default(string);
					}
					this.SendPropertyChanged("Sys_Menu");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CH_Check")]
	public partial class CH_Check : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _CHT_CheckID;
		
		private string _CH_TrustID;
		
		private string _ProjectId;
		
		private string _UnitId;
		
		private System.Nullable<int> _InstallationId;
		
		private string _CHT_CheckCode;
		
		private System.Nullable<System.DateTime> _CHT_CheckDate;
		
		private string _CHT_CheckType;
		
		private string _CHT_CheckMan;
		
		private string _CHT_Tabler;
		
		private System.Nullable<System.DateTime> _CHT_TableDate;
		
		private string _CHT_AuditMan;
		
		private System.Nullable<System.DateTime> _CHT_AuditDate;
		
		private string _CHT_Remark;
		
		private string _RepairTrustId;
		
		private EntityRef<Base_Project> _Base_Project;
		
		private EntityRef<Base_Unit> _Base_Unit;
		
		private EntityRef<CH_Trust> _CH_Trust;
		
		private EntitySet<CH_CheckItem> _CH_CheckItem;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCHT_CheckIDChanging(string value);
    partial void OnCHT_CheckIDChanged();
    partial void OnCH_TrustIDChanging(string value);
    partial void OnCH_TrustIDChanged();
    partial void OnProjectIdChanging(string value);
    partial void OnProjectIdChanged();
    partial void OnUnitIdChanging(string value);
    partial void OnUnitIdChanged();
    partial void OnInstallationIdChanging(System.Nullable<int> value);
    partial void OnInstallationIdChanged();
    partial void OnCHT_CheckCodeChanging(string value);
    partial void OnCHT_CheckCodeChanged();
    partial void OnCHT_CheckDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCHT_CheckDateChanged();
    partial void OnCHT_CheckTypeChanging(string value);
    partial void OnCHT_CheckTypeChanged();
    partial void OnCHT_CheckManChanging(string value);
    partial void OnCHT_CheckManChanged();
    partial void OnCHT_TablerChanging(string value);
    partial void OnCHT_TablerChanged();
    partial void OnCHT_TableDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCHT_TableDateChanged();
    partial void OnCHT_AuditManChanging(string value);
    partial void OnCHT_AuditManChanged();
    partial void OnCHT_AuditDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCHT_AuditDateChanged();
    partial void OnCHT_RemarkChanging(string value);
    partial void OnCHT_RemarkChanged();
    partial void OnRepairTrustIdChanging(string value);
    partial void OnRepairTrustIdChanged();
    #endregion
		
		public CH_Check()
		{
			this._Base_Project = default(EntityRef<Base_Project>);
			this._Base_Unit = default(EntityRef<Base_Unit>);
			this._CH_Trust = default(EntityRef<CH_Trust>);
			this._CH_CheckItem = new EntitySet<CH_CheckItem>(new Action<CH_CheckItem>(this.attach_CH_CheckItem), new Action<CH_CheckItem>(this.detach_CH_CheckItem));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CHT_CheckID", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string CHT_CheckID
		{
			get
			{
				return this._CHT_CheckID;
			}
			set
			{
				if ((this._CHT_CheckID != value))
				{
					this.OnCHT_CheckIDChanging(value);
					this.SendPropertyChanging();
					this._CHT_CheckID = value;
					this.SendPropertyChanged("CHT_CheckID");
					this.OnCHT_CheckIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CH_TrustID", DbType="VarChar(50)")]
		public string CH_TrustID
		{
			get
			{
				return this._CH_TrustID;
			}
			set
			{
				if ((this._CH_TrustID != value))
				{
					if (this._CH_Trust.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCH_TrustIDChanging(value);
					this.SendPropertyChanging();
					this._CH_TrustID = value;
					this.SendPropertyChanged("CH_TrustID");
					this.OnCH_TrustIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProjectId", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string ProjectId
		{
			get
			{
				return this._ProjectId;
			}
			set
			{
				if ((this._ProjectId != value))
				{
					if (this._Base_Project.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProjectIdChanging(value);
					this.SendPropertyChanging();
					this._ProjectId = value;
					this.SendPropertyChanged("ProjectId");
					this.OnProjectIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitId", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string UnitId
		{
			get
			{
				return this._UnitId;
			}
			set
			{
				if ((this._UnitId != value))
				{
					if (this._Base_Unit.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUnitIdChanging(value);
					this.SendPropertyChanging();
					this._UnitId = value;
					this.SendPropertyChanged("UnitId");
					this.OnUnitIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InstallationId", DbType="Int")]
		public System.Nullable<int> InstallationId
		{
			get
			{
				return this._InstallationId;
			}
			set
			{
				if ((this._InstallationId != value))
				{
					this.OnInstallationIdChanging(value);
					this.SendPropertyChanging();
					this._InstallationId = value;
					this.SendPropertyChanged("InstallationId");
					this.OnInstallationIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CHT_CheckCode", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		public string CHT_CheckCode
		{
			get
			{
				return this._CHT_CheckCode;
			}
			set
			{
				if ((this._CHT_CheckCode != value))
				{
					this.OnCHT_CheckCodeChanging(value);
					this.SendPropertyChanging();
					this._CHT_CheckCode = value;
					this.SendPropertyChanged("CHT_CheckCode");
					this.OnCHT_CheckCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CHT_CheckDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CHT_CheckDate
		{
			get
			{
				return this._CHT_CheckDate;
			}
			set
			{
				if ((this._CHT_CheckDate != value))
				{
					this.OnCHT_CheckDateChanging(value);
					this.SendPropertyChanging();
					this._CHT_CheckDate = value;
					this.SendPropertyChanged("CHT_CheckDate");
					this.OnCHT_CheckDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CHT_CheckType", DbType="Char(2)")]
		public string CHT_CheckType
		{
			get
			{
				return this._CHT_CheckType;
			}
			set
			{
				if ((this._CHT_CheckType != value))
				{
					this.OnCHT_CheckTypeChanging(value);
					this.SendPropertyChanging();
					this._CHT_CheckType = value;
					this.SendPropertyChanged("CHT_CheckType");
					this.OnCHT_CheckTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CHT_CheckMan", DbType="VarChar(50)")]
		public string CHT_CheckMan
		{
			get
			{
				return this._CHT_CheckMan;
			}
			set
			{
				if ((this._CHT_CheckMan != value))
				{
					this.OnCHT_CheckManChanging(value);
					this.SendPropertyChanging();
					this._CHT_CheckMan = value;
					this.SendPropertyChanged("CHT_CheckMan");
					this.OnCHT_CheckManChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CHT_Tabler", DbType="VarChar(50)")]
		public string CHT_Tabler
		{
			get
			{
				return this._CHT_Tabler;
			}
			set
			{
				if ((this._CHT_Tabler != value))
				{
					this.OnCHT_TablerChanging(value);
					this.SendPropertyChanging();
					this._CHT_Tabler = value;
					this.SendPropertyChanged("CHT_Tabler");
					this.OnCHT_TablerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CHT_TableDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CHT_TableDate
		{
			get
			{
				return this._CHT_TableDate;
			}
			set
			{
				if ((this._CHT_TableDate != value))
				{
					this.OnCHT_TableDateChanging(value);
					this.SendPropertyChanging();
					this._CHT_TableDate = value;
					this.SendPropertyChanged("CHT_TableDate");
					this.OnCHT_TableDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CHT_AuditMan", DbType="VarChar(50)")]
		public string CHT_AuditMan
		{
			get
			{
				return this._CHT_AuditMan;
			}
			set
			{
				if ((this._CHT_AuditMan != value))
				{
					this.OnCHT_AuditManChanging(value);
					this.SendPropertyChanging();
					this._CHT_AuditMan = value;
					this.SendPropertyChanged("CHT_AuditMan");
					this.OnCHT_AuditManChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CHT_AuditDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CHT_AuditDate
		{
			get
			{
				return this._CHT_AuditDate;
			}
			set
			{
				if ((this._CHT_AuditDate != value))
				{
					this.OnCHT_AuditDateChanging(value);
					this.SendPropertyChanging();
					this._CHT_AuditDate = value;
					this.SendPropertyChanged("CHT_AuditDate");
					this.OnCHT_AuditDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CHT_Remark", DbType="VarChar(100)")]
		public string CHT_Remark
		{
			get
			{
				return this._CHT_Remark;
			}
			set
			{
				if ((this._CHT_Remark != value))
				{
					this.OnCHT_RemarkChanging(value);
					this.SendPropertyChanging();
					this._CHT_Remark = value;
					this.SendPropertyChanged("CHT_Remark");
					this.OnCHT_RemarkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RepairTrustId", DbType="NVarChar(50)")]
		public string RepairTrustId
		{
			get
			{
				return this._RepairTrustId;
			}
			set
			{
				if ((this._RepairTrustId != value))
				{
					this.OnRepairTrustIdChanging(value);
					this.SendPropertyChanging();
					this._RepairTrustId = value;
					this.SendPropertyChanged("RepairTrustId");
					this.OnRepairTrustIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_CH_Check_Base_Project", Storage="_Base_Project", ThisKey="ProjectId", OtherKey="ProjectId", IsForeignKey=true)]
		public Base_Project Base_Project
		{
			get
			{
				return this._Base_Project.Entity;
			}
			set
			{
				Base_Project previousValue = this._Base_Project.Entity;
				if (((previousValue != value) 
							|| (this._Base_Project.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Base_Project.Entity = null;
						previousValue.CH_Check.Remove(this);
					}
					this._Base_Project.Entity = value;
					if ((value != null))
					{
						value.CH_Check.Add(this);
						this._ProjectId = value.ProjectId;
					}
					else
					{
						this._ProjectId = default(string);
					}
					this.SendPropertyChanged("Base_Project");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_CH_Check_Base_Unit", Storage="_Base_Unit", ThisKey="UnitId", OtherKey="UnitId", IsForeignKey=true)]
		public Base_Unit Base_Unit
		{
			get
			{
				return this._Base_Unit.Entity;
			}
			set
			{
				Base_Unit previousValue = this._Base_Unit.Entity;
				if (((previousValue != value) 
							|| (this._Base_Unit.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Base_Unit.Entity = null;
						previousValue.CH_Check.Remove(this);
					}
					this._Base_Unit.Entity = value;
					if ((value != null))
					{
						value.CH_Check.Add(this);
						this._UnitId = value.UnitId;
					}
					else
					{
						this._UnitId = default(string);
					}
					this.SendPropertyChanged("Base_Unit");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_CH_Check_CH_Trust", Storage="_CH_Trust", ThisKey="CH_TrustID", OtherKey="CH_TrustID", IsForeignKey=true)]
		public CH_Trust CH_Trust
		{
			get
			{
				return this._CH_Trust.Entity;
			}
			set
			{
				CH_Trust previousValue = this._CH_Trust.Entity;
				if (((previousValue != value) 
							|| (this._CH_Trust.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CH_Trust.Entity = null;
						previousValue.CH_Check.Remove(this);
					}
					this._CH_Trust.Entity = value;
					if ((value != null))
					{
						value.CH_Check.Add(this);
						this._CH_TrustID = value.CH_TrustID;
					}
					else
					{
						this._CH_TrustID = default(string);
					}
					this.SendPropertyChanged("CH_Trust");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_CH_CHECK_REFERENCE_CH_CHECK", Storage="_CH_CheckItem", ThisKey="CHT_CheckID", OtherKey="CHT_CheckID", DeleteRule="NO ACTION")]
		public EntitySet<CH_CheckItem> CH_CheckItem
		{
			get
			{
				return this._CH_CheckItem;
			}
			set
			{
				this._CH_CheckItem.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CH_CheckItem(CH_CheckItem entity)
		{
			this.SendPropertyChanging();
			entity.CH_Check = this;
		}
		
		private void detach_CH_CheckItem(CH_CheckItem entity)
		{
			this.SendPropertyChanging();
			entity.CH_Check = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CH_CheckItem")]
	public partial class CH_CheckItem : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _CHT_CheckItemID;
		
		private string _CHT_CheckID;
		
		private string _JOT_ID;
		
		private string _CH_TrustItemID;
		
		private string _CHT_CheckMethod;
		
		private System.Nullable<System.DateTime> _CHT_RequestDate;
		
		private string _CHT_RepairLocation;
		
		private System.Nullable<int> _CHT_TotalFilm;
		
		private System.Nullable<int> _CHT_PassFilm;
		
		private string _CHT_CheckResult;
		
		private string _CHT_CheckNo;
		
		private System.Nullable<System.DateTime> _CHT_FilmDate;
		
		private System.Nullable<System.DateTime> _CHT_ReportDate;
		
		private string _CHT_Remark;
		
		private string _CHT_FloorWelder1;
		
		private string _CHT_FloorWelder2;
		
		private System.Nullable<System.DateTime> _CHT_AuditTime;
		
		private string _CHT_FilmSpecifications;
		
		private EntityRef<CH_Check> _CH_Check;
		
		private EntityRef<CH_TrustItem> _CH_TrustItem;
		
		private EntityRef<PW_JointInfo> _PW_JointInfo;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCHT_CheckItemIDChanging(string value);
    partial void OnCHT_CheckItemIDChanged();
    partial void OnCHT_CheckIDChanging(string value);
    partial void OnCHT_CheckIDChanged();
    partial void OnJOT_IDChanging(string value);
    partial void OnJOT_IDChanged();
    partial void OnCH_TrustItemIDChanging(string value);
    partial void OnCH_TrustItemIDChanged();
    partial void OnCHT_CheckMethodChanging(string value);
    partial void OnCHT_CheckMethodChanged();
    partial void OnCHT_RequestDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCHT_RequestDateChanged();
    partial void OnCHT_RepairLocationChanging(string value);
    partial void OnCHT_RepairLocationChanged();
    partial void OnCHT_TotalFilmChanging(System.Nullable<int> value);
    partial void OnCHT_TotalFilmChanged();
    partial void OnCHT_PassFilmChanging(System.Nullable<int> value);
    partial void OnCHT_PassFilmChanged();
    partial void OnCHT_CheckResultChanging(string value);
    partial void OnCHT_CheckResultChanged();
    partial void OnCHT_CheckNoChanging(string value);
    partial void OnCHT_CheckNoChanged();
    partial void OnCHT_FilmDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCHT_FilmDateChanged();
    partial void OnCHT_ReportDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCHT_ReportDateChanged();
    partial void OnCHT_RemarkChanging(string value);
    partial void OnCHT_RemarkChanged();
    partial void OnCHT_FloorWelder1Changing(string value);
    partial void OnCHT_FloorWelder1Changed();
    partial void OnCHT_FloorWelder2Changing(string value);
    partial void OnCHT_FloorWelder2Changed();
    partial void OnCHT_AuditTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnCHT_AuditTimeChanged();
    partial void OnCHT_FilmSpecificationsChanging(string value);
    partial void OnCHT_FilmSpecificationsChanged();
    #endregion
		
		public CH_CheckItem()
		{
			this._CH_Check = default(EntityRef<CH_Check>);
			this._CH_TrustItem = default(EntityRef<CH_TrustItem>);
			this._PW_JointInfo = default(EntityRef<PW_JointInfo>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CHT_CheckItemID", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string CHT_CheckItemID
		{
			get
			{
				return this._CHT_CheckItemID;
			}
			set
			{
				if ((this._CHT_CheckItemID != value))
				{
					this.OnCHT_CheckItemIDChanging(value);
					this.SendPropertyChanging();
					this._CHT_CheckItemID = value;
					this.SendPropertyChanged("CHT_CheckItemID");
					this.OnCHT_CheckItemIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CHT_CheckID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string CHT_CheckID
		{
			get
			{
				return this._CHT_CheckID;
			}
			set
			{
				if ((this._CHT_CheckID != value))
				{
					if (this._CH_Check.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCHT_CheckIDChanging(value);
					this.SendPropertyChanging();
					this._CHT_CheckID = value;
					this.SendPropertyChanged("CHT_CheckID");
					this.OnCHT_CheckIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JOT_ID", DbType="VarChar(50)")]
		public string JOT_ID
		{
			get
			{
				return this._JOT_ID;
			}
			set
			{
				if ((this._JOT_ID != value))
				{
					if (this._PW_JointInfo.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnJOT_IDChanging(value);
					this.SendPropertyChanging();
					this._JOT_ID = value;
					this.SendPropertyChanged("JOT_ID");
					this.OnJOT_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CH_TrustItemID", DbType="VarChar(50)")]
		public string CH_TrustItemID
		{
			get
			{
				return this._CH_TrustItemID;
			}
			set
			{
				if ((this._CH_TrustItemID != value))
				{
					if (this._CH_TrustItem.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCH_TrustItemIDChanging(value);
					this.SendPropertyChanging();
					this._CH_TrustItemID = value;
					this.SendPropertyChanged("CH_TrustItemID");
					this.OnCH_TrustItemIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CHT_CheckMethod", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string CHT_CheckMethod
		{
			get
			{
				return this._CHT_CheckMethod;
			}
			set
			{
				if ((this._CHT_CheckMethod != value))
				{
					this.OnCHT_CheckMethodChanging(value);
					this.SendPropertyChanging();
					this._CHT_CheckMethod = value;
					this.SendPropertyChanged("CHT_CheckMethod");
					this.OnCHT_CheckMethodChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CHT_RequestDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CHT_RequestDate
		{
			get
			{
				return this._CHT_RequestDate;
			}
			set
			{
				if ((this._CHT_RequestDate != value))
				{
					this.OnCHT_RequestDateChanging(value);
					this.SendPropertyChanging();
					this._CHT_RequestDate = value;
					this.SendPropertyChanged("CHT_RequestDate");
					this.OnCHT_RequestDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CHT_RepairLocation", DbType="VarChar(20)")]
		public string CHT_RepairLocation
		{
			get
			{
				return this._CHT_RepairLocation;
			}
			set
			{
				if ((this._CHT_RepairLocation != value))
				{
					this.OnCHT_RepairLocationChanging(value);
					this.SendPropertyChanging();
					this._CHT_RepairLocation = value;
					this.SendPropertyChanged("CHT_RepairLocation");
					this.OnCHT_RepairLocationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CHT_TotalFilm", DbType="Int")]
		public System.Nullable<int> CHT_TotalFilm
		{
			get
			{
				return this._CHT_TotalFilm;
			}
			set
			{
				if ((this._CHT_TotalFilm != value))
				{
					this.OnCHT_TotalFilmChanging(value);
					this.SendPropertyChanging();
					this._CHT_TotalFilm = value;
					this.SendPropertyChanged("CHT_TotalFilm");
					this.OnCHT_TotalFilmChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CHT_PassFilm", DbType="Int")]
		public System.Nullable<int> CHT_PassFilm
		{
			get
			{
				return this._CHT_PassFilm;
			}
			set
			{
				if ((this._CHT_PassFilm != value))
				{
					this.OnCHT_PassFilmChanging(value);
					this.SendPropertyChanging();
					this._CHT_PassFilm = value;
					this.SendPropertyChanged("CHT_PassFilm");
					this.OnCHT_PassFilmChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CHT_CheckResult", DbType="VarChar(20)")]
		public string CHT_CheckResult
		{
			get
			{
				return this._CHT_CheckResult;
			}
			set
			{
				if ((this._CHT_CheckResult != value))
				{
					this.OnCHT_CheckResultChanging(value);
					this.SendPropertyChanging();
					this._CHT_CheckResult = value;
					this.SendPropertyChanged("CHT_CheckResult");
					this.OnCHT_CheckResultChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CHT_CheckNo", DbType="VarChar(30)")]
		public string CHT_CheckNo
		{
			get
			{
				return this._CHT_CheckNo;
			}
			set
			{
				if ((this._CHT_CheckNo != value))
				{
					this.OnCHT_CheckNoChanging(value);
					this.SendPropertyChanging();
					this._CHT_CheckNo = value;
					this.SendPropertyChanged("CHT_CheckNo");
					this.OnCHT_CheckNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CHT_FilmDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CHT_FilmDate
		{
			get
			{
				return this._CHT_FilmDate;
			}
			set
			{
				if ((this._CHT_FilmDate != value))
				{
					this.OnCHT_FilmDateChanging(value);
					this.SendPropertyChanging();
					this._CHT_FilmDate = value;
					this.SendPropertyChanged("CHT_FilmDate");
					this.OnCHT_FilmDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CHT_ReportDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CHT_ReportDate
		{
			get
			{
				return this._CHT_ReportDate;
			}
			set
			{
				if ((this._CHT_ReportDate != value))
				{
					this.OnCHT_ReportDateChanging(value);
					this.SendPropertyChanging();
					this._CHT_ReportDate = value;
					this.SendPropertyChanged("CHT_ReportDate");
					this.OnCHT_ReportDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CHT_Remark", DbType="VarChar(100)")]
		public string CHT_Remark
		{
			get
			{
				return this._CHT_Remark;
			}
			set
			{
				if ((this._CHT_Remark != value))
				{
					this.OnCHT_RemarkChanging(value);
					this.SendPropertyChanging();
					this._CHT_Remark = value;
					this.SendPropertyChanged("CHT_Remark");
					this.OnCHT_RemarkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CHT_FloorWelder1", DbType="VarChar(20)")]
		public string CHT_FloorWelder1
		{
			get
			{
				return this._CHT_FloorWelder1;
			}
			set
			{
				if ((this._CHT_FloorWelder1 != value))
				{
					this.OnCHT_FloorWelder1Changing(value);
					this.SendPropertyChanging();
					this._CHT_FloorWelder1 = value;
					this.SendPropertyChanged("CHT_FloorWelder1");
					this.OnCHT_FloorWelder1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CHT_FloorWelder2", DbType="VarChar(20)")]
		public string CHT_FloorWelder2
		{
			get
			{
				return this._CHT_FloorWelder2;
			}
			set
			{
				if ((this._CHT_FloorWelder2 != value))
				{
					this.OnCHT_FloorWelder2Changing(value);
					this.SendPropertyChanging();
					this._CHT_FloorWelder2 = value;
					this.SendPropertyChanged("CHT_FloorWelder2");
					this.OnCHT_FloorWelder2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CHT_AuditTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> CHT_AuditTime
		{
			get
			{
				return this._CHT_AuditTime;
			}
			set
			{
				if ((this._CHT_AuditTime != value))
				{
					this.OnCHT_AuditTimeChanging(value);
					this.SendPropertyChanging();
					this._CHT_AuditTime = value;
					this.SendPropertyChanged("CHT_AuditTime");
					this.OnCHT_AuditTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CHT_FilmSpecifications", DbType="NVarChar(50)")]
		public string CHT_FilmSpecifications
		{
			get
			{
				return this._CHT_FilmSpecifications;
			}
			set
			{
				if ((this._CHT_FilmSpecifications != value))
				{
					this.OnCHT_FilmSpecificationsChanging(value);
					this.SendPropertyChanging();
					this._CHT_FilmSpecifications = value;
					this.SendPropertyChanged("CHT_FilmSpecifications");
					this.OnCHT_FilmSpecificationsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_CH_CHECK_REFERENCE_CH_CHECK", Storage="_CH_Check", ThisKey="CHT_CheckID", OtherKey="CHT_CheckID", IsForeignKey=true)]
		public CH_Check CH_Check
		{
			get
			{
				return this._CH_Check.Entity;
			}
			set
			{
				CH_Check previousValue = this._CH_Check.Entity;
				if (((previousValue != value) 
							|| (this._CH_Check.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CH_Check.Entity = null;
						previousValue.CH_CheckItem.Remove(this);
					}
					this._CH_Check.Entity = value;
					if ((value != null))
					{
						value.CH_CheckItem.Add(this);
						this._CHT_CheckID = value.CHT_CheckID;
					}
					else
					{
						this._CHT_CheckID = default(string);
					}
					this.SendPropertyChanged("CH_Check");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_CH_CHECK_REFERENCE_CH_TRUST", Storage="_CH_TrustItem", ThisKey="CH_TrustItemID", OtherKey="CH_TrustItemID", IsForeignKey=true)]
		public CH_TrustItem CH_TrustItem
		{
			get
			{
				return this._CH_TrustItem.Entity;
			}
			set
			{
				CH_TrustItem previousValue = this._CH_TrustItem.Entity;
				if (((previousValue != value) 
							|| (this._CH_TrustItem.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CH_TrustItem.Entity = null;
						previousValue.CH_CheckItem.Remove(this);
					}
					this._CH_TrustItem.Entity = value;
					if ((value != null))
					{
						value.CH_CheckItem.Add(this);
						this._CH_TrustItemID = value.CH_TrustItemID;
					}
					else
					{
						this._CH_TrustItemID = default(string);
					}
					this.SendPropertyChanged("CH_TrustItem");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_CH_CHECK_REFERENCE_PW_JOINT", Storage="_PW_JointInfo", ThisKey="JOT_ID", OtherKey="JOT_ID", IsForeignKey=true)]
		public PW_JointInfo PW_JointInfo
		{
			get
			{
				return this._PW_JointInfo.Entity;
			}
			set
			{
				PW_JointInfo previousValue = this._PW_JointInfo.Entity;
				if (((previousValue != value) 
							|| (this._PW_JointInfo.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PW_JointInfo.Entity = null;
						previousValue.CH_CheckItem.Remove(this);
					}
					this._PW_JointInfo.Entity = value;
					if ((value != null))
					{
						value.CH_CheckItem.Add(this);
						this._JOT_ID = value.JOT_ID;
					}
					else
					{
						this._JOT_ID = default(string);
					}
					this.SendPropertyChanged("PW_JointInfo");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CH_Repair")]
	public partial class CH_Repair : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _CH_RepairID;
		
		private string _ProjectId;
		
		private string _BSU_ID;
		
		private System.DateTime _CH_RepairDate;
		
		private string _CH_RepairNo;
		
		private string _CH_RepairType;
		
		private string _CH_Tabler;
		
		private System.Nullable<System.DateTime> _CH_TableDate;
		
		private string _CH_AuditMan;
		
		private System.Nullable<System.DateTime> _CH_AuditDate;
		
		private string _CH_Printer;
		
		private System.Nullable<System.DateTime> _CH_PrintDate;
		
		private string _CH_Remark;
		
		private EntityRef<Base_Project> _Base_Project;
		
		private EntityRef<Base_Unit> _Base_Unit;
		
		private EntitySet<PW_JointInfo> _PW_JointInfo;
		
		private EntitySet<PW_JointInfo> _PW_JointInfo_CH_Repair1;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCH_RepairIDChanging(string value);
    partial void OnCH_RepairIDChanged();
    partial void OnProjectIdChanging(string value);
    partial void OnProjectIdChanged();
    partial void OnBSU_IDChanging(string value);
    partial void OnBSU_IDChanged();
    partial void OnCH_RepairDateChanging(System.DateTime value);
    partial void OnCH_RepairDateChanged();
    partial void OnCH_RepairNoChanging(string value);
    partial void OnCH_RepairNoChanged();
    partial void OnCH_RepairTypeChanging(string value);
    partial void OnCH_RepairTypeChanged();
    partial void OnCH_TablerChanging(string value);
    partial void OnCH_TablerChanged();
    partial void OnCH_TableDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCH_TableDateChanged();
    partial void OnCH_AuditManChanging(string value);
    partial void OnCH_AuditManChanged();
    partial void OnCH_AuditDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCH_AuditDateChanged();
    partial void OnCH_PrinterChanging(string value);
    partial void OnCH_PrinterChanged();
    partial void OnCH_PrintDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCH_PrintDateChanged();
    partial void OnCH_RemarkChanging(string value);
    partial void OnCH_RemarkChanged();
    #endregion
		
		public CH_Repair()
		{
			this._Base_Project = default(EntityRef<Base_Project>);
			this._Base_Unit = default(EntityRef<Base_Unit>);
			this._PW_JointInfo = new EntitySet<PW_JointInfo>(new Action<PW_JointInfo>(this.attach_PW_JointInfo), new Action<PW_JointInfo>(this.detach_PW_JointInfo));
			this._PW_JointInfo_CH_Repair1 = new EntitySet<PW_JointInfo>(new Action<PW_JointInfo>(this.attach_PW_JointInfo_CH_Repair1), new Action<PW_JointInfo>(this.detach_PW_JointInfo_CH_Repair1));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CH_RepairID", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string CH_RepairID
		{
			get
			{
				return this._CH_RepairID;
			}
			set
			{
				if ((this._CH_RepairID != value))
				{
					this.OnCH_RepairIDChanging(value);
					this.SendPropertyChanging();
					this._CH_RepairID = value;
					this.SendPropertyChanged("CH_RepairID");
					this.OnCH_RepairIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProjectId", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string ProjectId
		{
			get
			{
				return this._ProjectId;
			}
			set
			{
				if ((this._ProjectId != value))
				{
					if (this._Base_Project.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProjectIdChanging(value);
					this.SendPropertyChanging();
					this._ProjectId = value;
					this.SendPropertyChanged("ProjectId");
					this.OnProjectIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BSU_ID", DbType="NVarChar(50)")]
		public string BSU_ID
		{
			get
			{
				return this._BSU_ID;
			}
			set
			{
				if ((this._BSU_ID != value))
				{
					if (this._Base_Unit.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBSU_IDChanging(value);
					this.SendPropertyChanging();
					this._BSU_ID = value;
					this.SendPropertyChanged("BSU_ID");
					this.OnBSU_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CH_RepairDate", DbType="DateTime NOT NULL")]
		public System.DateTime CH_RepairDate
		{
			get
			{
				return this._CH_RepairDate;
			}
			set
			{
				if ((this._CH_RepairDate != value))
				{
					this.OnCH_RepairDateChanging(value);
					this.SendPropertyChanging();
					this._CH_RepairDate = value;
					this.SendPropertyChanged("CH_RepairDate");
					this.OnCH_RepairDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CH_RepairNo", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string CH_RepairNo
		{
			get
			{
				return this._CH_RepairNo;
			}
			set
			{
				if ((this._CH_RepairNo != value))
				{
					this.OnCH_RepairNoChanging(value);
					this.SendPropertyChanging();
					this._CH_RepairNo = value;
					this.SendPropertyChanged("CH_RepairNo");
					this.OnCH_RepairNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CH_RepairType", DbType="VarChar(50)")]
		public string CH_RepairType
		{
			get
			{
				return this._CH_RepairType;
			}
			set
			{
				if ((this._CH_RepairType != value))
				{
					this.OnCH_RepairTypeChanging(value);
					this.SendPropertyChanging();
					this._CH_RepairType = value;
					this.SendPropertyChanged("CH_RepairType");
					this.OnCH_RepairTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CH_Tabler", DbType="VarChar(50)")]
		public string CH_Tabler
		{
			get
			{
				return this._CH_Tabler;
			}
			set
			{
				if ((this._CH_Tabler != value))
				{
					this.OnCH_TablerChanging(value);
					this.SendPropertyChanging();
					this._CH_Tabler = value;
					this.SendPropertyChanged("CH_Tabler");
					this.OnCH_TablerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CH_TableDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CH_TableDate
		{
			get
			{
				return this._CH_TableDate;
			}
			set
			{
				if ((this._CH_TableDate != value))
				{
					this.OnCH_TableDateChanging(value);
					this.SendPropertyChanging();
					this._CH_TableDate = value;
					this.SendPropertyChanged("CH_TableDate");
					this.OnCH_TableDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CH_AuditMan", DbType="VarChar(50)")]
		public string CH_AuditMan
		{
			get
			{
				return this._CH_AuditMan;
			}
			set
			{
				if ((this._CH_AuditMan != value))
				{
					this.OnCH_AuditManChanging(value);
					this.SendPropertyChanging();
					this._CH_AuditMan = value;
					this.SendPropertyChanged("CH_AuditMan");
					this.OnCH_AuditManChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CH_AuditDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CH_AuditDate
		{
			get
			{
				return this._CH_AuditDate;
			}
			set
			{
				if ((this._CH_AuditDate != value))
				{
					this.OnCH_AuditDateChanging(value);
					this.SendPropertyChanging();
					this._CH_AuditDate = value;
					this.SendPropertyChanged("CH_AuditDate");
					this.OnCH_AuditDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CH_Printer", DbType="VarChar(50)")]
		public string CH_Printer
		{
			get
			{
				return this._CH_Printer;
			}
			set
			{
				if ((this._CH_Printer != value))
				{
					this.OnCH_PrinterChanging(value);
					this.SendPropertyChanging();
					this._CH_Printer = value;
					this.SendPropertyChanged("CH_Printer");
					this.OnCH_PrinterChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CH_PrintDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CH_PrintDate
		{
			get
			{
				return this._CH_PrintDate;
			}
			set
			{
				if ((this._CH_PrintDate != value))
				{
					this.OnCH_PrintDateChanging(value);
					this.SendPropertyChanging();
					this._CH_PrintDate = value;
					this.SendPropertyChanged("CH_PrintDate");
					this.OnCH_PrintDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CH_Remark", DbType="VarChar(50)")]
		public string CH_Remark
		{
			get
			{
				return this._CH_Remark;
			}
			set
			{
				if ((this._CH_Remark != value))
				{
					this.OnCH_RemarkChanging(value);
					this.SendPropertyChanging();
					this._CH_Remark = value;
					this.SendPropertyChanged("CH_Remark");
					this.OnCH_RemarkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_CH_Repair_Base_Project", Storage="_Base_Project", ThisKey="ProjectId", OtherKey="ProjectId", IsForeignKey=true)]
		public Base_Project Base_Project
		{
			get
			{
				return this._Base_Project.Entity;
			}
			set
			{
				Base_Project previousValue = this._Base_Project.Entity;
				if (((previousValue != value) 
							|| (this._Base_Project.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Base_Project.Entity = null;
						previousValue.CH_Repair.Remove(this);
					}
					this._Base_Project.Entity = value;
					if ((value != null))
					{
						value.CH_Repair.Add(this);
						this._ProjectId = value.ProjectId;
					}
					else
					{
						this._ProjectId = default(string);
					}
					this.SendPropertyChanged("Base_Project");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_CH_Repair_Base_Unit", Storage="_Base_Unit", ThisKey="BSU_ID", OtherKey="UnitId", IsForeignKey=true)]
		public Base_Unit Base_Unit
		{
			get
			{
				return this._Base_Unit.Entity;
			}
			set
			{
				Base_Unit previousValue = this._Base_Unit.Entity;
				if (((previousValue != value) 
							|| (this._Base_Unit.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Base_Unit.Entity = null;
						previousValue.CH_Repair.Remove(this);
					}
					this._Base_Unit.Entity = value;
					if ((value != null))
					{
						value.CH_Repair.Add(this);
						this._BSU_ID = value.UnitId;
					}
					else
					{
						this._BSU_ID = default(string);
					}
					this.SendPropertyChanged("Base_Unit");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_PW_JointInfo_CH_Repair", Storage="_PW_JointInfo", ThisKey="CH_RepairID", OtherKey="CH_RepairID1", DeleteRule="NO ACTION")]
		public EntitySet<PW_JointInfo> PW_JointInfo
		{
			get
			{
				return this._PW_JointInfo;
			}
			set
			{
				this._PW_JointInfo.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_PW_JointInfo_CH_Repair1", Storage="_PW_JointInfo_CH_Repair1", ThisKey="CH_RepairID", OtherKey="CH_RepairID2", DeleteRule="NO ACTION")]
		public EntitySet<PW_JointInfo> PW_JointInfo_CH_Repair1
		{
			get
			{
				return this._PW_JointInfo_CH_Repair1;
			}
			set
			{
				this._PW_JointInfo_CH_Repair1.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_PW_JointInfo(PW_JointInfo entity)
		{
			this.SendPropertyChanging();
			entity.CH_Repair = this;
		}
		
		private void detach_PW_JointInfo(PW_JointInfo entity)
		{
			this.SendPropertyChanging();
			entity.CH_Repair = null;
		}
		
		private void attach_PW_JointInfo_CH_Repair1(PW_JointInfo entity)
		{
			this.SendPropertyChanging();
			entity.CH_RepairID2CH_Repair = this;
		}
		
		private void detach_PW_JointInfo_CH_Repair1(PW_JointInfo entity)
		{
			this.SendPropertyChanging();
			entity.CH_RepairID2CH_Repair = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CH_Trust")]
	public partial class CH_Trust : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _CH_TrustID;
		
		private string _CH_TrustCode;
		
		private string _CH_TrustUnit;
		
		private System.Nullable<System.DateTime> _CH_TrustDate;
		
		private string _CH_TrustType;
		
		private string _CH_TrustMan;
		
		private string _CH_Tabler;
		
		private System.Nullable<System.DateTime> _CH_TableDate;
		
		private string _CH_AuditMan;
		
		private System.Nullable<System.DateTime> _CH_AuditDate;
		
		private string _CH_Printer;
		
		private System.Nullable<System.DateTime> _CH_PrintDate;
		
		private string _CH_UnitName;
		
		private string _CH_WorkNo;
		
		private string _CH_ItemName;
		
		private string _CH_SlopeType;
		
		private string _CH_ServiceTemp;
		
		private string _CH_Press;
		
		private string _CH_WeldMethod;
		
		private string _CH_NDTRate;
		
		private string _CH_NDTMethod;
		
		private string _CH_NDTCriteria;
		
		private string _CH_AcceptGrade;
		
		private string _CH_Remark;
		
		private string _CH_CheckUnit;
		
		private string _ProjectId;
		
		private System.Nullable<int> _InstallationId;
		
		private System.Nullable<System.DateTime> _CH_RequestDate;
		
		private string _ToIso_Id;
		
		private EntitySet<BO_NDTTrust> _BO_NDTTrust;
		
		private EntitySet<CH_Check> _CH_Check;
		
		private EntityRef<Base_Installation> _Base_Installation;
		
		private EntityRef<Base_Project> _Base_Project;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCH_TrustIDChanging(string value);
    partial void OnCH_TrustIDChanged();
    partial void OnCH_TrustCodeChanging(string value);
    partial void OnCH_TrustCodeChanged();
    partial void OnCH_TrustUnitChanging(string value);
    partial void OnCH_TrustUnitChanged();
    partial void OnCH_TrustDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCH_TrustDateChanged();
    partial void OnCH_TrustTypeChanging(string value);
    partial void OnCH_TrustTypeChanged();
    partial void OnCH_TrustManChanging(string value);
    partial void OnCH_TrustManChanged();
    partial void OnCH_TablerChanging(string value);
    partial void OnCH_TablerChanged();
    partial void OnCH_TableDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCH_TableDateChanged();
    partial void OnCH_AuditManChanging(string value);
    partial void OnCH_AuditManChanged();
    partial void OnCH_AuditDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCH_AuditDateChanged();
    partial void OnCH_PrinterChanging(string value);
    partial void OnCH_PrinterChanged();
    partial void OnCH_PrintDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCH_PrintDateChanged();
    partial void OnCH_UnitNameChanging(string value);
    partial void OnCH_UnitNameChanged();
    partial void OnCH_WorkNoChanging(string value);
    partial void OnCH_WorkNoChanged();
    partial void OnCH_ItemNameChanging(string value);
    partial void OnCH_ItemNameChanged();
    partial void OnCH_SlopeTypeChanging(string value);
    partial void OnCH_SlopeTypeChanged();
    partial void OnCH_ServiceTempChanging(string value);
    partial void OnCH_ServiceTempChanged();
    partial void OnCH_PressChanging(string value);
    partial void OnCH_PressChanged();
    partial void OnCH_WeldMethodChanging(string value);
    partial void OnCH_WeldMethodChanged();
    partial void OnCH_NDTRateChanging(string value);
    partial void OnCH_NDTRateChanged();
    partial void OnCH_NDTMethodChanging(string value);
    partial void OnCH_NDTMethodChanged();
    partial void OnCH_NDTCriteriaChanging(string value);
    partial void OnCH_NDTCriteriaChanged();
    partial void OnCH_AcceptGradeChanging(string value);
    partial void OnCH_AcceptGradeChanged();
    partial void OnCH_RemarkChanging(string value);
    partial void OnCH_RemarkChanged();
    partial void OnCH_CheckUnitChanging(string value);
    partial void OnCH_CheckUnitChanged();
    partial void OnProjectIdChanging(string value);
    partial void OnProjectIdChanged();
    partial void OnInstallationIdChanging(System.Nullable<int> value);
    partial void OnInstallationIdChanged();
    partial void OnCH_RequestDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCH_RequestDateChanged();
    partial void OnToIso_IdChanging(string value);
    partial void OnToIso_IdChanged();
    #endregion
		
		public CH_Trust()
		{
			this._BO_NDTTrust = new EntitySet<BO_NDTTrust>(new Action<BO_NDTTrust>(this.attach_BO_NDTTrust), new Action<BO_NDTTrust>(this.detach_BO_NDTTrust));
			this._CH_Check = new EntitySet<CH_Check>(new Action<CH_Check>(this.attach_CH_Check), new Action<CH_Check>(this.detach_CH_Check));
			this._Base_Installation = default(EntityRef<Base_Installation>);
			this._Base_Project = default(EntityRef<Base_Project>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CH_TrustID", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string CH_TrustID
		{
			get
			{
				return this._CH_TrustID;
			}
			set
			{
				if ((this._CH_TrustID != value))
				{
					this.OnCH_TrustIDChanging(value);
					this.SendPropertyChanging();
					this._CH_TrustID = value;
					this.SendPropertyChanged("CH_TrustID");
					this.OnCH_TrustIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CH_TrustCode", DbType="VarChar(30)")]
		public string CH_TrustCode
		{
			get
			{
				return this._CH_TrustCode;
			}
			set
			{
				if ((this._CH_TrustCode != value))
				{
					this.OnCH_TrustCodeChanging(value);
					this.SendPropertyChanging();
					this._CH_TrustCode = value;
					this.SendPropertyChanged("CH_TrustCode");
					this.OnCH_TrustCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CH_TrustUnit", DbType="VarChar(50)")]
		public string CH_TrustUnit
		{
			get
			{
				return this._CH_TrustUnit;
			}
			set
			{
				if ((this._CH_TrustUnit != value))
				{
					this.OnCH_TrustUnitChanging(value);
					this.SendPropertyChanging();
					this._CH_TrustUnit = value;
					this.SendPropertyChanged("CH_TrustUnit");
					this.OnCH_TrustUnitChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CH_TrustDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CH_TrustDate
		{
			get
			{
				return this._CH_TrustDate;
			}
			set
			{
				if ((this._CH_TrustDate != value))
				{
					this.OnCH_TrustDateChanging(value);
					this.SendPropertyChanging();
					this._CH_TrustDate = value;
					this.SendPropertyChanged("CH_TrustDate");
					this.OnCH_TrustDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CH_TrustType", DbType="Char(2)")]
		public string CH_TrustType
		{
			get
			{
				return this._CH_TrustType;
			}
			set
			{
				if ((this._CH_TrustType != value))
				{
					this.OnCH_TrustTypeChanging(value);
					this.SendPropertyChanging();
					this._CH_TrustType = value;
					this.SendPropertyChanged("CH_TrustType");
					this.OnCH_TrustTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CH_TrustMan", DbType="VarChar(50)")]
		public string CH_TrustMan
		{
			get
			{
				return this._CH_TrustMan;
			}
			set
			{
				if ((this._CH_TrustMan != value))
				{
					this.OnCH_TrustManChanging(value);
					this.SendPropertyChanging();
					this._CH_TrustMan = value;
					this.SendPropertyChanged("CH_TrustMan");
					this.OnCH_TrustManChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CH_Tabler", DbType="VarChar(50)")]
		public string CH_Tabler
		{
			get
			{
				return this._CH_Tabler;
			}
			set
			{
				if ((this._CH_Tabler != value))
				{
					this.OnCH_TablerChanging(value);
					this.SendPropertyChanging();
					this._CH_Tabler = value;
					this.SendPropertyChanged("CH_Tabler");
					this.OnCH_TablerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CH_TableDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CH_TableDate
		{
			get
			{
				return this._CH_TableDate;
			}
			set
			{
				if ((this._CH_TableDate != value))
				{
					this.OnCH_TableDateChanging(value);
					this.SendPropertyChanging();
					this._CH_TableDate = value;
					this.SendPropertyChanged("CH_TableDate");
					this.OnCH_TableDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CH_AuditMan", DbType="VarChar(50)")]
		public string CH_AuditMan
		{
			get
			{
				return this._CH_AuditMan;
			}
			set
			{
				if ((this._CH_AuditMan != value))
				{
					this.OnCH_AuditManChanging(value);
					this.SendPropertyChanging();
					this._CH_AuditMan = value;
					this.SendPropertyChanged("CH_AuditMan");
					this.OnCH_AuditManChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CH_AuditDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CH_AuditDate
		{
			get
			{
				return this._CH_AuditDate;
			}
			set
			{
				if ((this._CH_AuditDate != value))
				{
					this.OnCH_AuditDateChanging(value);
					this.SendPropertyChanging();
					this._CH_AuditDate = value;
					this.SendPropertyChanged("CH_AuditDate");
					this.OnCH_AuditDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CH_Printer", DbType="VarChar(50)")]
		public string CH_Printer
		{
			get
			{
				return this._CH_Printer;
			}
			set
			{
				if ((this._CH_Printer != value))
				{
					this.OnCH_PrinterChanging(value);
					this.SendPropertyChanging();
					this._CH_Printer = value;
					this.SendPropertyChanged("CH_Printer");
					this.OnCH_PrinterChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CH_PrintDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CH_PrintDate
		{
			get
			{
				return this._CH_PrintDate;
			}
			set
			{
				if ((this._CH_PrintDate != value))
				{
					this.OnCH_PrintDateChanging(value);
					this.SendPropertyChanging();
					this._CH_PrintDate = value;
					this.SendPropertyChanged("CH_PrintDate");
					this.OnCH_PrintDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CH_UnitName", DbType="VarChar(60)")]
		public string CH_UnitName
		{
			get
			{
				return this._CH_UnitName;
			}
			set
			{
				if ((this._CH_UnitName != value))
				{
					this.OnCH_UnitNameChanging(value);
					this.SendPropertyChanging();
					this._CH_UnitName = value;
					this.SendPropertyChanged("CH_UnitName");
					this.OnCH_UnitNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CH_WorkNo", DbType="VarChar(60)")]
		public string CH_WorkNo
		{
			get
			{
				return this._CH_WorkNo;
			}
			set
			{
				if ((this._CH_WorkNo != value))
				{
					this.OnCH_WorkNoChanging(value);
					this.SendPropertyChanging();
					this._CH_WorkNo = value;
					this.SendPropertyChanged("CH_WorkNo");
					this.OnCH_WorkNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CH_ItemName", DbType="VarChar(60)")]
		public string CH_ItemName
		{
			get
			{
				return this._CH_ItemName;
			}
			set
			{
				if ((this._CH_ItemName != value))
				{
					this.OnCH_ItemNameChanging(value);
					this.SendPropertyChanging();
					this._CH_ItemName = value;
					this.SendPropertyChanged("CH_ItemName");
					this.OnCH_ItemNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CH_SlopeType", DbType="VarChar(50)")]
		public string CH_SlopeType
		{
			get
			{
				return this._CH_SlopeType;
			}
			set
			{
				if ((this._CH_SlopeType != value))
				{
					this.OnCH_SlopeTypeChanging(value);
					this.SendPropertyChanging();
					this._CH_SlopeType = value;
					this.SendPropertyChanged("CH_SlopeType");
					this.OnCH_SlopeTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CH_ServiceTemp", DbType="VarChar(60)")]
		public string CH_ServiceTemp
		{
			get
			{
				return this._CH_ServiceTemp;
			}
			set
			{
				if ((this._CH_ServiceTemp != value))
				{
					this.OnCH_ServiceTempChanging(value);
					this.SendPropertyChanging();
					this._CH_ServiceTemp = value;
					this.SendPropertyChanged("CH_ServiceTemp");
					this.OnCH_ServiceTempChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CH_Press", DbType="VarChar(60)")]
		public string CH_Press
		{
			get
			{
				return this._CH_Press;
			}
			set
			{
				if ((this._CH_Press != value))
				{
					this.OnCH_PressChanging(value);
					this.SendPropertyChanging();
					this._CH_Press = value;
					this.SendPropertyChanged("CH_Press");
					this.OnCH_PressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CH_WeldMethod", DbType="VarChar(50)")]
		public string CH_WeldMethod
		{
			get
			{
				return this._CH_WeldMethod;
			}
			set
			{
				if ((this._CH_WeldMethod != value))
				{
					this.OnCH_WeldMethodChanging(value);
					this.SendPropertyChanging();
					this._CH_WeldMethod = value;
					this.SendPropertyChanged("CH_WeldMethod");
					this.OnCH_WeldMethodChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CH_NDTRate", DbType="VarChar(50)")]
		public string CH_NDTRate
		{
			get
			{
				return this._CH_NDTRate;
			}
			set
			{
				if ((this._CH_NDTRate != value))
				{
					this.OnCH_NDTRateChanging(value);
					this.SendPropertyChanging();
					this._CH_NDTRate = value;
					this.SendPropertyChanged("CH_NDTRate");
					this.OnCH_NDTRateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CH_NDTMethod", DbType="VarChar(50)")]
		public string CH_NDTMethod
		{
			get
			{
				return this._CH_NDTMethod;
			}
			set
			{
				if ((this._CH_NDTMethod != value))
				{
					this.OnCH_NDTMethodChanging(value);
					this.SendPropertyChanging();
					this._CH_NDTMethod = value;
					this.SendPropertyChanged("CH_NDTMethod");
					this.OnCH_NDTMethodChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CH_NDTCriteria", DbType="VarChar(60)")]
		public string CH_NDTCriteria
		{
			get
			{
				return this._CH_NDTCriteria;
			}
			set
			{
				if ((this._CH_NDTCriteria != value))
				{
					this.OnCH_NDTCriteriaChanging(value);
					this.SendPropertyChanging();
					this._CH_NDTCriteria = value;
					this.SendPropertyChanged("CH_NDTCriteria");
					this.OnCH_NDTCriteriaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CH_AcceptGrade", DbType="VarChar(100)")]
		public string CH_AcceptGrade
		{
			get
			{
				return this._CH_AcceptGrade;
			}
			set
			{
				if ((this._CH_AcceptGrade != value))
				{
					this.OnCH_AcceptGradeChanging(value);
					this.SendPropertyChanging();
					this._CH_AcceptGrade = value;
					this.SendPropertyChanged("CH_AcceptGrade");
					this.OnCH_AcceptGradeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CH_Remark", DbType="VarChar(100)")]
		public string CH_Remark
		{
			get
			{
				return this._CH_Remark;
			}
			set
			{
				if ((this._CH_Remark != value))
				{
					this.OnCH_RemarkChanging(value);
					this.SendPropertyChanging();
					this._CH_Remark = value;
					this.SendPropertyChanged("CH_Remark");
					this.OnCH_RemarkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CH_CheckUnit", DbType="VarChar(40)")]
		public string CH_CheckUnit
		{
			get
			{
				return this._CH_CheckUnit;
			}
			set
			{
				if ((this._CH_CheckUnit != value))
				{
					this.OnCH_CheckUnitChanging(value);
					this.SendPropertyChanging();
					this._CH_CheckUnit = value;
					this.SendPropertyChanged("CH_CheckUnit");
					this.OnCH_CheckUnitChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProjectId", DbType="NVarChar(50)")]
		public string ProjectId
		{
			get
			{
				return this._ProjectId;
			}
			set
			{
				if ((this._ProjectId != value))
				{
					if (this._Base_Project.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProjectIdChanging(value);
					this.SendPropertyChanging();
					this._ProjectId = value;
					this.SendPropertyChanged("ProjectId");
					this.OnProjectIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InstallationId", DbType="Int")]
		public System.Nullable<int> InstallationId
		{
			get
			{
				return this._InstallationId;
			}
			set
			{
				if ((this._InstallationId != value))
				{
					if (this._Base_Installation.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnInstallationIdChanging(value);
					this.SendPropertyChanging();
					this._InstallationId = value;
					this.SendPropertyChanged("InstallationId");
					this.OnInstallationIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CH_RequestDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CH_RequestDate
		{
			get
			{
				return this._CH_RequestDate;
			}
			set
			{
				if ((this._CH_RequestDate != value))
				{
					this.OnCH_RequestDateChanging(value);
					this.SendPropertyChanging();
					this._CH_RequestDate = value;
					this.SendPropertyChanged("CH_RequestDate");
					this.OnCH_RequestDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ToIso_Id", DbType="NVarChar(50)")]
		public string ToIso_Id
		{
			get
			{
				return this._ToIso_Id;
			}
			set
			{
				if ((this._ToIso_Id != value))
				{
					this.OnToIso_IdChanging(value);
					this.SendPropertyChanging();
					this._ToIso_Id = value;
					this.SendPropertyChanged("ToIso_Id");
					this.OnToIso_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_BO_NDTTrust_CH_Trust", Storage="_BO_NDTTrust", ThisKey="CH_TrustID", OtherKey="CH_TrustID", DeleteRule="NO ACTION")]
		public EntitySet<BO_NDTTrust> BO_NDTTrust
		{
			get
			{
				return this._BO_NDTTrust;
			}
			set
			{
				this._BO_NDTTrust.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_CH_Check_CH_Trust", Storage="_CH_Check", ThisKey="CH_TrustID", OtherKey="CH_TrustID", DeleteRule="NO ACTION")]
		public EntitySet<CH_Check> CH_Check
		{
			get
			{
				return this._CH_Check;
			}
			set
			{
				this._CH_Check.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_CH_Trust_Base_Installation", Storage="_Base_Installation", ThisKey="InstallationId", OtherKey="InstallationId", IsForeignKey=true)]
		public Base_Installation Base_Installation
		{
			get
			{
				return this._Base_Installation.Entity;
			}
			set
			{
				Base_Installation previousValue = this._Base_Installation.Entity;
				if (((previousValue != value) 
							|| (this._Base_Installation.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Base_Installation.Entity = null;
						previousValue.CH_Trust.Remove(this);
					}
					this._Base_Installation.Entity = value;
					if ((value != null))
					{
						value.CH_Trust.Add(this);
						this._InstallationId = value.InstallationId;
					}
					else
					{
						this._InstallationId = default(Nullable<int>);
					}
					this.SendPropertyChanged("Base_Installation");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_CH_Trust_Base_Project", Storage="_Base_Project", ThisKey="ProjectId", OtherKey="ProjectId", IsForeignKey=true)]
		public Base_Project Base_Project
		{
			get
			{
				return this._Base_Project.Entity;
			}
			set
			{
				Base_Project previousValue = this._Base_Project.Entity;
				if (((previousValue != value) 
							|| (this._Base_Project.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Base_Project.Entity = null;
						previousValue.CH_Trust.Remove(this);
					}
					this._Base_Project.Entity = value;
					if ((value != null))
					{
						value.CH_Trust.Add(this);
						this._ProjectId = value.ProjectId;
					}
					else
					{
						this._ProjectId = default(string);
					}
					this.SendPropertyChanged("Base_Project");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_BO_NDTTrust(BO_NDTTrust entity)
		{
			this.SendPropertyChanging();
			entity.CH_Trust = this;
		}
		
		private void detach_BO_NDTTrust(BO_NDTTrust entity)
		{
			this.SendPropertyChanging();
			entity.CH_Trust = null;
		}
		
		private void attach_CH_Check(CH_Check entity)
		{
			this.SendPropertyChanging();
			entity.CH_Trust = this;
		}
		
		private void detach_CH_Check(CH_Check entity)
		{
			this.SendPropertyChanging();
			entity.CH_Trust = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CH_TrustItem")]
	public partial class CH_TrustItem : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _CH_TrustItemID;
		
		private string _CH_TrustID;
		
		private string _JOT_ID;
		
		private string _CHT_CheckItemId;
		
		private string _CH_CheckMethod;
		
		private string _CH_UnitNo;
		
		private string _CH_CheckResult;
		
		private string _CH_RepairLocation;
		
		private string _CH_Remark;
		
		private EntitySet<CH_CheckItem> _CH_CheckItem;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCH_TrustItemIDChanging(string value);
    partial void OnCH_TrustItemIDChanged();
    partial void OnCH_TrustIDChanging(string value);
    partial void OnCH_TrustIDChanged();
    partial void OnJOT_IDChanging(string value);
    partial void OnJOT_IDChanged();
    partial void OnCHT_CheckItemIdChanging(string value);
    partial void OnCHT_CheckItemIdChanged();
    partial void OnCH_CheckMethodChanging(string value);
    partial void OnCH_CheckMethodChanged();
    partial void OnCH_UnitNoChanging(string value);
    partial void OnCH_UnitNoChanged();
    partial void OnCH_CheckResultChanging(string value);
    partial void OnCH_CheckResultChanged();
    partial void OnCH_RepairLocationChanging(string value);
    partial void OnCH_RepairLocationChanged();
    partial void OnCH_RemarkChanging(string value);
    partial void OnCH_RemarkChanged();
    #endregion
		
		public CH_TrustItem()
		{
			this._CH_CheckItem = new EntitySet<CH_CheckItem>(new Action<CH_CheckItem>(this.attach_CH_CheckItem), new Action<CH_CheckItem>(this.detach_CH_CheckItem));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CH_TrustItemID", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string CH_TrustItemID
		{
			get
			{
				return this._CH_TrustItemID;
			}
			set
			{
				if ((this._CH_TrustItemID != value))
				{
					this.OnCH_TrustItemIDChanging(value);
					this.SendPropertyChanging();
					this._CH_TrustItemID = value;
					this.SendPropertyChanged("CH_TrustItemID");
					this.OnCH_TrustItemIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CH_TrustID", DbType="VarChar(50)")]
		public string CH_TrustID
		{
			get
			{
				return this._CH_TrustID;
			}
			set
			{
				if ((this._CH_TrustID != value))
				{
					this.OnCH_TrustIDChanging(value);
					this.SendPropertyChanging();
					this._CH_TrustID = value;
					this.SendPropertyChanged("CH_TrustID");
					this.OnCH_TrustIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JOT_ID", DbType="VarChar(50)")]
		public string JOT_ID
		{
			get
			{
				return this._JOT_ID;
			}
			set
			{
				if ((this._JOT_ID != value))
				{
					this.OnJOT_IDChanging(value);
					this.SendPropertyChanging();
					this._JOT_ID = value;
					this.SendPropertyChanged("JOT_ID");
					this.OnJOT_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CHT_CheckItemId", DbType="VarChar(50)")]
		public string CHT_CheckItemId
		{
			get
			{
				return this._CHT_CheckItemId;
			}
			set
			{
				if ((this._CHT_CheckItemId != value))
				{
					this.OnCHT_CheckItemIdChanging(value);
					this.SendPropertyChanging();
					this._CHT_CheckItemId = value;
					this.SendPropertyChanged("CHT_CheckItemId");
					this.OnCHT_CheckItemIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CH_CheckMethod", DbType="VarChar(50)")]
		public string CH_CheckMethod
		{
			get
			{
				return this._CH_CheckMethod;
			}
			set
			{
				if ((this._CH_CheckMethod != value))
				{
					this.OnCH_CheckMethodChanging(value);
					this.SendPropertyChanging();
					this._CH_CheckMethod = value;
					this.SendPropertyChanged("CH_CheckMethod");
					this.OnCH_CheckMethodChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CH_UnitNo", DbType="VarChar(50)")]
		public string CH_UnitNo
		{
			get
			{
				return this._CH_UnitNo;
			}
			set
			{
				if ((this._CH_UnitNo != value))
				{
					this.OnCH_UnitNoChanging(value);
					this.SendPropertyChanging();
					this._CH_UnitNo = value;
					this.SendPropertyChanged("CH_UnitNo");
					this.OnCH_UnitNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CH_CheckResult", DbType="VarChar(20)")]
		public string CH_CheckResult
		{
			get
			{
				return this._CH_CheckResult;
			}
			set
			{
				if ((this._CH_CheckResult != value))
				{
					this.OnCH_CheckResultChanging(value);
					this.SendPropertyChanging();
					this._CH_CheckResult = value;
					this.SendPropertyChanged("CH_CheckResult");
					this.OnCH_CheckResultChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CH_RepairLocation", DbType="VarChar(20)")]
		public string CH_RepairLocation
		{
			get
			{
				return this._CH_RepairLocation;
			}
			set
			{
				if ((this._CH_RepairLocation != value))
				{
					this.OnCH_RepairLocationChanging(value);
					this.SendPropertyChanging();
					this._CH_RepairLocation = value;
					this.SendPropertyChanged("CH_RepairLocation");
					this.OnCH_RepairLocationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CH_Remark", DbType="VarChar(100)")]
		public string CH_Remark
		{
			get
			{
				return this._CH_Remark;
			}
			set
			{
				if ((this._CH_Remark != value))
				{
					this.OnCH_RemarkChanging(value);
					this.SendPropertyChanging();
					this._CH_Remark = value;
					this.SendPropertyChanged("CH_Remark");
					this.OnCH_RemarkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_CH_CHECK_REFERENCE_CH_TRUST", Storage="_CH_CheckItem", ThisKey="CH_TrustItemID", OtherKey="CH_TrustItemID", DeleteRule="NO ACTION")]
		public EntitySet<CH_CheckItem> CH_CheckItem
		{
			get
			{
				return this._CH_CheckItem;
			}
			set
			{
				this._CH_CheckItem.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CH_CheckItem(CH_CheckItem entity)
		{
			this.SendPropertyChanging();
			entity.CH_TrustItem = this;
		}
		
		private void detach_CH_CheckItem(CH_CheckItem entity)
		{
			this.SendPropertyChanging();
			entity.CH_TrustItem = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.dt_document")]
	public partial class Dt_document : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _O_pkid;
		
		private string _O_flsid;
		
		private string _O_number;
		
		private string _O_name;
		
		private string _O_type;
		
		private string _O_syfw;
		
		private string _O_creator;
		
		private string _O_size;
		
		private System.Data.Linq.Binary _O_file;
		
		private System.Nullable<int> _O_flag;
		
		private string _O_bz;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnO_pkidChanging(int value);
    partial void OnO_pkidChanged();
    partial void OnO_flsidChanging(string value);
    partial void OnO_flsidChanged();
    partial void OnO_numberChanging(string value);
    partial void OnO_numberChanged();
    partial void OnO_nameChanging(string value);
    partial void OnO_nameChanged();
    partial void OnO_typeChanging(string value);
    partial void OnO_typeChanged();
    partial void OnO_syfwChanging(string value);
    partial void OnO_syfwChanged();
    partial void OnO_creatorChanging(string value);
    partial void OnO_creatorChanged();
    partial void OnO_sizeChanging(string value);
    partial void OnO_sizeChanged();
    partial void OnO_fileChanging(System.Data.Linq.Binary value);
    partial void OnO_fileChanged();
    partial void OnO_flagChanging(System.Nullable<int> value);
    partial void OnO_flagChanged();
    partial void OnO_bzChanging(string value);
    partial void OnO_bzChanged();
    #endregion
		
		public Dt_document()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="o_pkid", Storage="_O_pkid", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int O_pkid
		{
			get
			{
				return this._O_pkid;
			}
			set
			{
				if ((this._O_pkid != value))
				{
					this.OnO_pkidChanging(value);
					this.SendPropertyChanging();
					this._O_pkid = value;
					this.SendPropertyChanged("O_pkid");
					this.OnO_pkidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="o_flsid", Storage="_O_flsid", DbType="NVarChar(50)")]
		public string O_flsid
		{
			get
			{
				return this._O_flsid;
			}
			set
			{
				if ((this._O_flsid != value))
				{
					this.OnO_flsidChanging(value);
					this.SendPropertyChanging();
					this._O_flsid = value;
					this.SendPropertyChanged("O_flsid");
					this.OnO_flsidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="o_number", Storage="_O_number", DbType="NVarChar(50)")]
		public string O_number
		{
			get
			{
				return this._O_number;
			}
			set
			{
				if ((this._O_number != value))
				{
					this.OnO_numberChanging(value);
					this.SendPropertyChanging();
					this._O_number = value;
					this.SendPropertyChanged("O_number");
					this.OnO_numberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="o_name", Storage="_O_name", DbType="NVarChar(250)")]
		public string O_name
		{
			get
			{
				return this._O_name;
			}
			set
			{
				if ((this._O_name != value))
				{
					this.OnO_nameChanging(value);
					this.SendPropertyChanging();
					this._O_name = value;
					this.SendPropertyChanged("O_name");
					this.OnO_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="o_type", Storage="_O_type", DbType="NChar(50)")]
		public string O_type
		{
			get
			{
				return this._O_type;
			}
			set
			{
				if ((this._O_type != value))
				{
					this.OnO_typeChanging(value);
					this.SendPropertyChanging();
					this._O_type = value;
					this.SendPropertyChanged("O_type");
					this.OnO_typeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="o_syfw", Storage="_O_syfw", DbType="NVarChar(50)")]
		public string O_syfw
		{
			get
			{
				return this._O_syfw;
			}
			set
			{
				if ((this._O_syfw != value))
				{
					this.OnO_syfwChanging(value);
					this.SendPropertyChanging();
					this._O_syfw = value;
					this.SendPropertyChanged("O_syfw");
					this.OnO_syfwChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="o_creator", Storage="_O_creator", DbType="NVarChar(50)")]
		public string O_creator
		{
			get
			{
				return this._O_creator;
			}
			set
			{
				if ((this._O_creator != value))
				{
					this.OnO_creatorChanging(value);
					this.SendPropertyChanging();
					this._O_creator = value;
					this.SendPropertyChanged("O_creator");
					this.OnO_creatorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="o_size", Storage="_O_size", DbType="NVarChar(50)")]
		public string O_size
		{
			get
			{
				return this._O_size;
			}
			set
			{
				if ((this._O_size != value))
				{
					this.OnO_sizeChanging(value);
					this.SendPropertyChanging();
					this._O_size = value;
					this.SendPropertyChanged("O_size");
					this.OnO_sizeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="o_file", Storage="_O_file", DbType="Image", CanBeNull=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary O_file
		{
			get
			{
				return this._O_file;
			}
			set
			{
				if ((this._O_file != value))
				{
					this.OnO_fileChanging(value);
					this.SendPropertyChanging();
					this._O_file = value;
					this.SendPropertyChanged("O_file");
					this.OnO_fileChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="o_flag", Storage="_O_flag", DbType="Int")]
		public System.Nullable<int> O_flag
		{
			get
			{
				return this._O_flag;
			}
			set
			{
				if ((this._O_flag != value))
				{
					this.OnO_flagChanging(value);
					this.SendPropertyChanging();
					this._O_flag = value;
					this.SendPropertyChanged("O_flag");
					this.OnO_flagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="o_bz", Storage="_O_bz", DbType="NVarChar(250)")]
		public string O_bz
		{
			get
			{
				return this._O_bz;
			}
			set
			{
				if ((this._O_bz != value))
				{
					this.OnO_bzChanging(value);
					this.SendPropertyChanging();
					this._O_bz = value;
					this.SendPropertyChanged("O_bz");
					this.OnO_bzChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ElectrodeBake")]
	public partial class ElectrodeBake : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ElectrodeID;
		
		private string _ElectrodeCode;
		
		private System.Nullable<System.DateTime> _ElectrodeDate;
		
		private string _UnitId;
		
		private string _CompileMan;
		
		private System.Nullable<System.DateTime> _CompileDate;
		
		private string _ProjectId;
		
		private EntityRef<Base_Project> _Base_Project;
		
		private EntityRef<Base_Unit> _Base_Unit;
		
		private EntityRef<Sys_User> _Sys_User;
		
		private EntitySet<ElectrodeBakeItem> _ElectrodeBakeItem;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnElectrodeIDChanging(string value);
    partial void OnElectrodeIDChanged();
    partial void OnElectrodeCodeChanging(string value);
    partial void OnElectrodeCodeChanged();
    partial void OnElectrodeDateChanging(System.Nullable<System.DateTime> value);
    partial void OnElectrodeDateChanged();
    partial void OnUnitIdChanging(string value);
    partial void OnUnitIdChanged();
    partial void OnCompileManChanging(string value);
    partial void OnCompileManChanged();
    partial void OnCompileDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCompileDateChanged();
    partial void OnProjectIdChanging(string value);
    partial void OnProjectIdChanged();
    #endregion
		
		public ElectrodeBake()
		{
			this._Base_Project = default(EntityRef<Base_Project>);
			this._Base_Unit = default(EntityRef<Base_Unit>);
			this._Sys_User = default(EntityRef<Sys_User>);
			this._ElectrodeBakeItem = new EntitySet<ElectrodeBakeItem>(new Action<ElectrodeBakeItem>(this.attach_ElectrodeBakeItem), new Action<ElectrodeBakeItem>(this.detach_ElectrodeBakeItem));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ElectrodeID", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ElectrodeID
		{
			get
			{
				return this._ElectrodeID;
			}
			set
			{
				if ((this._ElectrodeID != value))
				{
					this.OnElectrodeIDChanging(value);
					this.SendPropertyChanging();
					this._ElectrodeID = value;
					this.SendPropertyChanged("ElectrodeID");
					this.OnElectrodeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ElectrodeCode", DbType="NVarChar(50)")]
		public string ElectrodeCode
		{
			get
			{
				return this._ElectrodeCode;
			}
			set
			{
				if ((this._ElectrodeCode != value))
				{
					this.OnElectrodeCodeChanging(value);
					this.SendPropertyChanging();
					this._ElectrodeCode = value;
					this.SendPropertyChanged("ElectrodeCode");
					this.OnElectrodeCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ElectrodeDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ElectrodeDate
		{
			get
			{
				return this._ElectrodeDate;
			}
			set
			{
				if ((this._ElectrodeDate != value))
				{
					this.OnElectrodeDateChanging(value);
					this.SendPropertyChanging();
					this._ElectrodeDate = value;
					this.SendPropertyChanged("ElectrodeDate");
					this.OnElectrodeDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitId", DbType="NVarChar(50)")]
		public string UnitId
		{
			get
			{
				return this._UnitId;
			}
			set
			{
				if ((this._UnitId != value))
				{
					if (this._Base_Unit.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUnitIdChanging(value);
					this.SendPropertyChanging();
					this._UnitId = value;
					this.SendPropertyChanged("UnitId");
					this.OnUnitIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompileMan", DbType="NVarChar(50)")]
		public string CompileMan
		{
			get
			{
				return this._CompileMan;
			}
			set
			{
				if ((this._CompileMan != value))
				{
					if (this._Sys_User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCompileManChanging(value);
					this.SendPropertyChanging();
					this._CompileMan = value;
					this.SendPropertyChanged("CompileMan");
					this.OnCompileManChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompileDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CompileDate
		{
			get
			{
				return this._CompileDate;
			}
			set
			{
				if ((this._CompileDate != value))
				{
					this.OnCompileDateChanging(value);
					this.SendPropertyChanging();
					this._CompileDate = value;
					this.SendPropertyChanged("CompileDate");
					this.OnCompileDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProjectId", DbType="NVarChar(50)")]
		public string ProjectId
		{
			get
			{
				return this._ProjectId;
			}
			set
			{
				if ((this._ProjectId != value))
				{
					if (this._Base_Project.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProjectIdChanging(value);
					this.SendPropertyChanging();
					this._ProjectId = value;
					this.SendPropertyChanged("ProjectId");
					this.OnProjectIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_ElectrodeBake_Base_Project", Storage="_Base_Project", ThisKey="ProjectId", OtherKey="ProjectId", IsForeignKey=true)]
		public Base_Project Base_Project
		{
			get
			{
				return this._Base_Project.Entity;
			}
			set
			{
				Base_Project previousValue = this._Base_Project.Entity;
				if (((previousValue != value) 
							|| (this._Base_Project.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Base_Project.Entity = null;
						previousValue.ElectrodeBake.Remove(this);
					}
					this._Base_Project.Entity = value;
					if ((value != null))
					{
						value.ElectrodeBake.Add(this);
						this._ProjectId = value.ProjectId;
					}
					else
					{
						this._ProjectId = default(string);
					}
					this.SendPropertyChanged("Base_Project");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_ElectrodeBake_Base_Unit", Storage="_Base_Unit", ThisKey="UnitId", OtherKey="UnitId", IsForeignKey=true)]
		public Base_Unit Base_Unit
		{
			get
			{
				return this._Base_Unit.Entity;
			}
			set
			{
				Base_Unit previousValue = this._Base_Unit.Entity;
				if (((previousValue != value) 
							|| (this._Base_Unit.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Base_Unit.Entity = null;
						previousValue.ElectrodeBake.Remove(this);
					}
					this._Base_Unit.Entity = value;
					if ((value != null))
					{
						value.ElectrodeBake.Add(this);
						this._UnitId = value.UnitId;
					}
					else
					{
						this._UnitId = default(string);
					}
					this.SendPropertyChanged("Base_Unit");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_ElectrodeBake_Sys_User", Storage="_Sys_User", ThisKey="CompileMan", OtherKey="UserId", IsForeignKey=true)]
		public Sys_User Sys_User
		{
			get
			{
				return this._Sys_User.Entity;
			}
			set
			{
				Sys_User previousValue = this._Sys_User.Entity;
				if (((previousValue != value) 
							|| (this._Sys_User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Sys_User.Entity = null;
						previousValue.ElectrodeBake.Remove(this);
					}
					this._Sys_User.Entity = value;
					if ((value != null))
					{
						value.ElectrodeBake.Add(this);
						this._CompileMan = value.UserId;
					}
					else
					{
						this._CompileMan = default(string);
					}
					this.SendPropertyChanged("Sys_User");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_ElectrodeBakeItem_ElectrodeBake", Storage="_ElectrodeBakeItem", ThisKey="ElectrodeID", OtherKey="ElectrodeID", DeleteRule="NO ACTION")]
		public EntitySet<ElectrodeBakeItem> ElectrodeBakeItem
		{
			get
			{
				return this._ElectrodeBakeItem;
			}
			set
			{
				this._ElectrodeBakeItem.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ElectrodeBakeItem(ElectrodeBakeItem entity)
		{
			this.SendPropertyChanging();
			entity.ElectrodeBake = this;
		}
		
		private void detach_ElectrodeBakeItem(ElectrodeBakeItem entity)
		{
			this.SendPropertyChanging();
			entity.ElectrodeBake = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ElectrodeBakeItem")]
	public partial class ElectrodeBakeItem : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ElectrodeItemID;
		
		private string _ElectrodeID;
		
		private string _CardCode;
		
		private string _BatchCode;
		
		private string _InLibCode;
		
		private string _Specifications;
		
		private System.Nullable<int> _ElectrodeCount;
		
		private System.Nullable<int> _OvenElectricHours;
		
		private System.Nullable<int> _OvenElectricMinute;
		
		private System.Nullable<decimal> _OvenElectricTemperature;
		
		private System.Nullable<decimal> _ConstantTemperature;
		
		private System.Nullable<int> _ConstantStartHours;
		
		private System.Nullable<int> _ConstantStartMinute;
		
		private System.Nullable<int> _ConstantEndHours;
		
		private System.Nullable<int> _ConstantEndMinute;
		
		private System.Nullable<int> _MoveInBoxHours;
		
		private System.Nullable<int> _MoveInBoxMinute;
		
		private System.Nullable<decimal> _MoveInTemperature;
		
		private System.Nullable<int> _BakeNumber;
		
		private string _BakeHead;
		
		private string _ElectrodeModel;
		
		private EntityRef<ElectrodeBake> _ElectrodeBake;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnElectrodeItemIDChanging(string value);
    partial void OnElectrodeItemIDChanged();
    partial void OnElectrodeIDChanging(string value);
    partial void OnElectrodeIDChanged();
    partial void OnCardCodeChanging(string value);
    partial void OnCardCodeChanged();
    partial void OnBatchCodeChanging(string value);
    partial void OnBatchCodeChanged();
    partial void OnInLibCodeChanging(string value);
    partial void OnInLibCodeChanged();
    partial void OnSpecificationsChanging(string value);
    partial void OnSpecificationsChanged();
    partial void OnElectrodeCountChanging(System.Nullable<int> value);
    partial void OnElectrodeCountChanged();
    partial void OnOvenElectricHoursChanging(System.Nullable<int> value);
    partial void OnOvenElectricHoursChanged();
    partial void OnOvenElectricMinuteChanging(System.Nullable<int> value);
    partial void OnOvenElectricMinuteChanged();
    partial void OnOvenElectricTemperatureChanging(System.Nullable<decimal> value);
    partial void OnOvenElectricTemperatureChanged();
    partial void OnConstantTemperatureChanging(System.Nullable<decimal> value);
    partial void OnConstantTemperatureChanged();
    partial void OnConstantStartHoursChanging(System.Nullable<int> value);
    partial void OnConstantStartHoursChanged();
    partial void OnConstantStartMinuteChanging(System.Nullable<int> value);
    partial void OnConstantStartMinuteChanged();
    partial void OnConstantEndHoursChanging(System.Nullable<int> value);
    partial void OnConstantEndHoursChanged();
    partial void OnConstantEndMinuteChanging(System.Nullable<int> value);
    partial void OnConstantEndMinuteChanged();
    partial void OnMoveInBoxHoursChanging(System.Nullable<int> value);
    partial void OnMoveInBoxHoursChanged();
    partial void OnMoveInBoxMinuteChanging(System.Nullable<int> value);
    partial void OnMoveInBoxMinuteChanged();
    partial void OnMoveInTemperatureChanging(System.Nullable<decimal> value);
    partial void OnMoveInTemperatureChanged();
    partial void OnBakeNumberChanging(System.Nullable<int> value);
    partial void OnBakeNumberChanged();
    partial void OnBakeHeadChanging(string value);
    partial void OnBakeHeadChanged();
    partial void OnElectrodeModelChanging(string value);
    partial void OnElectrodeModelChanged();
    #endregion
		
		public ElectrodeBakeItem()
		{
			this._ElectrodeBake = default(EntityRef<ElectrodeBake>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ElectrodeItemID", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ElectrodeItemID
		{
			get
			{
				return this._ElectrodeItemID;
			}
			set
			{
				if ((this._ElectrodeItemID != value))
				{
					this.OnElectrodeItemIDChanging(value);
					this.SendPropertyChanging();
					this._ElectrodeItemID = value;
					this.SendPropertyChanged("ElectrodeItemID");
					this.OnElectrodeItemIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ElectrodeID", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string ElectrodeID
		{
			get
			{
				return this._ElectrodeID;
			}
			set
			{
				if ((this._ElectrodeID != value))
				{
					if (this._ElectrodeBake.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnElectrodeIDChanging(value);
					this.SendPropertyChanging();
					this._ElectrodeID = value;
					this.SendPropertyChanged("ElectrodeID");
					this.OnElectrodeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CardCode", DbType="NVarChar(30)")]
		public string CardCode
		{
			get
			{
				return this._CardCode;
			}
			set
			{
				if ((this._CardCode != value))
				{
					this.OnCardCodeChanging(value);
					this.SendPropertyChanging();
					this._CardCode = value;
					this.SendPropertyChanged("CardCode");
					this.OnCardCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BatchCode", DbType="NVarChar(30)")]
		public string BatchCode
		{
			get
			{
				return this._BatchCode;
			}
			set
			{
				if ((this._BatchCode != value))
				{
					this.OnBatchCodeChanging(value);
					this.SendPropertyChanging();
					this._BatchCode = value;
					this.SendPropertyChanged("BatchCode");
					this.OnBatchCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InLibCode", DbType="NVarChar(30)")]
		public string InLibCode
		{
			get
			{
				return this._InLibCode;
			}
			set
			{
				if ((this._InLibCode != value))
				{
					this.OnInLibCodeChanging(value);
					this.SendPropertyChanging();
					this._InLibCode = value;
					this.SendPropertyChanged("InLibCode");
					this.OnInLibCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Specifications", DbType="NVarChar(50)")]
		public string Specifications
		{
			get
			{
				return this._Specifications;
			}
			set
			{
				if ((this._Specifications != value))
				{
					this.OnSpecificationsChanging(value);
					this.SendPropertyChanging();
					this._Specifications = value;
					this.SendPropertyChanged("Specifications");
					this.OnSpecificationsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ElectrodeCount", DbType="Int")]
		public System.Nullable<int> ElectrodeCount
		{
			get
			{
				return this._ElectrodeCount;
			}
			set
			{
				if ((this._ElectrodeCount != value))
				{
					this.OnElectrodeCountChanging(value);
					this.SendPropertyChanging();
					this._ElectrodeCount = value;
					this.SendPropertyChanged("ElectrodeCount");
					this.OnElectrodeCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OvenElectricHours", DbType="Int")]
		public System.Nullable<int> OvenElectricHours
		{
			get
			{
				return this._OvenElectricHours;
			}
			set
			{
				if ((this._OvenElectricHours != value))
				{
					this.OnOvenElectricHoursChanging(value);
					this.SendPropertyChanging();
					this._OvenElectricHours = value;
					this.SendPropertyChanged("OvenElectricHours");
					this.OnOvenElectricHoursChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OvenElectricMinute", DbType="Int")]
		public System.Nullable<int> OvenElectricMinute
		{
			get
			{
				return this._OvenElectricMinute;
			}
			set
			{
				if ((this._OvenElectricMinute != value))
				{
					this.OnOvenElectricMinuteChanging(value);
					this.SendPropertyChanging();
					this._OvenElectricMinute = value;
					this.SendPropertyChanged("OvenElectricMinute");
					this.OnOvenElectricMinuteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OvenElectricTemperature", DbType="Decimal(18,4)")]
		public System.Nullable<decimal> OvenElectricTemperature
		{
			get
			{
				return this._OvenElectricTemperature;
			}
			set
			{
				if ((this._OvenElectricTemperature != value))
				{
					this.OnOvenElectricTemperatureChanging(value);
					this.SendPropertyChanging();
					this._OvenElectricTemperature = value;
					this.SendPropertyChanged("OvenElectricTemperature");
					this.OnOvenElectricTemperatureChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ConstantTemperature", DbType="Decimal(18,4)")]
		public System.Nullable<decimal> ConstantTemperature
		{
			get
			{
				return this._ConstantTemperature;
			}
			set
			{
				if ((this._ConstantTemperature != value))
				{
					this.OnConstantTemperatureChanging(value);
					this.SendPropertyChanging();
					this._ConstantTemperature = value;
					this.SendPropertyChanged("ConstantTemperature");
					this.OnConstantTemperatureChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ConstantStartHours", DbType="Int")]
		public System.Nullable<int> ConstantStartHours
		{
			get
			{
				return this._ConstantStartHours;
			}
			set
			{
				if ((this._ConstantStartHours != value))
				{
					this.OnConstantStartHoursChanging(value);
					this.SendPropertyChanging();
					this._ConstantStartHours = value;
					this.SendPropertyChanged("ConstantStartHours");
					this.OnConstantStartHoursChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ConstantStartMinute", DbType="Int")]
		public System.Nullable<int> ConstantStartMinute
		{
			get
			{
				return this._ConstantStartMinute;
			}
			set
			{
				if ((this._ConstantStartMinute != value))
				{
					this.OnConstantStartMinuteChanging(value);
					this.SendPropertyChanging();
					this._ConstantStartMinute = value;
					this.SendPropertyChanged("ConstantStartMinute");
					this.OnConstantStartMinuteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ConstantEndHours", DbType="Int")]
		public System.Nullable<int> ConstantEndHours
		{
			get
			{
				return this._ConstantEndHours;
			}
			set
			{
				if ((this._ConstantEndHours != value))
				{
					this.OnConstantEndHoursChanging(value);
					this.SendPropertyChanging();
					this._ConstantEndHours = value;
					this.SendPropertyChanged("ConstantEndHours");
					this.OnConstantEndHoursChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ConstantEndMinute", DbType="Int")]
		public System.Nullable<int> ConstantEndMinute
		{
			get
			{
				return this._ConstantEndMinute;
			}
			set
			{
				if ((this._ConstantEndMinute != value))
				{
					this.OnConstantEndMinuteChanging(value);
					this.SendPropertyChanging();
					this._ConstantEndMinute = value;
					this.SendPropertyChanged("ConstantEndMinute");
					this.OnConstantEndMinuteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MoveInBoxHours", DbType="Int")]
		public System.Nullable<int> MoveInBoxHours
		{
			get
			{
				return this._MoveInBoxHours;
			}
			set
			{
				if ((this._MoveInBoxHours != value))
				{
					this.OnMoveInBoxHoursChanging(value);
					this.SendPropertyChanging();
					this._MoveInBoxHours = value;
					this.SendPropertyChanged("MoveInBoxHours");
					this.OnMoveInBoxHoursChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MoveInBoxMinute", DbType="Int")]
		public System.Nullable<int> MoveInBoxMinute
		{
			get
			{
				return this._MoveInBoxMinute;
			}
			set
			{
				if ((this._MoveInBoxMinute != value))
				{
					this.OnMoveInBoxMinuteChanging(value);
					this.SendPropertyChanging();
					this._MoveInBoxMinute = value;
					this.SendPropertyChanged("MoveInBoxMinute");
					this.OnMoveInBoxMinuteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MoveInTemperature", DbType="Decimal(18,4)")]
		public System.Nullable<decimal> MoveInTemperature
		{
			get
			{
				return this._MoveInTemperature;
			}
			set
			{
				if ((this._MoveInTemperature != value))
				{
					this.OnMoveInTemperatureChanging(value);
					this.SendPropertyChanging();
					this._MoveInTemperature = value;
					this.SendPropertyChanged("MoveInTemperature");
					this.OnMoveInTemperatureChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BakeNumber", DbType="Int")]
		public System.Nullable<int> BakeNumber
		{
			get
			{
				return this._BakeNumber;
			}
			set
			{
				if ((this._BakeNumber != value))
				{
					this.OnBakeNumberChanging(value);
					this.SendPropertyChanging();
					this._BakeNumber = value;
					this.SendPropertyChanged("BakeNumber");
					this.OnBakeNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BakeHead", DbType="NVarChar(30)")]
		public string BakeHead
		{
			get
			{
				return this._BakeHead;
			}
			set
			{
				if ((this._BakeHead != value))
				{
					this.OnBakeHeadChanging(value);
					this.SendPropertyChanging();
					this._BakeHead = value;
					this.SendPropertyChanged("BakeHead");
					this.OnBakeHeadChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ElectrodeModel", DbType="NVarChar(50)")]
		public string ElectrodeModel
		{
			get
			{
				return this._ElectrodeModel;
			}
			set
			{
				if ((this._ElectrodeModel != value))
				{
					this.OnElectrodeModelChanging(value);
					this.SendPropertyChanging();
					this._ElectrodeModel = value;
					this.SendPropertyChanged("ElectrodeModel");
					this.OnElectrodeModelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_ElectrodeBakeItem_ElectrodeBake", Storage="_ElectrodeBake", ThisKey="ElectrodeID", OtherKey="ElectrodeID", IsForeignKey=true)]
		public ElectrodeBake ElectrodeBake
		{
			get
			{
				return this._ElectrodeBake.Entity;
			}
			set
			{
				ElectrodeBake previousValue = this._ElectrodeBake.Entity;
				if (((previousValue != value) 
							|| (this._ElectrodeBake.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ElectrodeBake.Entity = null;
						previousValue.ElectrodeBakeItem.Remove(this);
					}
					this._ElectrodeBake.Entity = value;
					if ((value != null))
					{
						value.ElectrodeBakeItem.Add(this);
						this._ElectrodeID = value.ElectrodeID;
					}
					else
					{
						this._ElectrodeID = default(string);
					}
					this.SendPropertyChanged("ElectrodeBake");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ElectrodeRecovery")]
	public partial class ElectrodeRecovery : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ElectrodeRecoveryId;
		
		private string _ElectrodeRecoveryCode;
		
		private System.DateTime _ElectrodeRecoveryDate;
		
		private string _CompileMan;
		
		private System.Nullable<System.DateTime> _CompileDate;
		
		private string _ProjectId;
		
		private string _UnitId;
		
		private EntityRef<Base_Project> _Base_Project;
		
		private EntityRef<Base_Unit> _Base_Unit;
		
		private EntityRef<Sys_User> _Sys_User;
		
		private EntitySet<ElectrodeRecoveryItem> _ElectrodeRecoveryItem;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnElectrodeRecoveryIdChanging(string value);
    partial void OnElectrodeRecoveryIdChanged();
    partial void OnElectrodeRecoveryCodeChanging(string value);
    partial void OnElectrodeRecoveryCodeChanged();
    partial void OnElectrodeRecoveryDateChanging(System.DateTime value);
    partial void OnElectrodeRecoveryDateChanged();
    partial void OnCompileManChanging(string value);
    partial void OnCompileManChanged();
    partial void OnCompileDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCompileDateChanged();
    partial void OnProjectIdChanging(string value);
    partial void OnProjectIdChanged();
    partial void OnUnitIdChanging(string value);
    partial void OnUnitIdChanged();
    #endregion
		
		public ElectrodeRecovery()
		{
			this._Base_Project = default(EntityRef<Base_Project>);
			this._Base_Unit = default(EntityRef<Base_Unit>);
			this._Sys_User = default(EntityRef<Sys_User>);
			this._ElectrodeRecoveryItem = new EntitySet<ElectrodeRecoveryItem>(new Action<ElectrodeRecoveryItem>(this.attach_ElectrodeRecoveryItem), new Action<ElectrodeRecoveryItem>(this.detach_ElectrodeRecoveryItem));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ElectrodeRecoveryId", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ElectrodeRecoveryId
		{
			get
			{
				return this._ElectrodeRecoveryId;
			}
			set
			{
				if ((this._ElectrodeRecoveryId != value))
				{
					this.OnElectrodeRecoveryIdChanging(value);
					this.SendPropertyChanging();
					this._ElectrodeRecoveryId = value;
					this.SendPropertyChanged("ElectrodeRecoveryId");
					this.OnElectrodeRecoveryIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ElectrodeRecoveryCode", DbType="NVarChar(50)")]
		public string ElectrodeRecoveryCode
		{
			get
			{
				return this._ElectrodeRecoveryCode;
			}
			set
			{
				if ((this._ElectrodeRecoveryCode != value))
				{
					this.OnElectrodeRecoveryCodeChanging(value);
					this.SendPropertyChanging();
					this._ElectrodeRecoveryCode = value;
					this.SendPropertyChanged("ElectrodeRecoveryCode");
					this.OnElectrodeRecoveryCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ElectrodeRecoveryDate", DbType="DateTime NOT NULL")]
		public System.DateTime ElectrodeRecoveryDate
		{
			get
			{
				return this._ElectrodeRecoveryDate;
			}
			set
			{
				if ((this._ElectrodeRecoveryDate != value))
				{
					this.OnElectrodeRecoveryDateChanging(value);
					this.SendPropertyChanging();
					this._ElectrodeRecoveryDate = value;
					this.SendPropertyChanged("ElectrodeRecoveryDate");
					this.OnElectrodeRecoveryDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompileMan", DbType="NVarChar(50)")]
		public string CompileMan
		{
			get
			{
				return this._CompileMan;
			}
			set
			{
				if ((this._CompileMan != value))
				{
					if (this._Sys_User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCompileManChanging(value);
					this.SendPropertyChanging();
					this._CompileMan = value;
					this.SendPropertyChanged("CompileMan");
					this.OnCompileManChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompileDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CompileDate
		{
			get
			{
				return this._CompileDate;
			}
			set
			{
				if ((this._CompileDate != value))
				{
					this.OnCompileDateChanging(value);
					this.SendPropertyChanging();
					this._CompileDate = value;
					this.SendPropertyChanged("CompileDate");
					this.OnCompileDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProjectId", DbType="NVarChar(50)")]
		public string ProjectId
		{
			get
			{
				return this._ProjectId;
			}
			set
			{
				if ((this._ProjectId != value))
				{
					if (this._Base_Project.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProjectIdChanging(value);
					this.SendPropertyChanging();
					this._ProjectId = value;
					this.SendPropertyChanged("ProjectId");
					this.OnProjectIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitId", DbType="NVarChar(50)")]
		public string UnitId
		{
			get
			{
				return this._UnitId;
			}
			set
			{
				if ((this._UnitId != value))
				{
					if (this._Base_Unit.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUnitIdChanging(value);
					this.SendPropertyChanging();
					this._UnitId = value;
					this.SendPropertyChanged("UnitId");
					this.OnUnitIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_ElectrodeRecovery_Base_Project", Storage="_Base_Project", ThisKey="ProjectId", OtherKey="ProjectId", IsForeignKey=true)]
		public Base_Project Base_Project
		{
			get
			{
				return this._Base_Project.Entity;
			}
			set
			{
				Base_Project previousValue = this._Base_Project.Entity;
				if (((previousValue != value) 
							|| (this._Base_Project.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Base_Project.Entity = null;
						previousValue.ElectrodeRecovery.Remove(this);
					}
					this._Base_Project.Entity = value;
					if ((value != null))
					{
						value.ElectrodeRecovery.Add(this);
						this._ProjectId = value.ProjectId;
					}
					else
					{
						this._ProjectId = default(string);
					}
					this.SendPropertyChanged("Base_Project");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_ElectrodeRecovery_Base_Unit", Storage="_Base_Unit", ThisKey="UnitId", OtherKey="UnitId", IsForeignKey=true)]
		public Base_Unit Base_Unit
		{
			get
			{
				return this._Base_Unit.Entity;
			}
			set
			{
				Base_Unit previousValue = this._Base_Unit.Entity;
				if (((previousValue != value) 
							|| (this._Base_Unit.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Base_Unit.Entity = null;
						previousValue.ElectrodeRecovery.Remove(this);
					}
					this._Base_Unit.Entity = value;
					if ((value != null))
					{
						value.ElectrodeRecovery.Add(this);
						this._UnitId = value.UnitId;
					}
					else
					{
						this._UnitId = default(string);
					}
					this.SendPropertyChanged("Base_Unit");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_ElectrodeRecovery_Sys_User", Storage="_Sys_User", ThisKey="CompileMan", OtherKey="UserId", IsForeignKey=true)]
		public Sys_User Sys_User
		{
			get
			{
				return this._Sys_User.Entity;
			}
			set
			{
				Sys_User previousValue = this._Sys_User.Entity;
				if (((previousValue != value) 
							|| (this._Sys_User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Sys_User.Entity = null;
						previousValue.ElectrodeRecovery.Remove(this);
					}
					this._Sys_User.Entity = value;
					if ((value != null))
					{
						value.ElectrodeRecovery.Add(this);
						this._CompileMan = value.UserId;
					}
					else
					{
						this._CompileMan = default(string);
					}
					this.SendPropertyChanged("Sys_User");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_ElectrodeRecoveryItem_ElectrodeRecovery", Storage="_ElectrodeRecoveryItem", ThisKey="ElectrodeRecoveryId", OtherKey="ElectrodeRecoveryId", DeleteRule="NO ACTION")]
		public EntitySet<ElectrodeRecoveryItem> ElectrodeRecoveryItem
		{
			get
			{
				return this._ElectrodeRecoveryItem;
			}
			set
			{
				this._ElectrodeRecoveryItem.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ElectrodeRecoveryItem(ElectrodeRecoveryItem entity)
		{
			this.SendPropertyChanging();
			entity.ElectrodeRecovery = this;
		}
		
		private void detach_ElectrodeRecoveryItem(ElectrodeRecoveryItem entity)
		{
			this.SendPropertyChanging();
			entity.ElectrodeRecovery = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ElectrodeRecoveryItem")]
	public partial class ElectrodeRecoveryItem : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ElectrodeRecoveryItemID;
		
		private string _ElectrodeRecoveryId;
		
		private string _ElectrodeGrade;
		
		private string _BatchNumber;
		
		private string _InLibCode;
		
		private string _Specifications;
		
		private string _WelderCode;
		
		private string _UseSite;
		
		private string _WeldingMaterial;
		
		private System.Nullable<int> _RecipientsCount;
		
		private System.Nullable<int> _RecoveryCount;
		
		private string _GrantMan;
		
		private string _WMT_ID;
		
		private string _ElectrodeRecoveryModel;
		
		private EntityRef<ElectrodeRecovery> _ElectrodeRecovery;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnElectrodeRecoveryItemIDChanging(string value);
    partial void OnElectrodeRecoveryItemIDChanged();
    partial void OnElectrodeRecoveryIdChanging(string value);
    partial void OnElectrodeRecoveryIdChanged();
    partial void OnElectrodeGradeChanging(string value);
    partial void OnElectrodeGradeChanged();
    partial void OnBatchNumberChanging(string value);
    partial void OnBatchNumberChanged();
    partial void OnInLibCodeChanging(string value);
    partial void OnInLibCodeChanged();
    partial void OnSpecificationsChanging(string value);
    partial void OnSpecificationsChanged();
    partial void OnWelderCodeChanging(string value);
    partial void OnWelderCodeChanged();
    partial void OnUseSiteChanging(string value);
    partial void OnUseSiteChanged();
    partial void OnWeldingMaterialChanging(string value);
    partial void OnWeldingMaterialChanged();
    partial void OnRecipientsCountChanging(System.Nullable<int> value);
    partial void OnRecipientsCountChanged();
    partial void OnRecoveryCountChanging(System.Nullable<int> value);
    partial void OnRecoveryCountChanged();
    partial void OnGrantManChanging(string value);
    partial void OnGrantManChanged();
    partial void OnWMT_IDChanging(string value);
    partial void OnWMT_IDChanged();
    partial void OnElectrodeRecoveryModelChanging(string value);
    partial void OnElectrodeRecoveryModelChanged();
    #endregion
		
		public ElectrodeRecoveryItem()
		{
			this._ElectrodeRecovery = default(EntityRef<ElectrodeRecovery>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ElectrodeRecoveryItemID", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ElectrodeRecoveryItemID
		{
			get
			{
				return this._ElectrodeRecoveryItemID;
			}
			set
			{
				if ((this._ElectrodeRecoveryItemID != value))
				{
					this.OnElectrodeRecoveryItemIDChanging(value);
					this.SendPropertyChanging();
					this._ElectrodeRecoveryItemID = value;
					this.SendPropertyChanged("ElectrodeRecoveryItemID");
					this.OnElectrodeRecoveryItemIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ElectrodeRecoveryId", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string ElectrodeRecoveryId
		{
			get
			{
				return this._ElectrodeRecoveryId;
			}
			set
			{
				if ((this._ElectrodeRecoveryId != value))
				{
					if (this._ElectrodeRecovery.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnElectrodeRecoveryIdChanging(value);
					this.SendPropertyChanging();
					this._ElectrodeRecoveryId = value;
					this.SendPropertyChanged("ElectrodeRecoveryId");
					this.OnElectrodeRecoveryIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ElectrodeGrade", DbType="NVarChar(50)")]
		public string ElectrodeGrade
		{
			get
			{
				return this._ElectrodeGrade;
			}
			set
			{
				if ((this._ElectrodeGrade != value))
				{
					this.OnElectrodeGradeChanging(value);
					this.SendPropertyChanging();
					this._ElectrodeGrade = value;
					this.SendPropertyChanged("ElectrodeGrade");
					this.OnElectrodeGradeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BatchNumber", DbType="NVarChar(50)")]
		public string BatchNumber
		{
			get
			{
				return this._BatchNumber;
			}
			set
			{
				if ((this._BatchNumber != value))
				{
					this.OnBatchNumberChanging(value);
					this.SendPropertyChanging();
					this._BatchNumber = value;
					this.SendPropertyChanged("BatchNumber");
					this.OnBatchNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InLibCode", DbType="NVarChar(50)")]
		public string InLibCode
		{
			get
			{
				return this._InLibCode;
			}
			set
			{
				if ((this._InLibCode != value))
				{
					this.OnInLibCodeChanging(value);
					this.SendPropertyChanging();
					this._InLibCode = value;
					this.SendPropertyChanged("InLibCode");
					this.OnInLibCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Specifications", DbType="NVarChar(50)")]
		public string Specifications
		{
			get
			{
				return this._Specifications;
			}
			set
			{
				if ((this._Specifications != value))
				{
					this.OnSpecificationsChanging(value);
					this.SendPropertyChanging();
					this._Specifications = value;
					this.SendPropertyChanged("Specifications");
					this.OnSpecificationsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WelderCode", DbType="NVarChar(20)")]
		public string WelderCode
		{
			get
			{
				return this._WelderCode;
			}
			set
			{
				if ((this._WelderCode != value))
				{
					this.OnWelderCodeChanging(value);
					this.SendPropertyChanging();
					this._WelderCode = value;
					this.SendPropertyChanged("WelderCode");
					this.OnWelderCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UseSite", DbType="NVarChar(50)")]
		public string UseSite
		{
			get
			{
				return this._UseSite;
			}
			set
			{
				if ((this._UseSite != value))
				{
					this.OnUseSiteChanging(value);
					this.SendPropertyChanging();
					this._UseSite = value;
					this.SendPropertyChanged("UseSite");
					this.OnUseSiteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WeldingMaterial", DbType="NVarChar(50)")]
		public string WeldingMaterial
		{
			get
			{
				return this._WeldingMaterial;
			}
			set
			{
				if ((this._WeldingMaterial != value))
				{
					this.OnWeldingMaterialChanging(value);
					this.SendPropertyChanging();
					this._WeldingMaterial = value;
					this.SendPropertyChanged("WeldingMaterial");
					this.OnWeldingMaterialChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RecipientsCount", DbType="Int")]
		public System.Nullable<int> RecipientsCount
		{
			get
			{
				return this._RecipientsCount;
			}
			set
			{
				if ((this._RecipientsCount != value))
				{
					this.OnRecipientsCountChanging(value);
					this.SendPropertyChanging();
					this._RecipientsCount = value;
					this.SendPropertyChanged("RecipientsCount");
					this.OnRecipientsCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RecoveryCount", DbType="Int")]
		public System.Nullable<int> RecoveryCount
		{
			get
			{
				return this._RecoveryCount;
			}
			set
			{
				if ((this._RecoveryCount != value))
				{
					this.OnRecoveryCountChanging(value);
					this.SendPropertyChanging();
					this._RecoveryCount = value;
					this.SendPropertyChanged("RecoveryCount");
					this.OnRecoveryCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GrantMan", DbType="NVarChar(20)")]
		public string GrantMan
		{
			get
			{
				return this._GrantMan;
			}
			set
			{
				if ((this._GrantMan != value))
				{
					this.OnGrantManChanging(value);
					this.SendPropertyChanging();
					this._GrantMan = value;
					this.SendPropertyChanged("GrantMan");
					this.OnGrantManChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WMT_ID", DbType="VarChar(50)")]
		public string WMT_ID
		{
			get
			{
				return this._WMT_ID;
			}
			set
			{
				if ((this._WMT_ID != value))
				{
					this.OnWMT_IDChanging(value);
					this.SendPropertyChanging();
					this._WMT_ID = value;
					this.SendPropertyChanged("WMT_ID");
					this.OnWMT_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ElectrodeRecoveryModel", DbType="NVarChar(50)")]
		public string ElectrodeRecoveryModel
		{
			get
			{
				return this._ElectrodeRecoveryModel;
			}
			set
			{
				if ((this._ElectrodeRecoveryModel != value))
				{
					this.OnElectrodeRecoveryModelChanging(value);
					this.SendPropertyChanging();
					this._ElectrodeRecoveryModel = value;
					this.SendPropertyChanged("ElectrodeRecoveryModel");
					this.OnElectrodeRecoveryModelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_ElectrodeRecoveryItem_ElectrodeRecovery", Storage="_ElectrodeRecovery", ThisKey="ElectrodeRecoveryId", OtherKey="ElectrodeRecoveryId", IsForeignKey=true)]
		public ElectrodeRecovery ElectrodeRecovery
		{
			get
			{
				return this._ElectrodeRecovery.Entity;
			}
			set
			{
				ElectrodeRecovery previousValue = this._ElectrodeRecovery.Entity;
				if (((previousValue != value) 
							|| (this._ElectrodeRecovery.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ElectrodeRecovery.Entity = null;
						previousValue.ElectrodeRecoveryItem.Remove(this);
					}
					this._ElectrodeRecovery.Entity = value;
					if ((value != null))
					{
						value.ElectrodeRecoveryItem.Add(this);
						this._ElectrodeRecoveryId = value.ElectrodeRecoveryId;
					}
					else
					{
						this._ElectrodeRecoveryId = default(string);
					}
					this.SendPropertyChanged("ElectrodeRecovery");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.EMaterialRegist")]
	public partial class EMaterialRegist : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _EMaterialRegistId;
		
		private string _EMaterialRegistCode;
		
		private System.Nullable<System.DateTime> _EMaterialRegistDate;
		
		private string _DeliveryMan;
		
		private string _UnitName;
		
		private string _CompileMan;
		
		private System.Nullable<System.DateTime> _CompileDate;
		
		private string _ProjectId;
		
		private EntitySet<EMaterialRegistItem> _EMaterialRegistItem;
		
		private EntityRef<Base_Project> _Base_Project;
		
		private EntityRef<Sys_User> _Sys_User;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnEMaterialRegistIdChanging(string value);
    partial void OnEMaterialRegistIdChanged();
    partial void OnEMaterialRegistCodeChanging(string value);
    partial void OnEMaterialRegistCodeChanged();
    partial void OnEMaterialRegistDateChanging(System.Nullable<System.DateTime> value);
    partial void OnEMaterialRegistDateChanged();
    partial void OnDeliveryManChanging(string value);
    partial void OnDeliveryManChanged();
    partial void OnUnitNameChanging(string value);
    partial void OnUnitNameChanged();
    partial void OnCompileManChanging(string value);
    partial void OnCompileManChanged();
    partial void OnCompileDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCompileDateChanged();
    partial void OnProjectIdChanging(string value);
    partial void OnProjectIdChanged();
    #endregion
		
		public EMaterialRegist()
		{
			this._EMaterialRegistItem = new EntitySet<EMaterialRegistItem>(new Action<EMaterialRegistItem>(this.attach_EMaterialRegistItem), new Action<EMaterialRegistItem>(this.detach_EMaterialRegistItem));
			this._Base_Project = default(EntityRef<Base_Project>);
			this._Sys_User = default(EntityRef<Sys_User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EMaterialRegistId", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string EMaterialRegistId
		{
			get
			{
				return this._EMaterialRegistId;
			}
			set
			{
				if ((this._EMaterialRegistId != value))
				{
					this.OnEMaterialRegistIdChanging(value);
					this.SendPropertyChanging();
					this._EMaterialRegistId = value;
					this.SendPropertyChanged("EMaterialRegistId");
					this.OnEMaterialRegistIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EMaterialRegistCode", DbType="NVarChar(50)")]
		public string EMaterialRegistCode
		{
			get
			{
				return this._EMaterialRegistCode;
			}
			set
			{
				if ((this._EMaterialRegistCode != value))
				{
					this.OnEMaterialRegistCodeChanging(value);
					this.SendPropertyChanging();
					this._EMaterialRegistCode = value;
					this.SendPropertyChanged("EMaterialRegistCode");
					this.OnEMaterialRegistCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EMaterialRegistDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> EMaterialRegistDate
		{
			get
			{
				return this._EMaterialRegistDate;
			}
			set
			{
				if ((this._EMaterialRegistDate != value))
				{
					this.OnEMaterialRegistDateChanging(value);
					this.SendPropertyChanging();
					this._EMaterialRegistDate = value;
					this.SendPropertyChanged("EMaterialRegistDate");
					this.OnEMaterialRegistDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeliveryMan", DbType="NVarChar(50)")]
		public string DeliveryMan
		{
			get
			{
				return this._DeliveryMan;
			}
			set
			{
				if ((this._DeliveryMan != value))
				{
					this.OnDeliveryManChanging(value);
					this.SendPropertyChanging();
					this._DeliveryMan = value;
					this.SendPropertyChanged("DeliveryMan");
					this.OnDeliveryManChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitName", DbType="NVarChar(50)")]
		public string UnitName
		{
			get
			{
				return this._UnitName;
			}
			set
			{
				if ((this._UnitName != value))
				{
					this.OnUnitNameChanging(value);
					this.SendPropertyChanging();
					this._UnitName = value;
					this.SendPropertyChanged("UnitName");
					this.OnUnitNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompileMan", DbType="NVarChar(50)")]
		public string CompileMan
		{
			get
			{
				return this._CompileMan;
			}
			set
			{
				if ((this._CompileMan != value))
				{
					if (this._Sys_User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCompileManChanging(value);
					this.SendPropertyChanging();
					this._CompileMan = value;
					this.SendPropertyChanged("CompileMan");
					this.OnCompileManChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompileDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CompileDate
		{
			get
			{
				return this._CompileDate;
			}
			set
			{
				if ((this._CompileDate != value))
				{
					this.OnCompileDateChanging(value);
					this.SendPropertyChanging();
					this._CompileDate = value;
					this.SendPropertyChanged("CompileDate");
					this.OnCompileDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProjectId", DbType="NVarChar(50)")]
		public string ProjectId
		{
			get
			{
				return this._ProjectId;
			}
			set
			{
				if ((this._ProjectId != value))
				{
					if (this._Base_Project.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProjectIdChanging(value);
					this.SendPropertyChanging();
					this._ProjectId = value;
					this.SendPropertyChanged("ProjectId");
					this.OnProjectIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_EMaterialRegistItem_EMaterialRegist", Storage="_EMaterialRegistItem", ThisKey="EMaterialRegistId", OtherKey="EMaterialRegistId", DeleteRule="NO ACTION")]
		public EntitySet<EMaterialRegistItem> EMaterialRegistItem
		{
			get
			{
				return this._EMaterialRegistItem;
			}
			set
			{
				this._EMaterialRegistItem.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_MaterialRegist_Base_Project", Storage="_Base_Project", ThisKey="ProjectId", OtherKey="ProjectId", IsForeignKey=true)]
		public Base_Project Base_Project
		{
			get
			{
				return this._Base_Project.Entity;
			}
			set
			{
				Base_Project previousValue = this._Base_Project.Entity;
				if (((previousValue != value) 
							|| (this._Base_Project.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Base_Project.Entity = null;
						previousValue.EMaterialRegist.Remove(this);
					}
					this._Base_Project.Entity = value;
					if ((value != null))
					{
						value.EMaterialRegist.Add(this);
						this._ProjectId = value.ProjectId;
					}
					else
					{
						this._ProjectId = default(string);
					}
					this.SendPropertyChanged("Base_Project");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_MaterialRegist_Sys_User", Storage="_Sys_User", ThisKey="CompileMan", OtherKey="UserId", IsForeignKey=true)]
		public Sys_User Sys_User
		{
			get
			{
				return this._Sys_User.Entity;
			}
			set
			{
				Sys_User previousValue = this._Sys_User.Entity;
				if (((previousValue != value) 
							|| (this._Sys_User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Sys_User.Entity = null;
						previousValue.EMaterialRegist.Remove(this);
					}
					this._Sys_User.Entity = value;
					if ((value != null))
					{
						value.EMaterialRegist.Add(this);
						this._CompileMan = value.UserId;
					}
					else
					{
						this._CompileMan = default(string);
					}
					this.SendPropertyChanged("Sys_User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_EMaterialRegistItem(EMaterialRegistItem entity)
		{
			this.SendPropertyChanging();
			entity.EMaterialRegist = this;
		}
		
		private void detach_EMaterialRegistItem(EMaterialRegistItem entity)
		{
			this.SendPropertyChanging();
			entity.EMaterialRegist = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.EMaterialRegistItem")]
	public partial class EMaterialRegistItem : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _EMaterialRegistItemId;
		
		private string _EMaterialRegistId;
		
		private string _WMT_ID;
		
		private string _SpecificationsModel;
		
		private string _STE_ID;
		
		private string _UnitName;
		
		private System.Nullable<int> _MaterialCount;
		
		private string _ItemCode;
		
		private string _Testrecords;
		
		private string _Models;
		
		private EntityRef<BS_Steel> _BS_Steel;
		
		private EntityRef<BS_WeldMaterial> _BS_WeldMaterial;
		
		private EntityRef<EMaterialRegist> _EMaterialRegist;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnEMaterialRegistItemIdChanging(string value);
    partial void OnEMaterialRegistItemIdChanged();
    partial void OnEMaterialRegistIdChanging(string value);
    partial void OnEMaterialRegistIdChanged();
    partial void OnWMT_IDChanging(string value);
    partial void OnWMT_IDChanged();
    partial void OnSpecificationsModelChanging(string value);
    partial void OnSpecificationsModelChanged();
    partial void OnSTE_IDChanging(string value);
    partial void OnSTE_IDChanged();
    partial void OnUnitNameChanging(string value);
    partial void OnUnitNameChanged();
    partial void OnMaterialCountChanging(System.Nullable<int> value);
    partial void OnMaterialCountChanged();
    partial void OnItemCodeChanging(string value);
    partial void OnItemCodeChanged();
    partial void OnTestrecordsChanging(string value);
    partial void OnTestrecordsChanged();
    partial void OnModelsChanging(string value);
    partial void OnModelsChanged();
    #endregion
		
		public EMaterialRegistItem()
		{
			this._BS_Steel = default(EntityRef<BS_Steel>);
			this._BS_WeldMaterial = default(EntityRef<BS_WeldMaterial>);
			this._EMaterialRegist = default(EntityRef<EMaterialRegist>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EMaterialRegistItemId", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string EMaterialRegistItemId
		{
			get
			{
				return this._EMaterialRegistItemId;
			}
			set
			{
				if ((this._EMaterialRegistItemId != value))
				{
					this.OnEMaterialRegistItemIdChanging(value);
					this.SendPropertyChanging();
					this._EMaterialRegistItemId = value;
					this.SendPropertyChanged("EMaterialRegistItemId");
					this.OnEMaterialRegistItemIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EMaterialRegistId", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string EMaterialRegistId
		{
			get
			{
				return this._EMaterialRegistId;
			}
			set
			{
				if ((this._EMaterialRegistId != value))
				{
					if (this._EMaterialRegist.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEMaterialRegistIdChanging(value);
					this.SendPropertyChanging();
					this._EMaterialRegistId = value;
					this.SendPropertyChanged("EMaterialRegistId");
					this.OnEMaterialRegistIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WMT_ID", DbType="VarChar(50)")]
		public string WMT_ID
		{
			get
			{
				return this._WMT_ID;
			}
			set
			{
				if ((this._WMT_ID != value))
				{
					if (this._BS_WeldMaterial.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnWMT_IDChanging(value);
					this.SendPropertyChanging();
					this._WMT_ID = value;
					this.SendPropertyChanged("WMT_ID");
					this.OnWMT_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SpecificationsModel", DbType="NVarChar(50)")]
		public string SpecificationsModel
		{
			get
			{
				return this._SpecificationsModel;
			}
			set
			{
				if ((this._SpecificationsModel != value))
				{
					this.OnSpecificationsModelChanging(value);
					this.SendPropertyChanging();
					this._SpecificationsModel = value;
					this.SendPropertyChanged("SpecificationsModel");
					this.OnSpecificationsModelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_STE_ID", DbType="VarChar(50)")]
		public string STE_ID
		{
			get
			{
				return this._STE_ID;
			}
			set
			{
				if ((this._STE_ID != value))
				{
					if (this._BS_Steel.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSTE_IDChanging(value);
					this.SendPropertyChanging();
					this._STE_ID = value;
					this.SendPropertyChanged("STE_ID");
					this.OnSTE_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitName", DbType="NVarChar(50)")]
		public string UnitName
		{
			get
			{
				return this._UnitName;
			}
			set
			{
				if ((this._UnitName != value))
				{
					this.OnUnitNameChanging(value);
					this.SendPropertyChanging();
					this._UnitName = value;
					this.SendPropertyChanged("UnitName");
					this.OnUnitNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaterialCount", DbType="Int")]
		public System.Nullable<int> MaterialCount
		{
			get
			{
				return this._MaterialCount;
			}
			set
			{
				if ((this._MaterialCount != value))
				{
					this.OnMaterialCountChanging(value);
					this.SendPropertyChanging();
					this._MaterialCount = value;
					this.SendPropertyChanged("MaterialCount");
					this.OnMaterialCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemCode", DbType="NVarChar(50)")]
		public string ItemCode
		{
			get
			{
				return this._ItemCode;
			}
			set
			{
				if ((this._ItemCode != value))
				{
					this.OnItemCodeChanging(value);
					this.SendPropertyChanging();
					this._ItemCode = value;
					this.SendPropertyChanged("ItemCode");
					this.OnItemCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Testrecords", DbType="NVarChar(50)")]
		public string Testrecords
		{
			get
			{
				return this._Testrecords;
			}
			set
			{
				if ((this._Testrecords != value))
				{
					this.OnTestrecordsChanging(value);
					this.SendPropertyChanging();
					this._Testrecords = value;
					this.SendPropertyChanged("Testrecords");
					this.OnTestrecordsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Models", DbType="NVarChar(50)")]
		public string Models
		{
			get
			{
				return this._Models;
			}
			set
			{
				if ((this._Models != value))
				{
					this.OnModelsChanging(value);
					this.SendPropertyChanging();
					this._Models = value;
					this.SendPropertyChanged("Models");
					this.OnModelsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_EMaterialRegistItem_BS_Steel", Storage="_BS_Steel", ThisKey="STE_ID", OtherKey="STE_ID", IsForeignKey=true)]
		public BS_Steel BS_Steel
		{
			get
			{
				return this._BS_Steel.Entity;
			}
			set
			{
				BS_Steel previousValue = this._BS_Steel.Entity;
				if (((previousValue != value) 
							|| (this._BS_Steel.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._BS_Steel.Entity = null;
						previousValue.EMaterialRegistItem.Remove(this);
					}
					this._BS_Steel.Entity = value;
					if ((value != null))
					{
						value.EMaterialRegistItem.Add(this);
						this._STE_ID = value.STE_ID;
					}
					else
					{
						this._STE_ID = default(string);
					}
					this.SendPropertyChanged("BS_Steel");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_EMaterialRegistItem_BS_WeldMaterial", Storage="_BS_WeldMaterial", ThisKey="WMT_ID", OtherKey="WMT_ID", IsForeignKey=true)]
		public BS_WeldMaterial BS_WeldMaterial
		{
			get
			{
				return this._BS_WeldMaterial.Entity;
			}
			set
			{
				BS_WeldMaterial previousValue = this._BS_WeldMaterial.Entity;
				if (((previousValue != value) 
							|| (this._BS_WeldMaterial.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._BS_WeldMaterial.Entity = null;
						previousValue.EMaterialRegistItem.Remove(this);
					}
					this._BS_WeldMaterial.Entity = value;
					if ((value != null))
					{
						value.EMaterialRegistItem.Add(this);
						this._WMT_ID = value.WMT_ID;
					}
					else
					{
						this._WMT_ID = default(string);
					}
					this.SendPropertyChanged("BS_WeldMaterial");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_EMaterialRegistItem_EMaterialRegist", Storage="_EMaterialRegist", ThisKey="EMaterialRegistId", OtherKey="EMaterialRegistId", IsForeignKey=true)]
		public EMaterialRegist EMaterialRegist
		{
			get
			{
				return this._EMaterialRegist.Entity;
			}
			set
			{
				EMaterialRegist previousValue = this._EMaterialRegist.Entity;
				if (((previousValue != value) 
							|| (this._EMaterialRegist.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._EMaterialRegist.Entity = null;
						previousValue.EMaterialRegistItem.Remove(this);
					}
					this._EMaterialRegist.Entity = value;
					if ((value != null))
					{
						value.EMaterialRegistItem.Add(this);
						this._EMaterialRegistId = value.EMaterialRegistId;
					}
					else
					{
						this._EMaterialRegistId = default(string);
					}
					this.SendPropertyChanged("EMaterialRegist");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.EMInventoryRecords")]
	public partial class EMInventoryRecords : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _InventoryId;
		
		private string _ProjectId;
		
		private string _WMT_ID;
		
		private string _Model;
		
		private string _Specification;
		
		private System.Nullable<int> _MaterialCount;
		
		private System.Nullable<System.DateTime> _UpdateTime;
		
		private EntityRef<Base_Project> _Base_Project;
		
		private EntityRef<BS_WeldMaterial> _BS_WeldMaterial;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnInventoryIdChanging(string value);
    partial void OnInventoryIdChanged();
    partial void OnProjectIdChanging(string value);
    partial void OnProjectIdChanged();
    partial void OnWMT_IDChanging(string value);
    partial void OnWMT_IDChanged();
    partial void OnModelChanging(string value);
    partial void OnModelChanged();
    partial void OnSpecificationChanging(string value);
    partial void OnSpecificationChanged();
    partial void OnMaterialCountChanging(System.Nullable<int> value);
    partial void OnMaterialCountChanged();
    partial void OnUpdateTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnUpdateTimeChanged();
    #endregion
		
		public EMInventoryRecords()
		{
			this._Base_Project = default(EntityRef<Base_Project>);
			this._BS_WeldMaterial = default(EntityRef<BS_WeldMaterial>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InventoryId", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string InventoryId
		{
			get
			{
				return this._InventoryId;
			}
			set
			{
				if ((this._InventoryId != value))
				{
					this.OnInventoryIdChanging(value);
					this.SendPropertyChanging();
					this._InventoryId = value;
					this.SendPropertyChanged("InventoryId");
					this.OnInventoryIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProjectId", DbType="NVarChar(50)")]
		public string ProjectId
		{
			get
			{
				return this._ProjectId;
			}
			set
			{
				if ((this._ProjectId != value))
				{
					if (this._Base_Project.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProjectIdChanging(value);
					this.SendPropertyChanging();
					this._ProjectId = value;
					this.SendPropertyChanged("ProjectId");
					this.OnProjectIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WMT_ID", DbType="VarChar(50)")]
		public string WMT_ID
		{
			get
			{
				return this._WMT_ID;
			}
			set
			{
				if ((this._WMT_ID != value))
				{
					if (this._BS_WeldMaterial.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnWMT_IDChanging(value);
					this.SendPropertyChanging();
					this._WMT_ID = value;
					this.SendPropertyChanged("WMT_ID");
					this.OnWMT_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Model", DbType="NVarChar(50)")]
		public string Model
		{
			get
			{
				return this._Model;
			}
			set
			{
				if ((this._Model != value))
				{
					this.OnModelChanging(value);
					this.SendPropertyChanging();
					this._Model = value;
					this.SendPropertyChanged("Model");
					this.OnModelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Specification", DbType="NVarChar(50)")]
		public string Specification
		{
			get
			{
				return this._Specification;
			}
			set
			{
				if ((this._Specification != value))
				{
					this.OnSpecificationChanging(value);
					this.SendPropertyChanging();
					this._Specification = value;
					this.SendPropertyChanged("Specification");
					this.OnSpecificationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaterialCount", DbType="Int")]
		public System.Nullable<int> MaterialCount
		{
			get
			{
				return this._MaterialCount;
			}
			set
			{
				if ((this._MaterialCount != value))
				{
					this.OnMaterialCountChanging(value);
					this.SendPropertyChanging();
					this._MaterialCount = value;
					this.SendPropertyChanged("MaterialCount");
					this.OnMaterialCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> UpdateTime
		{
			get
			{
				return this._UpdateTime;
			}
			set
			{
				if ((this._UpdateTime != value))
				{
					this.OnUpdateTimeChanging(value);
					this.SendPropertyChanging();
					this._UpdateTime = value;
					this.SendPropertyChanged("UpdateTime");
					this.OnUpdateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_EMInventoryRecords_Base_Project", Storage="_Base_Project", ThisKey="ProjectId", OtherKey="ProjectId", IsForeignKey=true)]
		public Base_Project Base_Project
		{
			get
			{
				return this._Base_Project.Entity;
			}
			set
			{
				Base_Project previousValue = this._Base_Project.Entity;
				if (((previousValue != value) 
							|| (this._Base_Project.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Base_Project.Entity = null;
						previousValue.EMInventoryRecords.Remove(this);
					}
					this._Base_Project.Entity = value;
					if ((value != null))
					{
						value.EMInventoryRecords.Add(this);
						this._ProjectId = value.ProjectId;
					}
					else
					{
						this._ProjectId = default(string);
					}
					this.SendPropertyChanged("Base_Project");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_EMInventoryRecords_BS_WeldMaterial", Storage="_BS_WeldMaterial", ThisKey="WMT_ID", OtherKey="WMT_ID", IsForeignKey=true)]
		public BS_WeldMaterial BS_WeldMaterial
		{
			get
			{
				return this._BS_WeldMaterial.Entity;
			}
			set
			{
				BS_WeldMaterial previousValue = this._BS_WeldMaterial.Entity;
				if (((previousValue != value) 
							|| (this._BS_WeldMaterial.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._BS_WeldMaterial.Entity = null;
						previousValue.EMInventoryRecords.Remove(this);
					}
					this._BS_WeldMaterial.Entity = value;
					if ((value != null))
					{
						value.EMInventoryRecords.Add(this);
						this._WMT_ID = value.WMT_ID;
					}
					else
					{
						this._WMT_ID = default(string);
					}
					this.SendPropertyChanged("BS_WeldMaterial");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.EWeldRHRecord")]
	public partial class EWeldRHRecord : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _EWeldRHRecordId;
		
		private string _EWeldRHRecordCode;
		
		private System.Nullable<System.DateTime> _EWeldRHRecordDate;
		
		private string _UnitId;
		
		private string _CompileMan;
		
		private System.Nullable<System.DateTime> _CompileDate;
		
		private string _ProjectId;
		
		private EntityRef<Base_Project> _Base_Project;
		
		private EntityRef<Base_Unit> _Base_Unit;
		
		private EntityRef<Sys_User> _Sys_User;
		
		private EntitySet<EWeldRHRecordItem> _EWeldRHRecordItem;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnEWeldRHRecordIdChanging(string value);
    partial void OnEWeldRHRecordIdChanged();
    partial void OnEWeldRHRecordCodeChanging(string value);
    partial void OnEWeldRHRecordCodeChanged();
    partial void OnEWeldRHRecordDateChanging(System.Nullable<System.DateTime> value);
    partial void OnEWeldRHRecordDateChanged();
    partial void OnUnitIdChanging(string value);
    partial void OnUnitIdChanged();
    partial void OnCompileManChanging(string value);
    partial void OnCompileManChanged();
    partial void OnCompileDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCompileDateChanged();
    partial void OnProjectIdChanging(string value);
    partial void OnProjectIdChanged();
    #endregion
		
		public EWeldRHRecord()
		{
			this._Base_Project = default(EntityRef<Base_Project>);
			this._Base_Unit = default(EntityRef<Base_Unit>);
			this._Sys_User = default(EntityRef<Sys_User>);
			this._EWeldRHRecordItem = new EntitySet<EWeldRHRecordItem>(new Action<EWeldRHRecordItem>(this.attach_EWeldRHRecordItem), new Action<EWeldRHRecordItem>(this.detach_EWeldRHRecordItem));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EWeldRHRecordId", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string EWeldRHRecordId
		{
			get
			{
				return this._EWeldRHRecordId;
			}
			set
			{
				if ((this._EWeldRHRecordId != value))
				{
					this.OnEWeldRHRecordIdChanging(value);
					this.SendPropertyChanging();
					this._EWeldRHRecordId = value;
					this.SendPropertyChanged("EWeldRHRecordId");
					this.OnEWeldRHRecordIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EWeldRHRecordCode", DbType="NVarChar(50)")]
		public string EWeldRHRecordCode
		{
			get
			{
				return this._EWeldRHRecordCode;
			}
			set
			{
				if ((this._EWeldRHRecordCode != value))
				{
					this.OnEWeldRHRecordCodeChanging(value);
					this.SendPropertyChanging();
					this._EWeldRHRecordCode = value;
					this.SendPropertyChanged("EWeldRHRecordCode");
					this.OnEWeldRHRecordCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EWeldRHRecordDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> EWeldRHRecordDate
		{
			get
			{
				return this._EWeldRHRecordDate;
			}
			set
			{
				if ((this._EWeldRHRecordDate != value))
				{
					this.OnEWeldRHRecordDateChanging(value);
					this.SendPropertyChanging();
					this._EWeldRHRecordDate = value;
					this.SendPropertyChanged("EWeldRHRecordDate");
					this.OnEWeldRHRecordDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitId", DbType="NVarChar(50)")]
		public string UnitId
		{
			get
			{
				return this._UnitId;
			}
			set
			{
				if ((this._UnitId != value))
				{
					if (this._Base_Unit.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUnitIdChanging(value);
					this.SendPropertyChanging();
					this._UnitId = value;
					this.SendPropertyChanged("UnitId");
					this.OnUnitIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompileMan", DbType="NVarChar(50)")]
		public string CompileMan
		{
			get
			{
				return this._CompileMan;
			}
			set
			{
				if ((this._CompileMan != value))
				{
					if (this._Sys_User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCompileManChanging(value);
					this.SendPropertyChanging();
					this._CompileMan = value;
					this.SendPropertyChanged("CompileMan");
					this.OnCompileManChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompileDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CompileDate
		{
			get
			{
				return this._CompileDate;
			}
			set
			{
				if ((this._CompileDate != value))
				{
					this.OnCompileDateChanging(value);
					this.SendPropertyChanging();
					this._CompileDate = value;
					this.SendPropertyChanged("CompileDate");
					this.OnCompileDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProjectId", DbType="NVarChar(50)")]
		public string ProjectId
		{
			get
			{
				return this._ProjectId;
			}
			set
			{
				if ((this._ProjectId != value))
				{
					if (this._Base_Project.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProjectIdChanging(value);
					this.SendPropertyChanging();
					this._ProjectId = value;
					this.SendPropertyChanged("ProjectId");
					this.OnProjectIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_EWeldRHRecord_Base_Project", Storage="_Base_Project", ThisKey="ProjectId", OtherKey="ProjectId", IsForeignKey=true)]
		public Base_Project Base_Project
		{
			get
			{
				return this._Base_Project.Entity;
			}
			set
			{
				Base_Project previousValue = this._Base_Project.Entity;
				if (((previousValue != value) 
							|| (this._Base_Project.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Base_Project.Entity = null;
						previousValue.EWeldRHRecord.Remove(this);
					}
					this._Base_Project.Entity = value;
					if ((value != null))
					{
						value.EWeldRHRecord.Add(this);
						this._ProjectId = value.ProjectId;
					}
					else
					{
						this._ProjectId = default(string);
					}
					this.SendPropertyChanged("Base_Project");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_EWeldRHRecord_Base_Unit", Storage="_Base_Unit", ThisKey="UnitId", OtherKey="UnitId", IsForeignKey=true)]
		public Base_Unit Base_Unit
		{
			get
			{
				return this._Base_Unit.Entity;
			}
			set
			{
				Base_Unit previousValue = this._Base_Unit.Entity;
				if (((previousValue != value) 
							|| (this._Base_Unit.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Base_Unit.Entity = null;
						previousValue.EWeldRHRecord.Remove(this);
					}
					this._Base_Unit.Entity = value;
					if ((value != null))
					{
						value.EWeldRHRecord.Add(this);
						this._UnitId = value.UnitId;
					}
					else
					{
						this._UnitId = default(string);
					}
					this.SendPropertyChanged("Base_Unit");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_EWeldRHRecord_Sys_User", Storage="_Sys_User", ThisKey="CompileMan", OtherKey="UserId", IsForeignKey=true)]
		public Sys_User Sys_User
		{
			get
			{
				return this._Sys_User.Entity;
			}
			set
			{
				Sys_User previousValue = this._Sys_User.Entity;
				if (((previousValue != value) 
							|| (this._Sys_User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Sys_User.Entity = null;
						previousValue.EWeldRHRecord.Remove(this);
					}
					this._Sys_User.Entity = value;
					if ((value != null))
					{
						value.EWeldRHRecord.Add(this);
						this._CompileMan = value.UserId;
					}
					else
					{
						this._CompileMan = default(string);
					}
					this.SendPropertyChanged("Sys_User");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_EWeldRHRecordItem_EWeldRHRecordItem", Storage="_EWeldRHRecordItem", ThisKey="EWeldRHRecordId", OtherKey="EWeldRHRecordId", DeleteRule="NO ACTION")]
		public EntitySet<EWeldRHRecordItem> EWeldRHRecordItem
		{
			get
			{
				return this._EWeldRHRecordItem;
			}
			set
			{
				this._EWeldRHRecordItem.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_EWeldRHRecordItem(EWeldRHRecordItem entity)
		{
			this.SendPropertyChanging();
			entity.EWeldRHRecord = this;
		}
		
		private void detach_EWeldRHRecordItem(EWeldRHRecordItem entity)
		{
			this.SendPropertyChanging();
			entity.EWeldRHRecord = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.EWeldRHRecordItem")]
	public partial class EWeldRHRecordItem : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _EWeldRHRecordItemId;
		
		private string _EWeldRHRecordId;
		
		private System.Nullable<int> _EWeldRHRecordMonth;
		
		private System.Nullable<int> _EWeldRHRecordDay;
		
		private System.Nullable<int> _EWeldRHRecordHours;
		
		private System.Nullable<decimal> _RoomTemperature;
		
		private System.Nullable<decimal> _Humidity;
		
		private string _RecordMan;
		
		private string _Remark;
		
		private EntityRef<EWeldRHRecord> _EWeldRHRecord;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnEWeldRHRecordItemIdChanging(string value);
    partial void OnEWeldRHRecordItemIdChanged();
    partial void OnEWeldRHRecordIdChanging(string value);
    partial void OnEWeldRHRecordIdChanged();
    partial void OnEWeldRHRecordMonthChanging(System.Nullable<int> value);
    partial void OnEWeldRHRecordMonthChanged();
    partial void OnEWeldRHRecordDayChanging(System.Nullable<int> value);
    partial void OnEWeldRHRecordDayChanged();
    partial void OnEWeldRHRecordHoursChanging(System.Nullable<int> value);
    partial void OnEWeldRHRecordHoursChanged();
    partial void OnRoomTemperatureChanging(System.Nullable<decimal> value);
    partial void OnRoomTemperatureChanged();
    partial void OnHumidityChanging(System.Nullable<decimal> value);
    partial void OnHumidityChanged();
    partial void OnRecordManChanging(string value);
    partial void OnRecordManChanged();
    partial void OnRemarkChanging(string value);
    partial void OnRemarkChanged();
    #endregion
		
		public EWeldRHRecordItem()
		{
			this._EWeldRHRecord = default(EntityRef<EWeldRHRecord>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EWeldRHRecordItemId", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string EWeldRHRecordItemId
		{
			get
			{
				return this._EWeldRHRecordItemId;
			}
			set
			{
				if ((this._EWeldRHRecordItemId != value))
				{
					this.OnEWeldRHRecordItemIdChanging(value);
					this.SendPropertyChanging();
					this._EWeldRHRecordItemId = value;
					this.SendPropertyChanged("EWeldRHRecordItemId");
					this.OnEWeldRHRecordItemIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EWeldRHRecordId", DbType="NVarChar(50)")]
		public string EWeldRHRecordId
		{
			get
			{
				return this._EWeldRHRecordId;
			}
			set
			{
				if ((this._EWeldRHRecordId != value))
				{
					if (this._EWeldRHRecord.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEWeldRHRecordIdChanging(value);
					this.SendPropertyChanging();
					this._EWeldRHRecordId = value;
					this.SendPropertyChanged("EWeldRHRecordId");
					this.OnEWeldRHRecordIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EWeldRHRecordMonth", DbType="Int")]
		public System.Nullable<int> EWeldRHRecordMonth
		{
			get
			{
				return this._EWeldRHRecordMonth;
			}
			set
			{
				if ((this._EWeldRHRecordMonth != value))
				{
					this.OnEWeldRHRecordMonthChanging(value);
					this.SendPropertyChanging();
					this._EWeldRHRecordMonth = value;
					this.SendPropertyChanged("EWeldRHRecordMonth");
					this.OnEWeldRHRecordMonthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EWeldRHRecordDay", DbType="Int")]
		public System.Nullable<int> EWeldRHRecordDay
		{
			get
			{
				return this._EWeldRHRecordDay;
			}
			set
			{
				if ((this._EWeldRHRecordDay != value))
				{
					this.OnEWeldRHRecordDayChanging(value);
					this.SendPropertyChanging();
					this._EWeldRHRecordDay = value;
					this.SendPropertyChanged("EWeldRHRecordDay");
					this.OnEWeldRHRecordDayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EWeldRHRecordHours", DbType="Int")]
		public System.Nullable<int> EWeldRHRecordHours
		{
			get
			{
				return this._EWeldRHRecordHours;
			}
			set
			{
				if ((this._EWeldRHRecordHours != value))
				{
					this.OnEWeldRHRecordHoursChanging(value);
					this.SendPropertyChanging();
					this._EWeldRHRecordHours = value;
					this.SendPropertyChanged("EWeldRHRecordHours");
					this.OnEWeldRHRecordHoursChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoomTemperature", DbType="Decimal(18,4)")]
		public System.Nullable<decimal> RoomTemperature
		{
			get
			{
				return this._RoomTemperature;
			}
			set
			{
				if ((this._RoomTemperature != value))
				{
					this.OnRoomTemperatureChanging(value);
					this.SendPropertyChanging();
					this._RoomTemperature = value;
					this.SendPropertyChanged("RoomTemperature");
					this.OnRoomTemperatureChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Humidity", DbType="Decimal(18,4)")]
		public System.Nullable<decimal> Humidity
		{
			get
			{
				return this._Humidity;
			}
			set
			{
				if ((this._Humidity != value))
				{
					this.OnHumidityChanging(value);
					this.SendPropertyChanging();
					this._Humidity = value;
					this.SendPropertyChanged("Humidity");
					this.OnHumidityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RecordMan", DbType="NVarChar(50)")]
		public string RecordMan
		{
			get
			{
				return this._RecordMan;
			}
			set
			{
				if ((this._RecordMan != value))
				{
					this.OnRecordManChanging(value);
					this.SendPropertyChanging();
					this._RecordMan = value;
					this.SendPropertyChanged("RecordMan");
					this.OnRecordManChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Remark", DbType="NVarChar(50)")]
		public string Remark
		{
			get
			{
				return this._Remark;
			}
			set
			{
				if ((this._Remark != value))
				{
					this.OnRemarkChanging(value);
					this.SendPropertyChanging();
					this._Remark = value;
					this.SendPropertyChanged("Remark");
					this.OnRemarkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_EWeldRHRecordItem_EWeldRHRecordItem", Storage="_EWeldRHRecord", ThisKey="EWeldRHRecordId", OtherKey="EWeldRHRecordId", IsForeignKey=true)]
		public EWeldRHRecord EWeldRHRecord
		{
			get
			{
				return this._EWeldRHRecord.Entity;
			}
			set
			{
				EWeldRHRecord previousValue = this._EWeldRHRecord.Entity;
				if (((previousValue != value) 
							|| (this._EWeldRHRecord.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._EWeldRHRecord.Entity = null;
						previousValue.EWeldRHRecordItem.Remove(this);
					}
					this._EWeldRHRecord.Entity = value;
					if ((value != null))
					{
						value.EWeldRHRecordItem.Add(this);
						this._EWeldRHRecordId = value.EWeldRHRecordId;
					}
					else
					{
						this._EWeldRHRecordId = default(string);
					}
					this.SendPropertyChanged("EWeldRHRecord");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.HotHard")]
	public partial class HotHard : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _HotHardID;
		
		private string _HotHardCode;
		
		private string _HotHardUnit;
		
		private System.Nullable<System.DateTime> _HotHardDate;
		
		private string _AuditMan;
		
		private System.Nullable<System.DateTime> _AuditDate;
		
		private string _NDTRate;
		
		private string _NDTMethod;
		
		private string _CheckUnit;
		
		private string _ProjectId;
		
		private System.Nullable<int> _InstallationId;
		
		private string _DetectionTime;
		
		private string _Sendee;
		
		private string _Standards;
		
		private string _InspectionNum;
		
		private string _CheckNum;
		
		private string _TestWeldNum;
		
		private string _HotHardMan;
		
		private EntityRef<Base_Installation> _Base_Installation;
		
		private EntityRef<Base_Project> _Base_Project;
		
		private EntityRef<Base_Unit> _Base_Unit;
		
		private EntityRef<Base_Unit> _HotHardUnitBase_Unit;
		
		private EntitySet<HotHardItem> _HotHardItem;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnHotHardIDChanging(string value);
    partial void OnHotHardIDChanged();
    partial void OnHotHardCodeChanging(string value);
    partial void OnHotHardCodeChanged();
    partial void OnHotHardUnitChanging(string value);
    partial void OnHotHardUnitChanged();
    partial void OnHotHardDateChanging(System.Nullable<System.DateTime> value);
    partial void OnHotHardDateChanged();
    partial void OnAuditManChanging(string value);
    partial void OnAuditManChanged();
    partial void OnAuditDateChanging(System.Nullable<System.DateTime> value);
    partial void OnAuditDateChanged();
    partial void OnNDTRateChanging(string value);
    partial void OnNDTRateChanged();
    partial void OnNDTMethodChanging(string value);
    partial void OnNDTMethodChanged();
    partial void OnCheckUnitChanging(string value);
    partial void OnCheckUnitChanged();
    partial void OnProjectIdChanging(string value);
    partial void OnProjectIdChanged();
    partial void OnInstallationIdChanging(System.Nullable<int> value);
    partial void OnInstallationIdChanged();
    partial void OnDetectionTimeChanging(string value);
    partial void OnDetectionTimeChanged();
    partial void OnSendeeChanging(string value);
    partial void OnSendeeChanged();
    partial void OnStandardsChanging(string value);
    partial void OnStandardsChanged();
    partial void OnInspectionNumChanging(string value);
    partial void OnInspectionNumChanged();
    partial void OnCheckNumChanging(string value);
    partial void OnCheckNumChanged();
    partial void OnTestWeldNumChanging(string value);
    partial void OnTestWeldNumChanged();
    partial void OnHotHardManChanging(string value);
    partial void OnHotHardManChanged();
    #endregion
		
		public HotHard()
		{
			this._Base_Installation = default(EntityRef<Base_Installation>);
			this._Base_Project = default(EntityRef<Base_Project>);
			this._Base_Unit = default(EntityRef<Base_Unit>);
			this._HotHardUnitBase_Unit = default(EntityRef<Base_Unit>);
			this._HotHardItem = new EntitySet<HotHardItem>(new Action<HotHardItem>(this.attach_HotHardItem), new Action<HotHardItem>(this.detach_HotHardItem));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HotHardID", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string HotHardID
		{
			get
			{
				return this._HotHardID;
			}
			set
			{
				if ((this._HotHardID != value))
				{
					this.OnHotHardIDChanging(value);
					this.SendPropertyChanging();
					this._HotHardID = value;
					this.SendPropertyChanged("HotHardID");
					this.OnHotHardIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HotHardCode", DbType="VarChar(30)")]
		public string HotHardCode
		{
			get
			{
				return this._HotHardCode;
			}
			set
			{
				if ((this._HotHardCode != value))
				{
					this.OnHotHardCodeChanging(value);
					this.SendPropertyChanging();
					this._HotHardCode = value;
					this.SendPropertyChanged("HotHardCode");
					this.OnHotHardCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HotHardUnit", DbType="NVarChar(50)")]
		public string HotHardUnit
		{
			get
			{
				return this._HotHardUnit;
			}
			set
			{
				if ((this._HotHardUnit != value))
				{
					if (this._HotHardUnitBase_Unit.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnHotHardUnitChanging(value);
					this.SendPropertyChanging();
					this._HotHardUnit = value;
					this.SendPropertyChanged("HotHardUnit");
					this.OnHotHardUnitChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HotHardDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> HotHardDate
		{
			get
			{
				return this._HotHardDate;
			}
			set
			{
				if ((this._HotHardDate != value))
				{
					this.OnHotHardDateChanging(value);
					this.SendPropertyChanging();
					this._HotHardDate = value;
					this.SendPropertyChanged("HotHardDate");
					this.OnHotHardDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AuditMan", DbType="VarChar(50)")]
		public string AuditMan
		{
			get
			{
				return this._AuditMan;
			}
			set
			{
				if ((this._AuditMan != value))
				{
					this.OnAuditManChanging(value);
					this.SendPropertyChanging();
					this._AuditMan = value;
					this.SendPropertyChanged("AuditMan");
					this.OnAuditManChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AuditDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> AuditDate
		{
			get
			{
				return this._AuditDate;
			}
			set
			{
				if ((this._AuditDate != value))
				{
					this.OnAuditDateChanging(value);
					this.SendPropertyChanging();
					this._AuditDate = value;
					this.SendPropertyChanged("AuditDate");
					this.OnAuditDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NDTRate", DbType="VarChar(50)")]
		public string NDTRate
		{
			get
			{
				return this._NDTRate;
			}
			set
			{
				if ((this._NDTRate != value))
				{
					this.OnNDTRateChanging(value);
					this.SendPropertyChanging();
					this._NDTRate = value;
					this.SendPropertyChanged("NDTRate");
					this.OnNDTRateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NDTMethod", DbType="VarChar(50)")]
		public string NDTMethod
		{
			get
			{
				return this._NDTMethod;
			}
			set
			{
				if ((this._NDTMethod != value))
				{
					this.OnNDTMethodChanging(value);
					this.SendPropertyChanging();
					this._NDTMethod = value;
					this.SendPropertyChanged("NDTMethod");
					this.OnNDTMethodChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CheckUnit", DbType="NVarChar(50)")]
		public string CheckUnit
		{
			get
			{
				return this._CheckUnit;
			}
			set
			{
				if ((this._CheckUnit != value))
				{
					if (this._Base_Unit.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCheckUnitChanging(value);
					this.SendPropertyChanging();
					this._CheckUnit = value;
					this.SendPropertyChanged("CheckUnit");
					this.OnCheckUnitChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProjectId", DbType="NVarChar(50)")]
		public string ProjectId
		{
			get
			{
				return this._ProjectId;
			}
			set
			{
				if ((this._ProjectId != value))
				{
					if (this._Base_Project.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProjectIdChanging(value);
					this.SendPropertyChanging();
					this._ProjectId = value;
					this.SendPropertyChanged("ProjectId");
					this.OnProjectIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InstallationId", DbType="Int")]
		public System.Nullable<int> InstallationId
		{
			get
			{
				return this._InstallationId;
			}
			set
			{
				if ((this._InstallationId != value))
				{
					if (this._Base_Installation.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnInstallationIdChanging(value);
					this.SendPropertyChanging();
					this._InstallationId = value;
					this.SendPropertyChanged("InstallationId");
					this.OnInstallationIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DetectionTime", DbType="Char(1)")]
		public string DetectionTime
		{
			get
			{
				return this._DetectionTime;
			}
			set
			{
				if ((this._DetectionTime != value))
				{
					this.OnDetectionTimeChanging(value);
					this.SendPropertyChanging();
					this._DetectionTime = value;
					this.SendPropertyChanged("DetectionTime");
					this.OnDetectionTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sendee", DbType="NVarChar(50)")]
		public string Sendee
		{
			get
			{
				return this._Sendee;
			}
			set
			{
				if ((this._Sendee != value))
				{
					this.OnSendeeChanging(value);
					this.SendPropertyChanging();
					this._Sendee = value;
					this.SendPropertyChanged("Sendee");
					this.OnSendeeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Standards", DbType="NVarChar(50)")]
		public string Standards
		{
			get
			{
				return this._Standards;
			}
			set
			{
				if ((this._Standards != value))
				{
					this.OnStandardsChanging(value);
					this.SendPropertyChanging();
					this._Standards = value;
					this.SendPropertyChanged("Standards");
					this.OnStandardsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InspectionNum", DbType="NVarChar(50)")]
		public string InspectionNum
		{
			get
			{
				return this._InspectionNum;
			}
			set
			{
				if ((this._InspectionNum != value))
				{
					this.OnInspectionNumChanging(value);
					this.SendPropertyChanging();
					this._InspectionNum = value;
					this.SendPropertyChanged("InspectionNum");
					this.OnInspectionNumChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CheckNum", DbType="NVarChar(50)")]
		public string CheckNum
		{
			get
			{
				return this._CheckNum;
			}
			set
			{
				if ((this._CheckNum != value))
				{
					this.OnCheckNumChanging(value);
					this.SendPropertyChanging();
					this._CheckNum = value;
					this.SendPropertyChanged("CheckNum");
					this.OnCheckNumChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TestWeldNum", DbType="NVarChar(50)")]
		public string TestWeldNum
		{
			get
			{
				return this._TestWeldNum;
			}
			set
			{
				if ((this._TestWeldNum != value))
				{
					this.OnTestWeldNumChanging(value);
					this.SendPropertyChanging();
					this._TestWeldNum = value;
					this.SendPropertyChanged("TestWeldNum");
					this.OnTestWeldNumChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HotHardMan", DbType="VarChar(50)")]
		public string HotHardMan
		{
			get
			{
				return this._HotHardMan;
			}
			set
			{
				if ((this._HotHardMan != value))
				{
					this.OnHotHardManChanging(value);
					this.SendPropertyChanging();
					this._HotHardMan = value;
					this.SendPropertyChanged("HotHardMan");
					this.OnHotHardManChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_HotHard_Base_Installation", Storage="_Base_Installation", ThisKey="InstallationId", OtherKey="InstallationId", IsForeignKey=true)]
		public Base_Installation Base_Installation
		{
			get
			{
				return this._Base_Installation.Entity;
			}
			set
			{
				Base_Installation previousValue = this._Base_Installation.Entity;
				if (((previousValue != value) 
							|| (this._Base_Installation.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Base_Installation.Entity = null;
						previousValue.HotHard.Remove(this);
					}
					this._Base_Installation.Entity = value;
					if ((value != null))
					{
						value.HotHard.Add(this);
						this._InstallationId = value.InstallationId;
					}
					else
					{
						this._InstallationId = default(Nullable<int>);
					}
					this.SendPropertyChanged("Base_Installation");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_HotHard_Base_Project", Storage="_Base_Project", ThisKey="ProjectId", OtherKey="ProjectId", IsForeignKey=true)]
		public Base_Project Base_Project
		{
			get
			{
				return this._Base_Project.Entity;
			}
			set
			{
				Base_Project previousValue = this._Base_Project.Entity;
				if (((previousValue != value) 
							|| (this._Base_Project.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Base_Project.Entity = null;
						previousValue.HotHard.Remove(this);
					}
					this._Base_Project.Entity = value;
					if ((value != null))
					{
						value.HotHard.Add(this);
						this._ProjectId = value.ProjectId;
					}
					else
					{
						this._ProjectId = default(string);
					}
					this.SendPropertyChanged("Base_Project");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_HotHard_Base_Unit_CheckUnit", Storage="_Base_Unit", ThisKey="CheckUnit", OtherKey="UnitId", IsForeignKey=true)]
		public Base_Unit Base_Unit
		{
			get
			{
				return this._Base_Unit.Entity;
			}
			set
			{
				Base_Unit previousValue = this._Base_Unit.Entity;
				if (((previousValue != value) 
							|| (this._Base_Unit.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Base_Unit.Entity = null;
						previousValue.HotHard.Remove(this);
					}
					this._Base_Unit.Entity = value;
					if ((value != null))
					{
						value.HotHard.Add(this);
						this._CheckUnit = value.UnitId;
					}
					else
					{
						this._CheckUnit = default(string);
					}
					this.SendPropertyChanged("Base_Unit");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_HotHard_Base_Unit_HotHardUnit", Storage="_HotHardUnitBase_Unit", ThisKey="HotHardUnit", OtherKey="UnitId", IsForeignKey=true)]
		public Base_Unit HotHardUnitBase_Unit
		{
			get
			{
				return this._HotHardUnitBase_Unit.Entity;
			}
			set
			{
				Base_Unit previousValue = this._HotHardUnitBase_Unit.Entity;
				if (((previousValue != value) 
							|| (this._HotHardUnitBase_Unit.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._HotHardUnitBase_Unit.Entity = null;
						previousValue.Unit.Remove(this);
					}
					this._HotHardUnitBase_Unit.Entity = value;
					if ((value != null))
					{
						value.Unit.Add(this);
						this._HotHardUnit = value.UnitId;
					}
					else
					{
						this._HotHardUnit = default(string);
					}
					this.SendPropertyChanged("HotHardUnitBase_Unit");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_HotHardItem_HotHard", Storage="_HotHardItem", ThisKey="HotHardID", OtherKey="HotHardID", DeleteRule="NO ACTION")]
		public EntitySet<HotHardItem> HotHardItem
		{
			get
			{
				return this._HotHardItem;
			}
			set
			{
				this._HotHardItem.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_HotHardItem(HotHardItem entity)
		{
			this.SendPropertyChanging();
			entity.HotHard = this;
		}
		
		private void detach_HotHardItem(HotHardItem entity)
		{
			this.SendPropertyChanging();
			entity.HotHard = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.HotHardItem")]
	public partial class HotHardItem : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _HotHardItemID;
		
		private string _HotHardID;
		
		private string _JOT_ID;
		
		private string _Remark;
		
		private EntityRef<HotHard> _HotHard;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnHotHardItemIDChanging(string value);
    partial void OnHotHardItemIDChanged();
    partial void OnHotHardIDChanging(string value);
    partial void OnHotHardIDChanged();
    partial void OnJOT_IDChanging(string value);
    partial void OnJOT_IDChanged();
    partial void OnRemarkChanging(string value);
    partial void OnRemarkChanged();
    #endregion
		
		public HotHardItem()
		{
			this._HotHard = default(EntityRef<HotHard>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HotHardItemID", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string HotHardItemID
		{
			get
			{
				return this._HotHardItemID;
			}
			set
			{
				if ((this._HotHardItemID != value))
				{
					this.OnHotHardItemIDChanging(value);
					this.SendPropertyChanging();
					this._HotHardItemID = value;
					this.SendPropertyChanged("HotHardItemID");
					this.OnHotHardItemIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HotHardID", DbType="VarChar(50)")]
		public string HotHardID
		{
			get
			{
				return this._HotHardID;
			}
			set
			{
				if ((this._HotHardID != value))
				{
					if (this._HotHard.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnHotHardIDChanging(value);
					this.SendPropertyChanging();
					this._HotHardID = value;
					this.SendPropertyChanged("HotHardID");
					this.OnHotHardIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JOT_ID", DbType="VarChar(50)")]
		public string JOT_ID
		{
			get
			{
				return this._JOT_ID;
			}
			set
			{
				if ((this._JOT_ID != value))
				{
					this.OnJOT_IDChanging(value);
					this.SendPropertyChanging();
					this._JOT_ID = value;
					this.SendPropertyChanged("JOT_ID");
					this.OnJOT_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Remark", DbType="VarChar(100)")]
		public string Remark
		{
			get
			{
				return this._Remark;
			}
			set
			{
				if ((this._Remark != value))
				{
					this.OnRemarkChanging(value);
					this.SendPropertyChanging();
					this._Remark = value;
					this.SendPropertyChanged("Remark");
					this.OnRemarkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_HotHardItem_HotHard", Storage="_HotHard", ThisKey="HotHardID", OtherKey="HotHardID", IsForeignKey=true)]
		public HotHard HotHard
		{
			get
			{
				return this._HotHard.Entity;
			}
			set
			{
				HotHard previousValue = this._HotHard.Entity;
				if (((previousValue != value) 
							|| (this._HotHard.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._HotHard.Entity = null;
						previousValue.HotHardItem.Remove(this);
					}
					this._HotHard.Entity = value;
					if ((value != null))
					{
						value.HotHardItem.Add(this);
						this._HotHardID = value.HotHardID;
					}
					else
					{
						this._HotHardID = default(string);
					}
					this.SendPropertyChanged("HotHard");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.HotProess")]
	public partial class HotProess : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _HotProessId;
		
		private string _HotProessNo;
		
		private System.Nullable<System.DateTime> _ProessDate;
		
		private System.Nullable<int> _InstallationId;
		
		private string _ProjectId;
		
		private string _UnitId;
		
		private string _Tabler;
		
		private string _Remark;
		
		private string _ProessMethod;
		
		private string _ProessEquipment;
		
		private EntityRef<Base_Installation> _Base_Installation;
		
		private EntityRef<Base_Project> _Base_Project;
		
		private EntityRef<Base_Unit> _Base_Unit;
		
		private EntitySet<HotProessItem> _HotProessItem;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnHotProessIdChanging(string value);
    partial void OnHotProessIdChanged();
    partial void OnHotProessNoChanging(string value);
    partial void OnHotProessNoChanged();
    partial void OnProessDateChanging(System.Nullable<System.DateTime> value);
    partial void OnProessDateChanged();
    partial void OnInstallationIdChanging(System.Nullable<int> value);
    partial void OnInstallationIdChanged();
    partial void OnProjectIdChanging(string value);
    partial void OnProjectIdChanged();
    partial void OnUnitIdChanging(string value);
    partial void OnUnitIdChanged();
    partial void OnTablerChanging(string value);
    partial void OnTablerChanged();
    partial void OnRemarkChanging(string value);
    partial void OnRemarkChanged();
    partial void OnProessMethodChanging(string value);
    partial void OnProessMethodChanged();
    partial void OnProessEquipmentChanging(string value);
    partial void OnProessEquipmentChanged();
    #endregion
		
		public HotProess()
		{
			this._Base_Installation = default(EntityRef<Base_Installation>);
			this._Base_Project = default(EntityRef<Base_Project>);
			this._Base_Unit = default(EntityRef<Base_Unit>);
			this._HotProessItem = new EntitySet<HotProessItem>(new Action<HotProessItem>(this.attach_HotProessItem), new Action<HotProessItem>(this.detach_HotProessItem));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HotProessId", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string HotProessId
		{
			get
			{
				return this._HotProessId;
			}
			set
			{
				if ((this._HotProessId != value))
				{
					this.OnHotProessIdChanging(value);
					this.SendPropertyChanging();
					this._HotProessId = value;
					this.SendPropertyChanged("HotProessId");
					this.OnHotProessIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HotProessNo", DbType="VarChar(50)")]
		public string HotProessNo
		{
			get
			{
				return this._HotProessNo;
			}
			set
			{
				if ((this._HotProessNo != value))
				{
					this.OnHotProessNoChanging(value);
					this.SendPropertyChanging();
					this._HotProessNo = value;
					this.SendPropertyChanged("HotProessNo");
					this.OnHotProessNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProessDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ProessDate
		{
			get
			{
				return this._ProessDate;
			}
			set
			{
				if ((this._ProessDate != value))
				{
					this.OnProessDateChanging(value);
					this.SendPropertyChanging();
					this._ProessDate = value;
					this.SendPropertyChanged("ProessDate");
					this.OnProessDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InstallationId", DbType="Int")]
		public System.Nullable<int> InstallationId
		{
			get
			{
				return this._InstallationId;
			}
			set
			{
				if ((this._InstallationId != value))
				{
					if (this._Base_Installation.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnInstallationIdChanging(value);
					this.SendPropertyChanging();
					this._InstallationId = value;
					this.SendPropertyChanged("InstallationId");
					this.OnInstallationIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProjectId", DbType="NVarChar(50)")]
		public string ProjectId
		{
			get
			{
				return this._ProjectId;
			}
			set
			{
				if ((this._ProjectId != value))
				{
					if (this._Base_Project.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProjectIdChanging(value);
					this.SendPropertyChanging();
					this._ProjectId = value;
					this.SendPropertyChanged("ProjectId");
					this.OnProjectIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitId", DbType="NVarChar(50)")]
		public string UnitId
		{
			get
			{
				return this._UnitId;
			}
			set
			{
				if ((this._UnitId != value))
				{
					if (this._Base_Unit.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUnitIdChanging(value);
					this.SendPropertyChanging();
					this._UnitId = value;
					this.SendPropertyChanged("UnitId");
					this.OnUnitIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Tabler", DbType="NVarChar(50)")]
		public string Tabler
		{
			get
			{
				return this._Tabler;
			}
			set
			{
				if ((this._Tabler != value))
				{
					this.OnTablerChanging(value);
					this.SendPropertyChanging();
					this._Tabler = value;
					this.SendPropertyChanged("Tabler");
					this.OnTablerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Remark", DbType="NVarChar(100)")]
		public string Remark
		{
			get
			{
				return this._Remark;
			}
			set
			{
				if ((this._Remark != value))
				{
					this.OnRemarkChanging(value);
					this.SendPropertyChanging();
					this._Remark = value;
					this.SendPropertyChanged("Remark");
					this.OnRemarkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProessMethod", DbType="VarChar(100)")]
		public string ProessMethod
		{
			get
			{
				return this._ProessMethod;
			}
			set
			{
				if ((this._ProessMethod != value))
				{
					this.OnProessMethodChanging(value);
					this.SendPropertyChanging();
					this._ProessMethod = value;
					this.SendPropertyChanged("ProessMethod");
					this.OnProessMethodChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProessEquipment", DbType="VarChar(100)")]
		public string ProessEquipment
		{
			get
			{
				return this._ProessEquipment;
			}
			set
			{
				if ((this._ProessEquipment != value))
				{
					this.OnProessEquipmentChanging(value);
					this.SendPropertyChanging();
					this._ProessEquipment = value;
					this.SendPropertyChanged("ProessEquipment");
					this.OnProessEquipmentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_HotProess_Base_Installation", Storage="_Base_Installation", ThisKey="InstallationId", OtherKey="InstallationId", IsForeignKey=true)]
		public Base_Installation Base_Installation
		{
			get
			{
				return this._Base_Installation.Entity;
			}
			set
			{
				Base_Installation previousValue = this._Base_Installation.Entity;
				if (((previousValue != value) 
							|| (this._Base_Installation.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Base_Installation.Entity = null;
						previousValue.HotProess.Remove(this);
					}
					this._Base_Installation.Entity = value;
					if ((value != null))
					{
						value.HotProess.Add(this);
						this._InstallationId = value.InstallationId;
					}
					else
					{
						this._InstallationId = default(Nullable<int>);
					}
					this.SendPropertyChanged("Base_Installation");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_HotProess_Base_Project", Storage="_Base_Project", ThisKey="ProjectId", OtherKey="ProjectId", IsForeignKey=true)]
		public Base_Project Base_Project
		{
			get
			{
				return this._Base_Project.Entity;
			}
			set
			{
				Base_Project previousValue = this._Base_Project.Entity;
				if (((previousValue != value) 
							|| (this._Base_Project.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Base_Project.Entity = null;
						previousValue.HotProess.Remove(this);
					}
					this._Base_Project.Entity = value;
					if ((value != null))
					{
						value.HotProess.Add(this);
						this._ProjectId = value.ProjectId;
					}
					else
					{
						this._ProjectId = default(string);
					}
					this.SendPropertyChanged("Base_Project");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_HotProess_Base_Unit", Storage="_Base_Unit", ThisKey="UnitId", OtherKey="UnitId", IsForeignKey=true)]
		public Base_Unit Base_Unit
		{
			get
			{
				return this._Base_Unit.Entity;
			}
			set
			{
				Base_Unit previousValue = this._Base_Unit.Entity;
				if (((previousValue != value) 
							|| (this._Base_Unit.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Base_Unit.Entity = null;
						previousValue.HotProess.Remove(this);
					}
					this._Base_Unit.Entity = value;
					if ((value != null))
					{
						value.HotProess.Add(this);
						this._UnitId = value.UnitId;
					}
					else
					{
						this._UnitId = default(string);
					}
					this.SendPropertyChanged("Base_Unit");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_HotProessItem_HotProess", Storage="_HotProessItem", ThisKey="HotProessId", OtherKey="HotProessId", DeleteRule="NO ACTION")]
		public EntitySet<HotProessItem> HotProessItem
		{
			get
			{
				return this._HotProessItem;
			}
			set
			{
				this._HotProessItem.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_HotProessItem(HotProessItem entity)
		{
			this.SendPropertyChanging();
			entity.HotProess = this;
		}
		
		private void detach_HotProessItem(HotProessItem entity)
		{
			this.SendPropertyChanging();
			entity.HotProess = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.HotProessItem")]
	public partial class HotProessItem : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _HotProessItemId;
		
		private string _HotProessId;
		
		private string _JOT_ID;
		
		private System.Nullable<int> _PointCount;
		
		private string _RequiredT;
		
		private string _ActualT;
		
		private string _RequestTime;
		
		private string _ActualTime;
		
		private string _RecordChartNo;
		
		private string _HardnessReportNo;
		
		private EntityRef<HotProess> _HotProess;
		
		private EntityRef<PW_JointInfo> _PW_JointInfo;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnHotProessItemIdChanging(string value);
    partial void OnHotProessItemIdChanged();
    partial void OnHotProessIdChanging(string value);
    partial void OnHotProessIdChanged();
    partial void OnJOT_IDChanging(string value);
    partial void OnJOT_IDChanged();
    partial void OnPointCountChanging(System.Nullable<int> value);
    partial void OnPointCountChanged();
    partial void OnRequiredTChanging(string value);
    partial void OnRequiredTChanged();
    partial void OnActualTChanging(string value);
    partial void OnActualTChanged();
    partial void OnRequestTimeChanging(string value);
    partial void OnRequestTimeChanged();
    partial void OnActualTimeChanging(string value);
    partial void OnActualTimeChanged();
    partial void OnRecordChartNoChanging(string value);
    partial void OnRecordChartNoChanged();
    partial void OnHardnessReportNoChanging(string value);
    partial void OnHardnessReportNoChanged();
    #endregion
		
		public HotProessItem()
		{
			this._HotProess = default(EntityRef<HotProess>);
			this._PW_JointInfo = default(EntityRef<PW_JointInfo>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HotProessItemId", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string HotProessItemId
		{
			get
			{
				return this._HotProessItemId;
			}
			set
			{
				if ((this._HotProessItemId != value))
				{
					this.OnHotProessItemIdChanging(value);
					this.SendPropertyChanging();
					this._HotProessItemId = value;
					this.SendPropertyChanged("HotProessItemId");
					this.OnHotProessItemIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HotProessId", DbType="VarChar(50)")]
		public string HotProessId
		{
			get
			{
				return this._HotProessId;
			}
			set
			{
				if ((this._HotProessId != value))
				{
					if (this._HotProess.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnHotProessIdChanging(value);
					this.SendPropertyChanging();
					this._HotProessId = value;
					this.SendPropertyChanged("HotProessId");
					this.OnHotProessIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JOT_ID", DbType="VarChar(50)")]
		public string JOT_ID
		{
			get
			{
				return this._JOT_ID;
			}
			set
			{
				if ((this._JOT_ID != value))
				{
					if (this._PW_JointInfo.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnJOT_IDChanging(value);
					this.SendPropertyChanging();
					this._JOT_ID = value;
					this.SendPropertyChanged("JOT_ID");
					this.OnJOT_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PointCount", DbType="Int")]
		public System.Nullable<int> PointCount
		{
			get
			{
				return this._PointCount;
			}
			set
			{
				if ((this._PointCount != value))
				{
					this.OnPointCountChanging(value);
					this.SendPropertyChanging();
					this._PointCount = value;
					this.SendPropertyChanged("PointCount");
					this.OnPointCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RequiredT", DbType="VarChar(20)")]
		public string RequiredT
		{
			get
			{
				return this._RequiredT;
			}
			set
			{
				if ((this._RequiredT != value))
				{
					this.OnRequiredTChanging(value);
					this.SendPropertyChanging();
					this._RequiredT = value;
					this.SendPropertyChanged("RequiredT");
					this.OnRequiredTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActualT", DbType="VarChar(20)")]
		public string ActualT
		{
			get
			{
				return this._ActualT;
			}
			set
			{
				if ((this._ActualT != value))
				{
					this.OnActualTChanging(value);
					this.SendPropertyChanging();
					this._ActualT = value;
					this.SendPropertyChanged("ActualT");
					this.OnActualTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RequestTime", DbType="VarChar(20)")]
		public string RequestTime
		{
			get
			{
				return this._RequestTime;
			}
			set
			{
				if ((this._RequestTime != value))
				{
					this.OnRequestTimeChanging(value);
					this.SendPropertyChanging();
					this._RequestTime = value;
					this.SendPropertyChanged("RequestTime");
					this.OnRequestTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActualTime", DbType="VarChar(20)")]
		public string ActualTime
		{
			get
			{
				return this._ActualTime;
			}
			set
			{
				if ((this._ActualTime != value))
				{
					this.OnActualTimeChanging(value);
					this.SendPropertyChanging();
					this._ActualTime = value;
					this.SendPropertyChanged("ActualTime");
					this.OnActualTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RecordChartNo", DbType="VarChar(20)")]
		public string RecordChartNo
		{
			get
			{
				return this._RecordChartNo;
			}
			set
			{
				if ((this._RecordChartNo != value))
				{
					this.OnRecordChartNoChanging(value);
					this.SendPropertyChanging();
					this._RecordChartNo = value;
					this.SendPropertyChanged("RecordChartNo");
					this.OnRecordChartNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HardnessReportNo", DbType="VarChar(20)")]
		public string HardnessReportNo
		{
			get
			{
				return this._HardnessReportNo;
			}
			set
			{
				if ((this._HardnessReportNo != value))
				{
					this.OnHardnessReportNoChanging(value);
					this.SendPropertyChanging();
					this._HardnessReportNo = value;
					this.SendPropertyChanged("HardnessReportNo");
					this.OnHardnessReportNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_HotProessItem_HotProess", Storage="_HotProess", ThisKey="HotProessId", OtherKey="HotProessId", IsForeignKey=true)]
		public HotProess HotProess
		{
			get
			{
				return this._HotProess.Entity;
			}
			set
			{
				HotProess previousValue = this._HotProess.Entity;
				if (((previousValue != value) 
							|| (this._HotProess.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._HotProess.Entity = null;
						previousValue.HotProessItem.Remove(this);
					}
					this._HotProess.Entity = value;
					if ((value != null))
					{
						value.HotProessItem.Add(this);
						this._HotProessId = value.HotProessId;
					}
					else
					{
						this._HotProessId = default(string);
					}
					this.SendPropertyChanged("HotProess");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_HotProessItem_PW_JointInfo", Storage="_PW_JointInfo", ThisKey="JOT_ID", OtherKey="JOT_ID", IsForeignKey=true)]
		public PW_JointInfo PW_JointInfo
		{
			get
			{
				return this._PW_JointInfo.Entity;
			}
			set
			{
				PW_JointInfo previousValue = this._PW_JointInfo.Entity;
				if (((previousValue != value) 
							|| (this._PW_JointInfo.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PW_JointInfo.Entity = null;
						previousValue.HotProessItem.Remove(this);
					}
					this._PW_JointInfo.Entity = value;
					if ((value != null))
					{
						value.HotProessItem.Add(this);
						this._JOT_ID = value.JOT_ID;
					}
					else
					{
						this._JOT_ID = default(string);
					}
					this.SendPropertyChanged("PW_JointInfo");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.HS_Education")]
	public partial class HS_Education : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _EDU_ID;
		
		private string _ProjectId;
		
		private string _EDU_Unit;
		
		private string _EDU_Code;
		
		private string _EDU_Name;
		
		private string _EDU_Main;
		
		private EntitySet<BS_Welder> _BS_Welder;
		
		private EntityRef<Base_Project> _Base_Project;
		
		private EntityRef<Base_Unit> _Base_Unit;
		
		private EntitySet<PW_JointInfo> _PW_JointInfo;
		
		private EntitySet<PW_JointInfo> _EDU_;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnEDU_IDChanging(string value);
    partial void OnEDU_IDChanged();
    partial void OnProjectIdChanging(string value);
    partial void OnProjectIdChanged();
    partial void OnEDU_UnitChanging(string value);
    partial void OnEDU_UnitChanged();
    partial void OnEDU_CodeChanging(string value);
    partial void OnEDU_CodeChanged();
    partial void OnEDU_NameChanging(string value);
    partial void OnEDU_NameChanged();
    partial void OnEDU_MainChanging(string value);
    partial void OnEDU_MainChanged();
    #endregion
		
		public HS_Education()
		{
			this._BS_Welder = new EntitySet<BS_Welder>(new Action<BS_Welder>(this.attach_BS_Welder), new Action<BS_Welder>(this.detach_BS_Welder));
			this._Base_Project = default(EntityRef<Base_Project>);
			this._Base_Unit = default(EntityRef<Base_Unit>);
			this._PW_JointInfo = new EntitySet<PW_JointInfo>(new Action<PW_JointInfo>(this.attach_PW_JointInfo), new Action<PW_JointInfo>(this.detach_PW_JointInfo));
			this._EDU_ = new EntitySet<PW_JointInfo>(new Action<PW_JointInfo>(this.attach_EDU_), new Action<PW_JointInfo>(this.detach_EDU_));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EDU_ID", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string EDU_ID
		{
			get
			{
				return this._EDU_ID;
			}
			set
			{
				if ((this._EDU_ID != value))
				{
					this.OnEDU_IDChanging(value);
					this.SendPropertyChanging();
					this._EDU_ID = value;
					this.SendPropertyChanged("EDU_ID");
					this.OnEDU_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProjectId", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string ProjectId
		{
			get
			{
				return this._ProjectId;
			}
			set
			{
				if ((this._ProjectId != value))
				{
					if (this._Base_Project.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProjectIdChanging(value);
					this.SendPropertyChanging();
					this._ProjectId = value;
					this.SendPropertyChanged("ProjectId");
					this.OnProjectIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EDU_Unit", DbType="NVarChar(50)")]
		public string EDU_Unit
		{
			get
			{
				return this._EDU_Unit;
			}
			set
			{
				if ((this._EDU_Unit != value))
				{
					if (this._Base_Unit.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEDU_UnitChanging(value);
					this.SendPropertyChanging();
					this._EDU_Unit = value;
					this.SendPropertyChanged("EDU_Unit");
					this.OnEDU_UnitChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EDU_Code", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string EDU_Code
		{
			get
			{
				return this._EDU_Code;
			}
			set
			{
				if ((this._EDU_Code != value))
				{
					this.OnEDU_CodeChanging(value);
					this.SendPropertyChanging();
					this._EDU_Code = value;
					this.SendPropertyChanged("EDU_Code");
					this.OnEDU_CodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EDU_Name", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string EDU_Name
		{
			get
			{
				return this._EDU_Name;
			}
			set
			{
				if ((this._EDU_Name != value))
				{
					this.OnEDU_NameChanging(value);
					this.SendPropertyChanging();
					this._EDU_Name = value;
					this.SendPropertyChanged("EDU_Name");
					this.OnEDU_NameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EDU_Main", DbType="VarChar(20)")]
		public string EDU_Main
		{
			get
			{
				return this._EDU_Main;
			}
			set
			{
				if ((this._EDU_Main != value))
				{
					this.OnEDU_MainChanging(value);
					this.SendPropertyChanging();
					this._EDU_Main = value;
					this.SendPropertyChanged("EDU_Main");
					this.OnEDU_MainChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_BS_Welder_HS_Education", Storage="_BS_Welder", ThisKey="EDU_ID", OtherKey="EDU_ID", DeleteRule="NO ACTION")]
		public EntitySet<BS_Welder> BS_Welder
		{
			get
			{
				return this._BS_Welder;
			}
			set
			{
				this._BS_Welder.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_HS_Education_Base_Project", Storage="_Base_Project", ThisKey="ProjectId", OtherKey="ProjectId", IsForeignKey=true)]
		public Base_Project Base_Project
		{
			get
			{
				return this._Base_Project.Entity;
			}
			set
			{
				Base_Project previousValue = this._Base_Project.Entity;
				if (((previousValue != value) 
							|| (this._Base_Project.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Base_Project.Entity = null;
						previousValue.HS_Education.Remove(this);
					}
					this._Base_Project.Entity = value;
					if ((value != null))
					{
						value.HS_Education.Add(this);
						this._ProjectId = value.ProjectId;
					}
					else
					{
						this._ProjectId = default(string);
					}
					this.SendPropertyChanged("Base_Project");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_HS_Education_Base_Unit", Storage="_Base_Unit", ThisKey="EDU_Unit", OtherKey="UnitId", IsForeignKey=true)]
		public Base_Unit Base_Unit
		{
			get
			{
				return this._Base_Unit.Entity;
			}
			set
			{
				Base_Unit previousValue = this._Base_Unit.Entity;
				if (((previousValue != value) 
							|| (this._Base_Unit.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Base_Unit.Entity = null;
						previousValue.HS_Education.Remove(this);
					}
					this._Base_Unit.Entity = value;
					if ((value != null))
					{
						value.HS_Education.Add(this);
						this._EDU_Unit = value.UnitId;
					}
					else
					{
						this._EDU_Unit = default(string);
					}
					this.SendPropertyChanged("Base_Unit");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_PW_JointInfo_HS_Education", Storage="_PW_JointInfo", ThisKey="EDU_ID", OtherKey="JOT_FloorGroup", DeleteRule="NO ACTION")]
		public EntitySet<PW_JointInfo> PW_JointInfo
		{
			get
			{
				return this._PW_JointInfo;
			}
			set
			{
				this._PW_JointInfo.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_PW_JointInfo_HS_Education1", Storage="_EDU_", ThisKey="EDU_ID", OtherKey="JOT_CellGroup", DeleteRule="NO ACTION")]
		public EntitySet<PW_JointInfo> EDU_
		{
			get
			{
				return this._EDU_;
			}
			set
			{
				this._EDU_.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_BS_Welder(BS_Welder entity)
		{
			this.SendPropertyChanging();
			entity.HS_Education = this;
		}
		
		private void detach_BS_Welder(BS_Welder entity)
		{
			this.SendPropertyChanging();
			entity.HS_Education = null;
		}
		
		private void attach_PW_JointInfo(PW_JointInfo entity)
		{
			this.SendPropertyChanging();
			entity.HS_Education = this;
		}
		
		private void detach_PW_JointInfo(PW_JointInfo entity)
		{
			this.SendPropertyChanging();
			entity.HS_Education = null;
		}
		
		private void attach_EDU_(PW_JointInfo entity)
		{
			this.SendPropertyChanging();
			entity.JOT_CellGroupHS_Education = this;
		}
		
		private void detach_EDU_(PW_JointInfo entity)
		{
			this.SendPropertyChanging();
			entity.JOT_CellGroupHS_Education = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PW_CheckResult")]
	public partial class PW_CheckResult : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _CHR_ResultID;
		
		private string _ProjectId;
		
		private string _CHR_ResultCode;
		
		private string _CHR_ResultName;
		
		private string _CHR_Remark;
		
		private string _CHR_DefaultChecked;
		
		private string _CHR_ResultType;
		
		private EntityRef<Base_Project> _Base_Project;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCHR_ResultIDChanging(string value);
    partial void OnCHR_ResultIDChanged();
    partial void OnProjectIdChanging(string value);
    partial void OnProjectIdChanged();
    partial void OnCHR_ResultCodeChanging(string value);
    partial void OnCHR_ResultCodeChanged();
    partial void OnCHR_ResultNameChanging(string value);
    partial void OnCHR_ResultNameChanged();
    partial void OnCHR_RemarkChanging(string value);
    partial void OnCHR_RemarkChanged();
    partial void OnCHR_DefaultCheckedChanging(string value);
    partial void OnCHR_DefaultCheckedChanged();
    partial void OnCHR_ResultTypeChanging(string value);
    partial void OnCHR_ResultTypeChanged();
    #endregion
		
		public PW_CheckResult()
		{
			this._Base_Project = default(EntityRef<Base_Project>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CHR_ResultID", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string CHR_ResultID
		{
			get
			{
				return this._CHR_ResultID;
			}
			set
			{
				if ((this._CHR_ResultID != value))
				{
					this.OnCHR_ResultIDChanging(value);
					this.SendPropertyChanging();
					this._CHR_ResultID = value;
					this.SendPropertyChanged("CHR_ResultID");
					this.OnCHR_ResultIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProjectId", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string ProjectId
		{
			get
			{
				return this._ProjectId;
			}
			set
			{
				if ((this._ProjectId != value))
				{
					if (this._Base_Project.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProjectIdChanging(value);
					this.SendPropertyChanging();
					this._ProjectId = value;
					this.SendPropertyChanged("ProjectId");
					this.OnProjectIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CHR_ResultCode", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string CHR_ResultCode
		{
			get
			{
				return this._CHR_ResultCode;
			}
			set
			{
				if ((this._CHR_ResultCode != value))
				{
					this.OnCHR_ResultCodeChanging(value);
					this.SendPropertyChanging();
					this._CHR_ResultCode = value;
					this.SendPropertyChanged("CHR_ResultCode");
					this.OnCHR_ResultCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CHR_ResultName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string CHR_ResultName
		{
			get
			{
				return this._CHR_ResultName;
			}
			set
			{
				if ((this._CHR_ResultName != value))
				{
					this.OnCHR_ResultNameChanging(value);
					this.SendPropertyChanging();
					this._CHR_ResultName = value;
					this.SendPropertyChanged("CHR_ResultName");
					this.OnCHR_ResultNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CHR_Remark", DbType="VarChar(100)")]
		public string CHR_Remark
		{
			get
			{
				return this._CHR_Remark;
			}
			set
			{
				if ((this._CHR_Remark != value))
				{
					this.OnCHR_RemarkChanging(value);
					this.SendPropertyChanging();
					this._CHR_Remark = value;
					this.SendPropertyChanged("CHR_Remark");
					this.OnCHR_RemarkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CHR_DefaultChecked", DbType="Char(1)")]
		public string CHR_DefaultChecked
		{
			get
			{
				return this._CHR_DefaultChecked;
			}
			set
			{
				if ((this._CHR_DefaultChecked != value))
				{
					this.OnCHR_DefaultCheckedChanging(value);
					this.SendPropertyChanging();
					this._CHR_DefaultChecked = value;
					this.SendPropertyChanged("CHR_DefaultChecked");
					this.OnCHR_DefaultCheckedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CHR_ResultType", DbType="VarChar(20)")]
		public string CHR_ResultType
		{
			get
			{
				return this._CHR_ResultType;
			}
			set
			{
				if ((this._CHR_ResultType != value))
				{
					this.OnCHR_ResultTypeChanging(value);
					this.SendPropertyChanging();
					this._CHR_ResultType = value;
					this.SendPropertyChanged("CHR_ResultType");
					this.OnCHR_ResultTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_PW_CheckResult_Base_Project", Storage="_Base_Project", ThisKey="ProjectId", OtherKey="ProjectId", IsForeignKey=true)]
		public Base_Project Base_Project
		{
			get
			{
				return this._Base_Project.Entity;
			}
			set
			{
				Base_Project previousValue = this._Base_Project.Entity;
				if (((previousValue != value) 
							|| (this._Base_Project.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Base_Project.Entity = null;
						previousValue.PW_CheckResult.Remove(this);
					}
					this._Base_Project.Entity = value;
					if ((value != null))
					{
						value.PW_CheckResult.Add(this);
						this._ProjectId = value.ProjectId;
					}
					else
					{
						this._ProjectId = default(string);
					}
					this.SendPropertyChanged("Base_Project");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PW_IsoInfo")]
	public partial class PW_IsoInfo : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ISO_ID;
		
		private string _ProjectId;
		
		private string _BSU_ID;
		
		private string _SER_ID;
		
		private string _NDTR_ID;
		
		private string _NDT_ID;
		
		private string _BAW_ID;
		
		private string _ISO_IsoNo;
		
		private string _ISO_SysNo;
		
		private string _ISO_FileName;
		
		private string _ISO_SubSysNo;
		
		private string _ISO_CwpNo;
		
		private string _ISO_IsoNumber;
		
		private string _ISO_Rev;
		
		private string _ISO_Sheet;
		
		private System.Nullable<decimal> _ISO_PipeQty;
		
		private System.Nullable<decimal> _ISO_TotalDin;
		
		private string _ISO_Paint;
		
		private string _ISO_Insulator;
		
		private string _STE_ID;
		
		private string _ISO_Executive;
		
		private string _ISO_Specification;
		
		private string _ISO_Modifier;
		
		private System.Nullable<System.DateTime> _ISO_ModifyDate;
		
		private string _ISO_Creator;
		
		private System.Nullable<System.DateTime> _ISO_CreateDate;
		
		private System.Nullable<decimal> _ISO_JointQty;
		
		private System.Nullable<decimal> _ISO_DesignPress;
		
		private System.Nullable<decimal> _ISO_DesignTemperature;
		
		private System.Nullable<decimal> _ISO_TestPress;
		
		private System.Nullable<decimal> _ISO_TestTemperature;
		
		private string _ISO_NDTClass;
		
		private string _ISO_PTRate;
		
		private string _ISC_ID;
		
		private string _ISO_PTClass;
		
		private System.Nullable<bool> _ISO_IfPickling;
		
		private System.Nullable<bool> _ISO_IfChasing;
		
		private string _ISO_Remark;
		
		private System.Nullable<decimal> _ISO_HardnessRate;
		
		private System.Nullable<bool> _IsBig;
		
		private string _PipeNumber;
		
		private EntitySet<BO_NDTTrustItem> _BO_NDTTrustItem;
		
		private EntityRef<Base_Project> _Base_Project;
		
		private EntityRef<Base_Unit> _Base_Unit;
		
		private EntityRef<Base_WorkArea> _Base_WorkArea;
		
		private EntityRef<BS_IsoClass> _BS_IsoClass;
		
		private EntityRef<BS_NDTRate> _BS_NDTRate;
		
		private EntityRef<BS_NDTType> _BS_NDTType;
		
		private EntityRef<BS_Service> _BS_Service;
		
		private EntityRef<BS_Steel> _BS_Steel;
		
		private EntitySet<PW_JointInfo> _PW_JointInfo;
		
		private EntitySet<TP_AItemEndCheck> _TP_AItemEndCheck;
		
		private EntitySet<TP_BItemEndCheck> _TP_BItemEndCheck;
		
		private EntitySet<TP_IsoList> _TP_IsoList;
		
		private EntitySet<TP_TestPackage> _TP_TestPackage;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnISO_IDChanging(string value);
    partial void OnISO_IDChanged();
    partial void OnProjectIdChanging(string value);
    partial void OnProjectIdChanged();
    partial void OnBSU_IDChanging(string value);
    partial void OnBSU_IDChanged();
    partial void OnSER_IDChanging(string value);
    partial void OnSER_IDChanged();
    partial void OnNDTR_IDChanging(string value);
    partial void OnNDTR_IDChanged();
    partial void OnNDT_IDChanging(string value);
    partial void OnNDT_IDChanged();
    partial void OnBAW_IDChanging(string value);
    partial void OnBAW_IDChanged();
    partial void OnISO_IsoNoChanging(string value);
    partial void OnISO_IsoNoChanged();
    partial void OnISO_SysNoChanging(string value);
    partial void OnISO_SysNoChanged();
    partial void OnISO_FileNameChanging(string value);
    partial void OnISO_FileNameChanged();
    partial void OnISO_SubSysNoChanging(string value);
    partial void OnISO_SubSysNoChanged();
    partial void OnISO_CwpNoChanging(string value);
    partial void OnISO_CwpNoChanged();
    partial void OnISO_IsoNumberChanging(string value);
    partial void OnISO_IsoNumberChanged();
    partial void OnISO_RevChanging(string value);
    partial void OnISO_RevChanged();
    partial void OnISO_SheetChanging(string value);
    partial void OnISO_SheetChanged();
    partial void OnISO_PipeQtyChanging(System.Nullable<decimal> value);
    partial void OnISO_PipeQtyChanged();
    partial void OnISO_TotalDinChanging(System.Nullable<decimal> value);
    partial void OnISO_TotalDinChanged();
    partial void OnISO_PaintChanging(string value);
    partial void OnISO_PaintChanged();
    partial void OnISO_InsulatorChanging(string value);
    partial void OnISO_InsulatorChanged();
    partial void OnSTE_IDChanging(string value);
    partial void OnSTE_IDChanged();
    partial void OnISO_ExecutiveChanging(string value);
    partial void OnISO_ExecutiveChanged();
    partial void OnISO_SpecificationChanging(string value);
    partial void OnISO_SpecificationChanged();
    partial void OnISO_ModifierChanging(string value);
    partial void OnISO_ModifierChanged();
    partial void OnISO_ModifyDateChanging(System.Nullable<System.DateTime> value);
    partial void OnISO_ModifyDateChanged();
    partial void OnISO_CreatorChanging(string value);
    partial void OnISO_CreatorChanged();
    partial void OnISO_CreateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnISO_CreateDateChanged();
    partial void OnISO_JointQtyChanging(System.Nullable<decimal> value);
    partial void OnISO_JointQtyChanged();
    partial void OnISO_DesignPressChanging(System.Nullable<decimal> value);
    partial void OnISO_DesignPressChanged();
    partial void OnISO_DesignTemperatureChanging(System.Nullable<decimal> value);
    partial void OnISO_DesignTemperatureChanged();
    partial void OnISO_TestPressChanging(System.Nullable<decimal> value);
    partial void OnISO_TestPressChanged();
    partial void OnISO_TestTemperatureChanging(System.Nullable<decimal> value);
    partial void OnISO_TestTemperatureChanged();
    partial void OnISO_NDTClassChanging(string value);
    partial void OnISO_NDTClassChanged();
    partial void OnISO_PTRateChanging(string value);
    partial void OnISO_PTRateChanged();
    partial void OnISC_IDChanging(string value);
    partial void OnISC_IDChanged();
    partial void OnISO_PTClassChanging(string value);
    partial void OnISO_PTClassChanged();
    partial void OnISO_IfPicklingChanging(System.Nullable<bool> value);
    partial void OnISO_IfPicklingChanged();
    partial void OnISO_IfChasingChanging(System.Nullable<bool> value);
    partial void OnISO_IfChasingChanged();
    partial void OnISO_RemarkChanging(string value);
    partial void OnISO_RemarkChanged();
    partial void OnISO_HardnessRateChanging(System.Nullable<decimal> value);
    partial void OnISO_HardnessRateChanged();
    partial void OnIsBigChanging(System.Nullable<bool> value);
    partial void OnIsBigChanged();
    partial void OnPipeNumberChanging(string value);
    partial void OnPipeNumberChanged();
    #endregion
		
		public PW_IsoInfo()
		{
			this._BO_NDTTrustItem = new EntitySet<BO_NDTTrustItem>(new Action<BO_NDTTrustItem>(this.attach_BO_NDTTrustItem), new Action<BO_NDTTrustItem>(this.detach_BO_NDTTrustItem));
			this._Base_Project = default(EntityRef<Base_Project>);
			this._Base_Unit = default(EntityRef<Base_Unit>);
			this._Base_WorkArea = default(EntityRef<Base_WorkArea>);
			this._BS_IsoClass = default(EntityRef<BS_IsoClass>);
			this._BS_NDTRate = default(EntityRef<BS_NDTRate>);
			this._BS_NDTType = default(EntityRef<BS_NDTType>);
			this._BS_Service = default(EntityRef<BS_Service>);
			this._BS_Steel = default(EntityRef<BS_Steel>);
			this._PW_JointInfo = new EntitySet<PW_JointInfo>(new Action<PW_JointInfo>(this.attach_PW_JointInfo), new Action<PW_JointInfo>(this.detach_PW_JointInfo));
			this._TP_AItemEndCheck = new EntitySet<TP_AItemEndCheck>(new Action<TP_AItemEndCheck>(this.attach_TP_AItemEndCheck), new Action<TP_AItemEndCheck>(this.detach_TP_AItemEndCheck));
			this._TP_BItemEndCheck = new EntitySet<TP_BItemEndCheck>(new Action<TP_BItemEndCheck>(this.attach_TP_BItemEndCheck), new Action<TP_BItemEndCheck>(this.detach_TP_BItemEndCheck));
			this._TP_IsoList = new EntitySet<TP_IsoList>(new Action<TP_IsoList>(this.attach_TP_IsoList), new Action<TP_IsoList>(this.detach_TP_IsoList));
			this._TP_TestPackage = new EntitySet<TP_TestPackage>(new Action<TP_TestPackage>(this.attach_TP_TestPackage), new Action<TP_TestPackage>(this.detach_TP_TestPackage));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ISO_ID", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ISO_ID
		{
			get
			{
				return this._ISO_ID;
			}
			set
			{
				if ((this._ISO_ID != value))
				{
					this.OnISO_IDChanging(value);
					this.SendPropertyChanging();
					this._ISO_ID = value;
					this.SendPropertyChanged("ISO_ID");
					this.OnISO_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProjectId", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string ProjectId
		{
			get
			{
				return this._ProjectId;
			}
			set
			{
				if ((this._ProjectId != value))
				{
					if (this._Base_Project.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProjectIdChanging(value);
					this.SendPropertyChanging();
					this._ProjectId = value;
					this.SendPropertyChanged("ProjectId");
					this.OnProjectIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BSU_ID", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string BSU_ID
		{
			get
			{
				return this._BSU_ID;
			}
			set
			{
				if ((this._BSU_ID != value))
				{
					if (this._Base_Unit.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBSU_IDChanging(value);
					this.SendPropertyChanging();
					this._BSU_ID = value;
					this.SendPropertyChanged("BSU_ID");
					this.OnBSU_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SER_ID", DbType="VarChar(50)")]
		public string SER_ID
		{
			get
			{
				return this._SER_ID;
			}
			set
			{
				if ((this._SER_ID != value))
				{
					if (this._BS_Service.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSER_IDChanging(value);
					this.SendPropertyChanging();
					this._SER_ID = value;
					this.SendPropertyChanged("SER_ID");
					this.OnSER_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NDTR_ID", DbType="VarChar(50)")]
		public string NDTR_ID
		{
			get
			{
				return this._NDTR_ID;
			}
			set
			{
				if ((this._NDTR_ID != value))
				{
					if (this._BS_NDTRate.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnNDTR_IDChanging(value);
					this.SendPropertyChanging();
					this._NDTR_ID = value;
					this.SendPropertyChanged("NDTR_ID");
					this.OnNDTR_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NDT_ID", DbType="VarChar(50)")]
		public string NDT_ID
		{
			get
			{
				return this._NDT_ID;
			}
			set
			{
				if ((this._NDT_ID != value))
				{
					if (this._BS_NDTType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnNDT_IDChanging(value);
					this.SendPropertyChanging();
					this._NDT_ID = value;
					this.SendPropertyChanged("NDT_ID");
					this.OnNDT_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BAW_ID", DbType="NVarChar(50)")]
		public string BAW_ID
		{
			get
			{
				return this._BAW_ID;
			}
			set
			{
				if ((this._BAW_ID != value))
				{
					if (this._Base_WorkArea.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBAW_IDChanging(value);
					this.SendPropertyChanging();
					this._BAW_ID = value;
					this.SendPropertyChanged("BAW_ID");
					this.OnBAW_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ISO_IsoNo", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string ISO_IsoNo
		{
			get
			{
				return this._ISO_IsoNo;
			}
			set
			{
				if ((this._ISO_IsoNo != value))
				{
					this.OnISO_IsoNoChanging(value);
					this.SendPropertyChanging();
					this._ISO_IsoNo = value;
					this.SendPropertyChanged("ISO_IsoNo");
					this.OnISO_IsoNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ISO_SysNo", DbType="VarChar(50)")]
		public string ISO_SysNo
		{
			get
			{
				return this._ISO_SysNo;
			}
			set
			{
				if ((this._ISO_SysNo != value))
				{
					this.OnISO_SysNoChanging(value);
					this.SendPropertyChanging();
					this._ISO_SysNo = value;
					this.SendPropertyChanged("ISO_SysNo");
					this.OnISO_SysNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ISO_FileName", DbType="VarChar(50)")]
		public string ISO_FileName
		{
			get
			{
				return this._ISO_FileName;
			}
			set
			{
				if ((this._ISO_FileName != value))
				{
					this.OnISO_FileNameChanging(value);
					this.SendPropertyChanging();
					this._ISO_FileName = value;
					this.SendPropertyChanged("ISO_FileName");
					this.OnISO_FileNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ISO_SubSysNo", DbType="VarChar(50)")]
		public string ISO_SubSysNo
		{
			get
			{
				return this._ISO_SubSysNo;
			}
			set
			{
				if ((this._ISO_SubSysNo != value))
				{
					this.OnISO_SubSysNoChanging(value);
					this.SendPropertyChanging();
					this._ISO_SubSysNo = value;
					this.SendPropertyChanged("ISO_SubSysNo");
					this.OnISO_SubSysNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ISO_CwpNo", DbType="VarChar(50)")]
		public string ISO_CwpNo
		{
			get
			{
				return this._ISO_CwpNo;
			}
			set
			{
				if ((this._ISO_CwpNo != value))
				{
					this.OnISO_CwpNoChanging(value);
					this.SendPropertyChanging();
					this._ISO_CwpNo = value;
					this.SendPropertyChanged("ISO_CwpNo");
					this.OnISO_CwpNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ISO_IsoNumber", DbType="VarChar(50)")]
		public string ISO_IsoNumber
		{
			get
			{
				return this._ISO_IsoNumber;
			}
			set
			{
				if ((this._ISO_IsoNumber != value))
				{
					this.OnISO_IsoNumberChanging(value);
					this.SendPropertyChanging();
					this._ISO_IsoNumber = value;
					this.SendPropertyChanged("ISO_IsoNumber");
					this.OnISO_IsoNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ISO_Rev", DbType="VarChar(20)")]
		public string ISO_Rev
		{
			get
			{
				return this._ISO_Rev;
			}
			set
			{
				if ((this._ISO_Rev != value))
				{
					this.OnISO_RevChanging(value);
					this.SendPropertyChanging();
					this._ISO_Rev = value;
					this.SendPropertyChanged("ISO_Rev");
					this.OnISO_RevChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ISO_Sheet", DbType="VarChar(20)")]
		public string ISO_Sheet
		{
			get
			{
				return this._ISO_Sheet;
			}
			set
			{
				if ((this._ISO_Sheet != value))
				{
					this.OnISO_SheetChanging(value);
					this.SendPropertyChanging();
					this._ISO_Sheet = value;
					this.SendPropertyChanged("ISO_Sheet");
					this.OnISO_SheetChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ISO_PipeQty", DbType="Decimal(18,4)")]
		public System.Nullable<decimal> ISO_PipeQty
		{
			get
			{
				return this._ISO_PipeQty;
			}
			set
			{
				if ((this._ISO_PipeQty != value))
				{
					this.OnISO_PipeQtyChanging(value);
					this.SendPropertyChanging();
					this._ISO_PipeQty = value;
					this.SendPropertyChanged("ISO_PipeQty");
					this.OnISO_PipeQtyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ISO_TotalDin", DbType="Decimal(18,4)")]
		public System.Nullable<decimal> ISO_TotalDin
		{
			get
			{
				return this._ISO_TotalDin;
			}
			set
			{
				if ((this._ISO_TotalDin != value))
				{
					this.OnISO_TotalDinChanging(value);
					this.SendPropertyChanging();
					this._ISO_TotalDin = value;
					this.SendPropertyChanged("ISO_TotalDin");
					this.OnISO_TotalDinChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ISO_Paint", DbType="VarChar(40)")]
		public string ISO_Paint
		{
			get
			{
				return this._ISO_Paint;
			}
			set
			{
				if ((this._ISO_Paint != value))
				{
					this.OnISO_PaintChanging(value);
					this.SendPropertyChanging();
					this._ISO_Paint = value;
					this.SendPropertyChanged("ISO_Paint");
					this.OnISO_PaintChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ISO_Insulator", DbType="VarChar(40)")]
		public string ISO_Insulator
		{
			get
			{
				return this._ISO_Insulator;
			}
			set
			{
				if ((this._ISO_Insulator != value))
				{
					this.OnISO_InsulatorChanging(value);
					this.SendPropertyChanging();
					this._ISO_Insulator = value;
					this.SendPropertyChanged("ISO_Insulator");
					this.OnISO_InsulatorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_STE_ID", DbType="VarChar(50)")]
		public string STE_ID
		{
			get
			{
				return this._STE_ID;
			}
			set
			{
				if ((this._STE_ID != value))
				{
					if (this._BS_Steel.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSTE_IDChanging(value);
					this.SendPropertyChanging();
					this._STE_ID = value;
					this.SendPropertyChanged("STE_ID");
					this.OnSTE_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ISO_Executive", DbType="VarChar(50)")]
		public string ISO_Executive
		{
			get
			{
				return this._ISO_Executive;
			}
			set
			{
				if ((this._ISO_Executive != value))
				{
					this.OnISO_ExecutiveChanging(value);
					this.SendPropertyChanging();
					this._ISO_Executive = value;
					this.SendPropertyChanged("ISO_Executive");
					this.OnISO_ExecutiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ISO_Specification", DbType="VarChar(50)")]
		public string ISO_Specification
		{
			get
			{
				return this._ISO_Specification;
			}
			set
			{
				if ((this._ISO_Specification != value))
				{
					this.OnISO_SpecificationChanging(value);
					this.SendPropertyChanging();
					this._ISO_Specification = value;
					this.SendPropertyChanged("ISO_Specification");
					this.OnISO_SpecificationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ISO_Modifier", DbType="VarChar(20)")]
		public string ISO_Modifier
		{
			get
			{
				return this._ISO_Modifier;
			}
			set
			{
				if ((this._ISO_Modifier != value))
				{
					this.OnISO_ModifierChanging(value);
					this.SendPropertyChanging();
					this._ISO_Modifier = value;
					this.SendPropertyChanged("ISO_Modifier");
					this.OnISO_ModifierChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ISO_ModifyDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ISO_ModifyDate
		{
			get
			{
				return this._ISO_ModifyDate;
			}
			set
			{
				if ((this._ISO_ModifyDate != value))
				{
					this.OnISO_ModifyDateChanging(value);
					this.SendPropertyChanging();
					this._ISO_ModifyDate = value;
					this.SendPropertyChanged("ISO_ModifyDate");
					this.OnISO_ModifyDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ISO_Creator", DbType="VarChar(20)")]
		public string ISO_Creator
		{
			get
			{
				return this._ISO_Creator;
			}
			set
			{
				if ((this._ISO_Creator != value))
				{
					this.OnISO_CreatorChanging(value);
					this.SendPropertyChanging();
					this._ISO_Creator = value;
					this.SendPropertyChanged("ISO_Creator");
					this.OnISO_CreatorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ISO_CreateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ISO_CreateDate
		{
			get
			{
				return this._ISO_CreateDate;
			}
			set
			{
				if ((this._ISO_CreateDate != value))
				{
					this.OnISO_CreateDateChanging(value);
					this.SendPropertyChanging();
					this._ISO_CreateDate = value;
					this.SendPropertyChanged("ISO_CreateDate");
					this.OnISO_CreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ISO_JointQty", DbType="Decimal(18,4)")]
		public System.Nullable<decimal> ISO_JointQty
		{
			get
			{
				return this._ISO_JointQty;
			}
			set
			{
				if ((this._ISO_JointQty != value))
				{
					this.OnISO_JointQtyChanging(value);
					this.SendPropertyChanging();
					this._ISO_JointQty = value;
					this.SendPropertyChanged("ISO_JointQty");
					this.OnISO_JointQtyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ISO_DesignPress", DbType="Decimal(18,4)")]
		public System.Nullable<decimal> ISO_DesignPress
		{
			get
			{
				return this._ISO_DesignPress;
			}
			set
			{
				if ((this._ISO_DesignPress != value))
				{
					this.OnISO_DesignPressChanging(value);
					this.SendPropertyChanging();
					this._ISO_DesignPress = value;
					this.SendPropertyChanged("ISO_DesignPress");
					this.OnISO_DesignPressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ISO_DesignTemperature", DbType="Decimal(18,4)")]
		public System.Nullable<decimal> ISO_DesignTemperature
		{
			get
			{
				return this._ISO_DesignTemperature;
			}
			set
			{
				if ((this._ISO_DesignTemperature != value))
				{
					this.OnISO_DesignTemperatureChanging(value);
					this.SendPropertyChanging();
					this._ISO_DesignTemperature = value;
					this.SendPropertyChanged("ISO_DesignTemperature");
					this.OnISO_DesignTemperatureChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ISO_TestPress", DbType="Decimal(18,4)")]
		public System.Nullable<decimal> ISO_TestPress
		{
			get
			{
				return this._ISO_TestPress;
			}
			set
			{
				if ((this._ISO_TestPress != value))
				{
					this.OnISO_TestPressChanging(value);
					this.SendPropertyChanging();
					this._ISO_TestPress = value;
					this.SendPropertyChanged("ISO_TestPress");
					this.OnISO_TestPressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ISO_TestTemperature", DbType="Decimal(18,4)")]
		public System.Nullable<decimal> ISO_TestTemperature
		{
			get
			{
				return this._ISO_TestTemperature;
			}
			set
			{
				if ((this._ISO_TestTemperature != value))
				{
					this.OnISO_TestTemperatureChanging(value);
					this.SendPropertyChanging();
					this._ISO_TestTemperature = value;
					this.SendPropertyChanged("ISO_TestTemperature");
					this.OnISO_TestTemperatureChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ISO_NDTClass", DbType="VarChar(8)")]
		public string ISO_NDTClass
		{
			get
			{
				return this._ISO_NDTClass;
			}
			set
			{
				if ((this._ISO_NDTClass != value))
				{
					this.OnISO_NDTClassChanging(value);
					this.SendPropertyChanging();
					this._ISO_NDTClass = value;
					this.SendPropertyChanged("ISO_NDTClass");
					this.OnISO_NDTClassChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ISO_PTRate", DbType="VarChar(50)")]
		public string ISO_PTRate
		{
			get
			{
				return this._ISO_PTRate;
			}
			set
			{
				if ((this._ISO_PTRate != value))
				{
					this.OnISO_PTRateChanging(value);
					this.SendPropertyChanging();
					this._ISO_PTRate = value;
					this.SendPropertyChanged("ISO_PTRate");
					this.OnISO_PTRateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ISC_ID", DbType="VarChar(50)")]
		public string ISC_ID
		{
			get
			{
				return this._ISC_ID;
			}
			set
			{
				if ((this._ISC_ID != value))
				{
					if (this._BS_IsoClass.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnISC_IDChanging(value);
					this.SendPropertyChanging();
					this._ISC_ID = value;
					this.SendPropertyChanged("ISC_ID");
					this.OnISC_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ISO_PTClass", DbType="VarChar(8)")]
		public string ISO_PTClass
		{
			get
			{
				return this._ISO_PTClass;
			}
			set
			{
				if ((this._ISO_PTClass != value))
				{
					this.OnISO_PTClassChanging(value);
					this.SendPropertyChanging();
					this._ISO_PTClass = value;
					this.SendPropertyChanged("ISO_PTClass");
					this.OnISO_PTClassChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ISO_IfPickling", DbType="Bit")]
		public System.Nullable<bool> ISO_IfPickling
		{
			get
			{
				return this._ISO_IfPickling;
			}
			set
			{
				if ((this._ISO_IfPickling != value))
				{
					this.OnISO_IfPicklingChanging(value);
					this.SendPropertyChanging();
					this._ISO_IfPickling = value;
					this.SendPropertyChanged("ISO_IfPickling");
					this.OnISO_IfPicklingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ISO_IfChasing", DbType="Bit")]
		public System.Nullable<bool> ISO_IfChasing
		{
			get
			{
				return this._ISO_IfChasing;
			}
			set
			{
				if ((this._ISO_IfChasing != value))
				{
					this.OnISO_IfChasingChanging(value);
					this.SendPropertyChanging();
					this._ISO_IfChasing = value;
					this.SendPropertyChanged("ISO_IfChasing");
					this.OnISO_IfChasingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ISO_Remark", DbType="VarChar(100)")]
		public string ISO_Remark
		{
			get
			{
				return this._ISO_Remark;
			}
			set
			{
				if ((this._ISO_Remark != value))
				{
					this.OnISO_RemarkChanging(value);
					this.SendPropertyChanging();
					this._ISO_Remark = value;
					this.SendPropertyChanged("ISO_Remark");
					this.OnISO_RemarkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ISO_HardnessRate", DbType="Decimal(18,1)")]
		public System.Nullable<decimal> ISO_HardnessRate
		{
			get
			{
				return this._ISO_HardnessRate;
			}
			set
			{
				if ((this._ISO_HardnessRate != value))
				{
					this.OnISO_HardnessRateChanging(value);
					this.SendPropertyChanging();
					this._ISO_HardnessRate = value;
					this.SendPropertyChanged("ISO_HardnessRate");
					this.OnISO_HardnessRateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsBig", DbType="Bit")]
		public System.Nullable<bool> IsBig
		{
			get
			{
				return this._IsBig;
			}
			set
			{
				if ((this._IsBig != value))
				{
					this.OnIsBigChanging(value);
					this.SendPropertyChanging();
					this._IsBig = value;
					this.SendPropertyChanged("IsBig");
					this.OnIsBigChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PipeNumber", DbType="NVarChar(50)")]
		public string PipeNumber
		{
			get
			{
				return this._PipeNumber;
			}
			set
			{
				if ((this._PipeNumber != value))
				{
					this.OnPipeNumberChanging(value);
					this.SendPropertyChanging();
					this._PipeNumber = value;
					this.SendPropertyChanged("PipeNumber");
					this.OnPipeNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_BO_NDTTR_REFERENCE_PW_ISOIN", Storage="_BO_NDTTrustItem", ThisKey="ISO_ID", OtherKey="ISO_ID", DeleteRule="NO ACTION")]
		public EntitySet<BO_NDTTrustItem> BO_NDTTrustItem
		{
			get
			{
				return this._BO_NDTTrustItem;
			}
			set
			{
				this._BO_NDTTrustItem.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_PW_IsoInfo_Base_Project", Storage="_Base_Project", ThisKey="ProjectId", OtherKey="ProjectId", IsForeignKey=true)]
		public Base_Project Base_Project
		{
			get
			{
				return this._Base_Project.Entity;
			}
			set
			{
				Base_Project previousValue = this._Base_Project.Entity;
				if (((previousValue != value) 
							|| (this._Base_Project.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Base_Project.Entity = null;
						previousValue.PW_IsoInfo.Remove(this);
					}
					this._Base_Project.Entity = value;
					if ((value != null))
					{
						value.PW_IsoInfo.Add(this);
						this._ProjectId = value.ProjectId;
					}
					else
					{
						this._ProjectId = default(string);
					}
					this.SendPropertyChanged("Base_Project");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_PW_IsoInfo_Base_Unit", Storage="_Base_Unit", ThisKey="BSU_ID", OtherKey="UnitId", IsForeignKey=true)]
		public Base_Unit Base_Unit
		{
			get
			{
				return this._Base_Unit.Entity;
			}
			set
			{
				Base_Unit previousValue = this._Base_Unit.Entity;
				if (((previousValue != value) 
							|| (this._Base_Unit.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Base_Unit.Entity = null;
						previousValue.PW_IsoInfo.Remove(this);
					}
					this._Base_Unit.Entity = value;
					if ((value != null))
					{
						value.PW_IsoInfo.Add(this);
						this._BSU_ID = value.UnitId;
					}
					else
					{
						this._BSU_ID = default(string);
					}
					this.SendPropertyChanged("Base_Unit");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_PW_IsoInfo_Base_WorkArea", Storage="_Base_WorkArea", ThisKey="BAW_ID", OtherKey="WorkAreaId", IsForeignKey=true)]
		public Base_WorkArea Base_WorkArea
		{
			get
			{
				return this._Base_WorkArea.Entity;
			}
			set
			{
				Base_WorkArea previousValue = this._Base_WorkArea.Entity;
				if (((previousValue != value) 
							|| (this._Base_WorkArea.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Base_WorkArea.Entity = null;
						previousValue.PW_IsoInfo.Remove(this);
					}
					this._Base_WorkArea.Entity = value;
					if ((value != null))
					{
						value.PW_IsoInfo.Add(this);
						this._BAW_ID = value.WorkAreaId;
					}
					else
					{
						this._BAW_ID = default(string);
					}
					this.SendPropertyChanged("Base_WorkArea");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_PW_IsoInfo_BS_IsoClass", Storage="_BS_IsoClass", ThisKey="ISC_ID", OtherKey="ISC_ID", IsForeignKey=true)]
		public BS_IsoClass BS_IsoClass
		{
			get
			{
				return this._BS_IsoClass.Entity;
			}
			set
			{
				BS_IsoClass previousValue = this._BS_IsoClass.Entity;
				if (((previousValue != value) 
							|| (this._BS_IsoClass.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._BS_IsoClass.Entity = null;
						previousValue.PW_IsoInfo.Remove(this);
					}
					this._BS_IsoClass.Entity = value;
					if ((value != null))
					{
						value.PW_IsoInfo.Add(this);
						this._ISC_ID = value.ISC_ID;
					}
					else
					{
						this._ISC_ID = default(string);
					}
					this.SendPropertyChanged("BS_IsoClass");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_PW_IsoInfo_BS_NDTRate", Storage="_BS_NDTRate", ThisKey="NDTR_ID", OtherKey="NDTR_ID", IsForeignKey=true)]
		public BS_NDTRate BS_NDTRate
		{
			get
			{
				return this._BS_NDTRate.Entity;
			}
			set
			{
				BS_NDTRate previousValue = this._BS_NDTRate.Entity;
				if (((previousValue != value) 
							|| (this._BS_NDTRate.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._BS_NDTRate.Entity = null;
						previousValue.PW_IsoInfo.Remove(this);
					}
					this._BS_NDTRate.Entity = value;
					if ((value != null))
					{
						value.PW_IsoInfo.Add(this);
						this._NDTR_ID = value.NDTR_ID;
					}
					else
					{
						this._NDTR_ID = default(string);
					}
					this.SendPropertyChanged("BS_NDTRate");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_PW_IsoInfo_BS_NDTType", Storage="_BS_NDTType", ThisKey="NDT_ID", OtherKey="NDT_ID", IsForeignKey=true)]
		public BS_NDTType BS_NDTType
		{
			get
			{
				return this._BS_NDTType.Entity;
			}
			set
			{
				BS_NDTType previousValue = this._BS_NDTType.Entity;
				if (((previousValue != value) 
							|| (this._BS_NDTType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._BS_NDTType.Entity = null;
						previousValue.PW_IsoInfo.Remove(this);
					}
					this._BS_NDTType.Entity = value;
					if ((value != null))
					{
						value.PW_IsoInfo.Add(this);
						this._NDT_ID = value.NDT_ID;
					}
					else
					{
						this._NDT_ID = default(string);
					}
					this.SendPropertyChanged("BS_NDTType");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_PW_IsoInfo_BS_Service", Storage="_BS_Service", ThisKey="SER_ID", OtherKey="SER_ID", IsForeignKey=true)]
		public BS_Service BS_Service
		{
			get
			{
				return this._BS_Service.Entity;
			}
			set
			{
				BS_Service previousValue = this._BS_Service.Entity;
				if (((previousValue != value) 
							|| (this._BS_Service.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._BS_Service.Entity = null;
						previousValue.PW_IsoInfo.Remove(this);
					}
					this._BS_Service.Entity = value;
					if ((value != null))
					{
						value.PW_IsoInfo.Add(this);
						this._SER_ID = value.SER_ID;
					}
					else
					{
						this._SER_ID = default(string);
					}
					this.SendPropertyChanged("BS_Service");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_PW_IsoInfo_BS_Steel", Storage="_BS_Steel", ThisKey="STE_ID", OtherKey="STE_ID", IsForeignKey=true)]
		public BS_Steel BS_Steel
		{
			get
			{
				return this._BS_Steel.Entity;
			}
			set
			{
				BS_Steel previousValue = this._BS_Steel.Entity;
				if (((previousValue != value) 
							|| (this._BS_Steel.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._BS_Steel.Entity = null;
						previousValue.PW_IsoInfo.Remove(this);
					}
					this._BS_Steel.Entity = value;
					if ((value != null))
					{
						value.PW_IsoInfo.Add(this);
						this._STE_ID = value.STE_ID;
					}
					else
					{
						this._STE_ID = default(string);
					}
					this.SendPropertyChanged("BS_Steel");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_PW_JointInfo_PW_IsoInfo", Storage="_PW_JointInfo", ThisKey="ISO_ID", OtherKey="ISO_ID", DeleteRule="NO ACTION")]
		public EntitySet<PW_JointInfo> PW_JointInfo
		{
			get
			{
				return this._PW_JointInfo;
			}
			set
			{
				this._PW_JointInfo.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_TP_AItemEndCheck_PW_IsoInfo", Storage="_TP_AItemEndCheck", ThisKey="ISO_ID", OtherKey="ISO_ID", DeleteRule="NO ACTION")]
		public EntitySet<TP_AItemEndCheck> TP_AItemEndCheck
		{
			get
			{
				return this._TP_AItemEndCheck;
			}
			set
			{
				this._TP_AItemEndCheck.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_TP_BItemEndCheck_PW_IsoInfo", Storage="_TP_BItemEndCheck", ThisKey="ISO_ID", OtherKey="ISO_ID", DeleteRule="NO ACTION")]
		public EntitySet<TP_BItemEndCheck> TP_BItemEndCheck
		{
			get
			{
				return this._TP_BItemEndCheck;
			}
			set
			{
				this._TP_BItemEndCheck.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_TP_ISOLI_REFERENCE_PW_ISOIN", Storage="_TP_IsoList", ThisKey="ISO_ID", OtherKey="ISO_ID", DeleteRule="NO ACTION")]
		public EntitySet<TP_IsoList> TP_IsoList
		{
			get
			{
				return this._TP_IsoList;
			}
			set
			{
				this._TP_IsoList.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_TP_TestPackage_PW_IsoInfo", Storage="_TP_TestPackage", ThisKey="ISO_ID", OtherKey="PT_ID", DeleteRule="NO ACTION")]
		public EntitySet<TP_TestPackage> TP_TestPackage
		{
			get
			{
				return this._TP_TestPackage;
			}
			set
			{
				this._TP_TestPackage.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_BO_NDTTrustItem(BO_NDTTrustItem entity)
		{
			this.SendPropertyChanging();
			entity.PW_IsoInfo = this;
		}
		
		private void detach_BO_NDTTrustItem(BO_NDTTrustItem entity)
		{
			this.SendPropertyChanging();
			entity.PW_IsoInfo = null;
		}
		
		private void attach_PW_JointInfo(PW_JointInfo entity)
		{
			this.SendPropertyChanging();
			entity.PW_IsoInfo = this;
		}
		
		private void detach_PW_JointInfo(PW_JointInfo entity)
		{
			this.SendPropertyChanging();
			entity.PW_IsoInfo = null;
		}
		
		private void attach_TP_AItemEndCheck(TP_AItemEndCheck entity)
		{
			this.SendPropertyChanging();
			entity.PW_IsoInfo = this;
		}
		
		private void detach_TP_AItemEndCheck(TP_AItemEndCheck entity)
		{
			this.SendPropertyChanging();
			entity.PW_IsoInfo = null;
		}
		
		private void attach_TP_BItemEndCheck(TP_BItemEndCheck entity)
		{
			this.SendPropertyChanging();
			entity.PW_IsoInfo = this;
		}
		
		private void detach_TP_BItemEndCheck(TP_BItemEndCheck entity)
		{
			this.SendPropertyChanging();
			entity.PW_IsoInfo = null;
		}
		
		private void attach_TP_IsoList(TP_IsoList entity)
		{
			this.SendPropertyChanging();
			entity.PW_IsoInfo = this;
		}
		
		private void detach_TP_IsoList(TP_IsoList entity)
		{
			this.SendPropertyChanging();
			entity.PW_IsoInfo = null;
		}
		
		private void attach_TP_TestPackage(TP_TestPackage entity)
		{
			this.SendPropertyChanging();
			entity.PW_IsoInfo = this;
		}
		
		private void detach_TP_TestPackage(TP_TestPackage entity)
		{
			this.SendPropertyChanging();
			entity.PW_IsoInfo = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PW_JointChange")]
	public partial class PW_JointChange : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _JOC_Code;
		
		private string _ProjectId;
		
		private string _JOC_Name;
		
		private string _JOC_Remark;
		
		private EntityRef<Base_Project> _Base_Project;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnJOC_CodeChanging(string value);
    partial void OnJOC_CodeChanged();
    partial void OnProjectIdChanging(string value);
    partial void OnProjectIdChanged();
    partial void OnJOC_NameChanging(string value);
    partial void OnJOC_NameChanged();
    partial void OnJOC_RemarkChanging(string value);
    partial void OnJOC_RemarkChanged();
    #endregion
		
		public PW_JointChange()
		{
			this._Base_Project = default(EntityRef<Base_Project>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JOC_Code", DbType="VarChar(20) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string JOC_Code
		{
			get
			{
				return this._JOC_Code;
			}
			set
			{
				if ((this._JOC_Code != value))
				{
					this.OnJOC_CodeChanging(value);
					this.SendPropertyChanging();
					this._JOC_Code = value;
					this.SendPropertyChanged("JOC_Code");
					this.OnJOC_CodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProjectId", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string ProjectId
		{
			get
			{
				return this._ProjectId;
			}
			set
			{
				if ((this._ProjectId != value))
				{
					if (this._Base_Project.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProjectIdChanging(value);
					this.SendPropertyChanging();
					this._ProjectId = value;
					this.SendPropertyChanged("ProjectId");
					this.OnProjectIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JOC_Name", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string JOC_Name
		{
			get
			{
				return this._JOC_Name;
			}
			set
			{
				if ((this._JOC_Name != value))
				{
					this.OnJOC_NameChanging(value);
					this.SendPropertyChanging();
					this._JOC_Name = value;
					this.SendPropertyChanged("JOC_Name");
					this.OnJOC_NameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JOC_Remark", DbType="VarChar(100)")]
		public string JOC_Remark
		{
			get
			{
				return this._JOC_Remark;
			}
			set
			{
				if ((this._JOC_Remark != value))
				{
					this.OnJOC_RemarkChanging(value);
					this.SendPropertyChanging();
					this._JOC_Remark = value;
					this.SendPropertyChanged("JOC_Remark");
					this.OnJOC_RemarkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_PW_JointChange_Base_Project", Storage="_Base_Project", ThisKey="ProjectId", OtherKey="ProjectId", IsForeignKey=true)]
		public Base_Project Base_Project
		{
			get
			{
				return this._Base_Project.Entity;
			}
			set
			{
				Base_Project previousValue = this._Base_Project.Entity;
				if (((previousValue != value) 
							|| (this._Base_Project.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Base_Project.Entity = null;
						previousValue.PW_JointChange.Remove(this);
					}
					this._Base_Project.Entity = value;
					if ((value != null))
					{
						value.PW_JointChange.Add(this);
						this._ProjectId = value.ProjectId;
					}
					else
					{
						this._ProjectId = default(string);
					}
					this.SendPropertyChanged("Base_Project");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PW_JointInfo")]
	public partial class PW_JointInfo : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _JOT_ID;
		
		private string _ProjectId;
		
		private string _JOT_JointNo;
		
		private string _DReportID;
		
		private string _ISO_ID;
		
		private string _STE_ID;
		
		private string _STE_ID2;
		
		private string _JOT_CellWelder;
		
		private string _JOT_FloorWelder;
		
		private string _WLO_Code;
		
		private System.Nullable<decimal> _JOT_DoneDin;
		
		private string _JOT_FloorGroup;
		
		private string _JOT_CellGroup;
		
		private string _IS_Compute;
		
		private string _JOT_NDTResult;
		
		private string _JOT_Component1;
		
		private string _JOT_Component2;
		
		private string _JOT_HeartNo1;
		
		private string _JOT_HeartNo2;
		
		private string _JOT_WeldMat;
		
		private string _JOT_JointStatus;
		
		private string _JOT_FaceCheckResult;
		
		private System.Nullable<System.DateTime> _JOT_FaceCheckDate;
		
		private System.Nullable<System.DateTime> _JOT_PHWTDate;
		
		private string _JOT_PHWTReportNo;
		
		private string _JOT_PHWTResult;
		
		private string _JOT_FaceChecker;
		
		private System.Nullable<decimal> _JOT_Dia;
		
		private System.Nullable<decimal> _JOT_Size;
		
		private string _JOT_Sch;
		
		private System.Nullable<decimal> _JOT_FactSch;
		
		private string _JOT_JointFlag;
		
		private string _JOT_TrustFlag;
		
		private System.Nullable<int> _JOT_BecauseJointNo;
		
		private string _JOT_JointDesc;
		
		private string _JOT_WeldSilk;
		
		private string _JOTY_ID;
		
		private string _JOT_CheckFlag;
		
		private string _JOT_RepairFlag;
		
		private string _WME_ID;
		
		private string _JST_ID;
		
		private string _JOT_BelongPipe;
		
		private string _JOT_CheckResult;
		
		private string _JOT_Electricity;
		
		private string _JOT_Voltage;
		
		private string _IS_Proess;
		
		private System.Nullable<System.DateTime> _JOT_ProessDate;
		
		private string _JOT_HotRpt;
		
		private System.Nullable<decimal> _JOT_PrepareTemp;
		
		private System.Nullable<decimal> _JOT_CellTemp;
		
		private System.Nullable<decimal> _JOT_LastTemp;
		
		private string _JOT_JointAttribute;
		
		private string _JOT_CellWeldRules;
		
		private string _JOT_FloorWeldRules;
		
		private string _Fix1_FloorWeld;
		
		private string _Fix1_CellWelder;
		
		private string _Fix2_FloorWeld;
		
		private string _Fix2_CellWelder;
		
		private string _JOT_Location;
		
		private string _PW_PointID;
		
		private string _NDT_ID;
		
		private string _NDTT_ID;
		
		private string _CH_RepairID1;
		
		private string _CH_RepairID2;
		
		private System.Nullable<System.DateTime> _Fix1_date;
		
		private System.Nullable<System.DateTime> _Fix2_date;
		
		private string _JOT_Remark;
		
		private string _WeldingProcedureJotId;
		
		private string _OldJointNo;
		
		private EntitySet<CH_CheckItem> _CH_CheckItem;
		
		private EntitySet<HotProessItem> _HotProessItem;
		
		private EntityRef<Base_Project> _Base_Project;
		
		private EntityRef<BO_NDTTrust> _BO_NDTTrust;
		
		private EntityRef<BO_Point> _BO_Point;
		
		private EntityRef<BO_WeldReportMain> _BO_WeldReportMain;
		
		private EntityRef<BS_Component> _BS_Component;
		
		private EntityRef<BS_Component> _JOT_Component2BS_Component;
		
		private EntityRef<BS_JointType> _BS_JointType;
		
		private EntityRef<BS_NDTType> _BS_NDTType;
		
		private EntityRef<BS_SlopeType> _BS_SlopeType;
		
		private EntityRef<BS_Steel> _BS_Steel;
		
		private EntityRef<BS_Steel> _STE_ID2BS_Steel;
		
		private EntityRef<BS_Welder> _BS_Welder;
		
		private EntityRef<BS_Welder> _JOT_FloorWelderBS_Welder;
		
		private EntityRef<BS_Welder> _Fix1_FloorWeldBS_Welder;
		
		private EntityRef<BS_Welder> _Fix2_FloorWeldBS_Welder;
		
		private EntityRef<BS_Welder> _Fix2_CellWelderBS_Welder;
		
		private EntityRef<BS_Welder> _Fix1_CellWelderBS_Welder;
		
		private EntityRef<BS_WeldMaterial> _BS_WeldMaterial;
		
		private EntityRef<BS_WeldMaterial> _JOT_WeldSilkBS_WeldMaterial;
		
		private EntityRef<BS_WeldMethod> _BS_WeldMethod;
		
		private EntityRef<CH_Repair> _CH_Repair;
		
		private EntityRef<CH_Repair> _CH_RepairID2CH_Repair;
		
		private EntityRef<HS_Education> _HS_Education;
		
		private EntityRef<HS_Education> _JOT_CellGroupHS_Education;
		
		private EntityRef<PW_IsoInfo> _PW_IsoInfo;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnJOT_IDChanging(string value);
    partial void OnJOT_IDChanged();
    partial void OnProjectIdChanging(string value);
    partial void OnProjectIdChanged();
    partial void OnJOT_JointNoChanging(string value);
    partial void OnJOT_JointNoChanged();
    partial void OnDReportIDChanging(string value);
    partial void OnDReportIDChanged();
    partial void OnISO_IDChanging(string value);
    partial void OnISO_IDChanged();
    partial void OnSTE_IDChanging(string value);
    partial void OnSTE_IDChanged();
    partial void OnSTE_ID2Changing(string value);
    partial void OnSTE_ID2Changed();
    partial void OnJOT_CellWelderChanging(string value);
    partial void OnJOT_CellWelderChanged();
    partial void OnJOT_FloorWelderChanging(string value);
    partial void OnJOT_FloorWelderChanged();
    partial void OnWLO_CodeChanging(string value);
    partial void OnWLO_CodeChanged();
    partial void OnJOT_DoneDinChanging(System.Nullable<decimal> value);
    partial void OnJOT_DoneDinChanged();
    partial void OnJOT_FloorGroupChanging(string value);
    partial void OnJOT_FloorGroupChanged();
    partial void OnJOT_CellGroupChanging(string value);
    partial void OnJOT_CellGroupChanged();
    partial void OnIS_ComputeChanging(string value);
    partial void OnIS_ComputeChanged();
    partial void OnJOT_NDTResultChanging(string value);
    partial void OnJOT_NDTResultChanged();
    partial void OnJOT_Component1Changing(string value);
    partial void OnJOT_Component1Changed();
    partial void OnJOT_Component2Changing(string value);
    partial void OnJOT_Component2Changed();
    partial void OnJOT_HeartNo1Changing(string value);
    partial void OnJOT_HeartNo1Changed();
    partial void OnJOT_HeartNo2Changing(string value);
    partial void OnJOT_HeartNo2Changed();
    partial void OnJOT_WeldMatChanging(string value);
    partial void OnJOT_WeldMatChanged();
    partial void OnJOT_JointStatusChanging(string value);
    partial void OnJOT_JointStatusChanged();
    partial void OnJOT_FaceCheckResultChanging(string value);
    partial void OnJOT_FaceCheckResultChanged();
    partial void OnJOT_FaceCheckDateChanging(System.Nullable<System.DateTime> value);
    partial void OnJOT_FaceCheckDateChanged();
    partial void OnJOT_PHWTDateChanging(System.Nullable<System.DateTime> value);
    partial void OnJOT_PHWTDateChanged();
    partial void OnJOT_PHWTReportNoChanging(string value);
    partial void OnJOT_PHWTReportNoChanged();
    partial void OnJOT_PHWTResultChanging(string value);
    partial void OnJOT_PHWTResultChanged();
    partial void OnJOT_FaceCheckerChanging(string value);
    partial void OnJOT_FaceCheckerChanged();
    partial void OnJOT_DiaChanging(System.Nullable<decimal> value);
    partial void OnJOT_DiaChanged();
    partial void OnJOT_SizeChanging(System.Nullable<decimal> value);
    partial void OnJOT_SizeChanged();
    partial void OnJOT_SchChanging(string value);
    partial void OnJOT_SchChanged();
    partial void OnJOT_FactSchChanging(System.Nullable<decimal> value);
    partial void OnJOT_FactSchChanged();
    partial void OnJOT_JointFlagChanging(string value);
    partial void OnJOT_JointFlagChanged();
    partial void OnJOT_TrustFlagChanging(string value);
    partial void OnJOT_TrustFlagChanged();
    partial void OnJOT_BecauseJointNoChanging(System.Nullable<int> value);
    partial void OnJOT_BecauseJointNoChanged();
    partial void OnJOT_JointDescChanging(string value);
    partial void OnJOT_JointDescChanged();
    partial void OnJOT_WeldSilkChanging(string value);
    partial void OnJOT_WeldSilkChanged();
    partial void OnJOTY_IDChanging(string value);
    partial void OnJOTY_IDChanged();
    partial void OnJOT_CheckFlagChanging(string value);
    partial void OnJOT_CheckFlagChanged();
    partial void OnJOT_RepairFlagChanging(string value);
    partial void OnJOT_RepairFlagChanged();
    partial void OnWME_IDChanging(string value);
    partial void OnWME_IDChanged();
    partial void OnJST_IDChanging(string value);
    partial void OnJST_IDChanged();
    partial void OnJOT_BelongPipeChanging(string value);
    partial void OnJOT_BelongPipeChanged();
    partial void OnJOT_CheckResultChanging(string value);
    partial void OnJOT_CheckResultChanged();
    partial void OnJOT_ElectricityChanging(string value);
    partial void OnJOT_ElectricityChanged();
    partial void OnJOT_VoltageChanging(string value);
    partial void OnJOT_VoltageChanged();
    partial void OnIS_ProessChanging(string value);
    partial void OnIS_ProessChanged();
    partial void OnJOT_ProessDateChanging(System.Nullable<System.DateTime> value);
    partial void OnJOT_ProessDateChanged();
    partial void OnJOT_HotRptChanging(string value);
    partial void OnJOT_HotRptChanged();
    partial void OnJOT_PrepareTempChanging(System.Nullable<decimal> value);
    partial void OnJOT_PrepareTempChanged();
    partial void OnJOT_CellTempChanging(System.Nullable<decimal> value);
    partial void OnJOT_CellTempChanged();
    partial void OnJOT_LastTempChanging(System.Nullable<decimal> value);
    partial void OnJOT_LastTempChanged();
    partial void OnJOT_JointAttributeChanging(string value);
    partial void OnJOT_JointAttributeChanged();
    partial void OnJOT_CellWeldRulesChanging(string value);
    partial void OnJOT_CellWeldRulesChanged();
    partial void OnJOT_FloorWeldRulesChanging(string value);
    partial void OnJOT_FloorWeldRulesChanged();
    partial void OnFix1_FloorWeldChanging(string value);
    partial void OnFix1_FloorWeldChanged();
    partial void OnFix1_CellWelderChanging(string value);
    partial void OnFix1_CellWelderChanged();
    partial void OnFix2_FloorWeldChanging(string value);
    partial void OnFix2_FloorWeldChanged();
    partial void OnFix2_CellWelderChanging(string value);
    partial void OnFix2_CellWelderChanged();
    partial void OnJOT_LocationChanging(string value);
    partial void OnJOT_LocationChanged();
    partial void OnPW_PointIDChanging(string value);
    partial void OnPW_PointIDChanged();
    partial void OnNDT_IDChanging(string value);
    partial void OnNDT_IDChanged();
    partial void OnNDTT_IDChanging(string value);
    partial void OnNDTT_IDChanged();
    partial void OnCH_RepairID1Changing(string value);
    partial void OnCH_RepairID1Changed();
    partial void OnCH_RepairID2Changing(string value);
    partial void OnCH_RepairID2Changed();
    partial void OnFix1_dateChanging(System.Nullable<System.DateTime> value);
    partial void OnFix1_dateChanged();
    partial void OnFix2_dateChanging(System.Nullable<System.DateTime> value);
    partial void OnFix2_dateChanged();
    partial void OnJOT_RemarkChanging(string value);
    partial void OnJOT_RemarkChanged();
    partial void OnWeldingProcedureJotIdChanging(string value);
    partial void OnWeldingProcedureJotIdChanged();
    partial void OnOldJointNoChanging(string value);
    partial void OnOldJointNoChanged();
    #endregion
		
		public PW_JointInfo()
		{
			this._CH_CheckItem = new EntitySet<CH_CheckItem>(new Action<CH_CheckItem>(this.attach_CH_CheckItem), new Action<CH_CheckItem>(this.detach_CH_CheckItem));
			this._HotProessItem = new EntitySet<HotProessItem>(new Action<HotProessItem>(this.attach_HotProessItem), new Action<HotProessItem>(this.detach_HotProessItem));
			this._Base_Project = default(EntityRef<Base_Project>);
			this._BO_NDTTrust = default(EntityRef<BO_NDTTrust>);
			this._BO_Point = default(EntityRef<BO_Point>);
			this._BO_WeldReportMain = default(EntityRef<BO_WeldReportMain>);
			this._BS_Component = default(EntityRef<BS_Component>);
			this._JOT_Component2BS_Component = default(EntityRef<BS_Component>);
			this._BS_JointType = default(EntityRef<BS_JointType>);
			this._BS_NDTType = default(EntityRef<BS_NDTType>);
			this._BS_SlopeType = default(EntityRef<BS_SlopeType>);
			this._BS_Steel = default(EntityRef<BS_Steel>);
			this._STE_ID2BS_Steel = default(EntityRef<BS_Steel>);
			this._BS_Welder = default(EntityRef<BS_Welder>);
			this._JOT_FloorWelderBS_Welder = default(EntityRef<BS_Welder>);
			this._Fix1_FloorWeldBS_Welder = default(EntityRef<BS_Welder>);
			this._Fix2_FloorWeldBS_Welder = default(EntityRef<BS_Welder>);
			this._Fix2_CellWelderBS_Welder = default(EntityRef<BS_Welder>);
			this._Fix1_CellWelderBS_Welder = default(EntityRef<BS_Welder>);
			this._BS_WeldMaterial = default(EntityRef<BS_WeldMaterial>);
			this._JOT_WeldSilkBS_WeldMaterial = default(EntityRef<BS_WeldMaterial>);
			this._BS_WeldMethod = default(EntityRef<BS_WeldMethod>);
			this._CH_Repair = default(EntityRef<CH_Repair>);
			this._CH_RepairID2CH_Repair = default(EntityRef<CH_Repair>);
			this._HS_Education = default(EntityRef<HS_Education>);
			this._JOT_CellGroupHS_Education = default(EntityRef<HS_Education>);
			this._PW_IsoInfo = default(EntityRef<PW_IsoInfo>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JOT_ID", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string JOT_ID
		{
			get
			{
				return this._JOT_ID;
			}
			set
			{
				if ((this._JOT_ID != value))
				{
					this.OnJOT_IDChanging(value);
					this.SendPropertyChanging();
					this._JOT_ID = value;
					this.SendPropertyChanged("JOT_ID");
					this.OnJOT_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProjectId", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string ProjectId
		{
			get
			{
				return this._ProjectId;
			}
			set
			{
				if ((this._ProjectId != value))
				{
					if (this._Base_Project.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProjectIdChanging(value);
					this.SendPropertyChanging();
					this._ProjectId = value;
					this.SendPropertyChanged("ProjectId");
					this.OnProjectIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JOT_JointNo", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string JOT_JointNo
		{
			get
			{
				return this._JOT_JointNo;
			}
			set
			{
				if ((this._JOT_JointNo != value))
				{
					this.OnJOT_JointNoChanging(value);
					this.SendPropertyChanging();
					this._JOT_JointNo = value;
					this.SendPropertyChanged("JOT_JointNo");
					this.OnJOT_JointNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DReportID", DbType="VarChar(50)")]
		public string DReportID
		{
			get
			{
				return this._DReportID;
			}
			set
			{
				if ((this._DReportID != value))
				{
					if (this._BO_WeldReportMain.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDReportIDChanging(value);
					this.SendPropertyChanging();
					this._DReportID = value;
					this.SendPropertyChanged("DReportID");
					this.OnDReportIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ISO_ID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string ISO_ID
		{
			get
			{
				return this._ISO_ID;
			}
			set
			{
				if ((this._ISO_ID != value))
				{
					if (this._PW_IsoInfo.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnISO_IDChanging(value);
					this.SendPropertyChanging();
					this._ISO_ID = value;
					this.SendPropertyChanged("ISO_ID");
					this.OnISO_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_STE_ID", DbType="VarChar(50)")]
		public string STE_ID
		{
			get
			{
				return this._STE_ID;
			}
			set
			{
				if ((this._STE_ID != value))
				{
					if (this._BS_Steel.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSTE_IDChanging(value);
					this.SendPropertyChanging();
					this._STE_ID = value;
					this.SendPropertyChanged("STE_ID");
					this.OnSTE_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_STE_ID2", DbType="VarChar(50)")]
		public string STE_ID2
		{
			get
			{
				return this._STE_ID2;
			}
			set
			{
				if ((this._STE_ID2 != value))
				{
					if (this._STE_ID2BS_Steel.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSTE_ID2Changing(value);
					this.SendPropertyChanging();
					this._STE_ID2 = value;
					this.SendPropertyChanged("STE_ID2");
					this.OnSTE_ID2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JOT_CellWelder", DbType="NVarChar(50)")]
		public string JOT_CellWelder
		{
			get
			{
				return this._JOT_CellWelder;
			}
			set
			{
				if ((this._JOT_CellWelder != value))
				{
					if (this._BS_Welder.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnJOT_CellWelderChanging(value);
					this.SendPropertyChanging();
					this._JOT_CellWelder = value;
					this.SendPropertyChanged("JOT_CellWelder");
					this.OnJOT_CellWelderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JOT_FloorWelder", DbType="NVarChar(50)")]
		public string JOT_FloorWelder
		{
			get
			{
				return this._JOT_FloorWelder;
			}
			set
			{
				if ((this._JOT_FloorWelder != value))
				{
					if (this._JOT_FloorWelderBS_Welder.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnJOT_FloorWelderChanging(value);
					this.SendPropertyChanging();
					this._JOT_FloorWelder = value;
					this.SendPropertyChanged("JOT_FloorWelder");
					this.OnJOT_FloorWelderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WLO_Code", DbType="VarChar(20)")]
		public string WLO_Code
		{
			get
			{
				return this._WLO_Code;
			}
			set
			{
				if ((this._WLO_Code != value))
				{
					this.OnWLO_CodeChanging(value);
					this.SendPropertyChanging();
					this._WLO_Code = value;
					this.SendPropertyChanged("WLO_Code");
					this.OnWLO_CodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JOT_DoneDin", DbType="Decimal(18,4)")]
		public System.Nullable<decimal> JOT_DoneDin
		{
			get
			{
				return this._JOT_DoneDin;
			}
			set
			{
				if ((this._JOT_DoneDin != value))
				{
					this.OnJOT_DoneDinChanging(value);
					this.SendPropertyChanging();
					this._JOT_DoneDin = value;
					this.SendPropertyChanged("JOT_DoneDin");
					this.OnJOT_DoneDinChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JOT_FloorGroup", DbType="VarChar(50)")]
		public string JOT_FloorGroup
		{
			get
			{
				return this._JOT_FloorGroup;
			}
			set
			{
				if ((this._JOT_FloorGroup != value))
				{
					if (this._HS_Education.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnJOT_FloorGroupChanging(value);
					this.SendPropertyChanging();
					this._JOT_FloorGroup = value;
					this.SendPropertyChanged("JOT_FloorGroup");
					this.OnJOT_FloorGroupChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JOT_CellGroup", DbType="VarChar(50)")]
		public string JOT_CellGroup
		{
			get
			{
				return this._JOT_CellGroup;
			}
			set
			{
				if ((this._JOT_CellGroup != value))
				{
					if (this._JOT_CellGroupHS_Education.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnJOT_CellGroupChanging(value);
					this.SendPropertyChanging();
					this._JOT_CellGroup = value;
					this.SendPropertyChanged("JOT_CellGroup");
					this.OnJOT_CellGroupChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IS_Compute", DbType="Char(1)")]
		public string IS_Compute
		{
			get
			{
				return this._IS_Compute;
			}
			set
			{
				if ((this._IS_Compute != value))
				{
					this.OnIS_ComputeChanging(value);
					this.SendPropertyChanging();
					this._IS_Compute = value;
					this.SendPropertyChanged("IS_Compute");
					this.OnIS_ComputeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JOT_NDTResult", DbType="VarChar(50)")]
		public string JOT_NDTResult
		{
			get
			{
				return this._JOT_NDTResult;
			}
			set
			{
				if ((this._JOT_NDTResult != value))
				{
					this.OnJOT_NDTResultChanging(value);
					this.SendPropertyChanging();
					this._JOT_NDTResult = value;
					this.SendPropertyChanged("JOT_NDTResult");
					this.OnJOT_NDTResultChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JOT_Component1", DbType="VarChar(50)")]
		public string JOT_Component1
		{
			get
			{
				return this._JOT_Component1;
			}
			set
			{
				if ((this._JOT_Component1 != value))
				{
					if (this._BS_Component.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnJOT_Component1Changing(value);
					this.SendPropertyChanging();
					this._JOT_Component1 = value;
					this.SendPropertyChanged("JOT_Component1");
					this.OnJOT_Component1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JOT_Component2", DbType="VarChar(50)")]
		public string JOT_Component2
		{
			get
			{
				return this._JOT_Component2;
			}
			set
			{
				if ((this._JOT_Component2 != value))
				{
					if (this._JOT_Component2BS_Component.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnJOT_Component2Changing(value);
					this.SendPropertyChanging();
					this._JOT_Component2 = value;
					this.SendPropertyChanged("JOT_Component2");
					this.OnJOT_Component2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JOT_HeartNo1", DbType="VarChar(50)")]
		public string JOT_HeartNo1
		{
			get
			{
				return this._JOT_HeartNo1;
			}
			set
			{
				if ((this._JOT_HeartNo1 != value))
				{
					this.OnJOT_HeartNo1Changing(value);
					this.SendPropertyChanging();
					this._JOT_HeartNo1 = value;
					this.SendPropertyChanged("JOT_HeartNo1");
					this.OnJOT_HeartNo1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JOT_HeartNo2", DbType="VarChar(50)")]
		public string JOT_HeartNo2
		{
			get
			{
				return this._JOT_HeartNo2;
			}
			set
			{
				if ((this._JOT_HeartNo2 != value))
				{
					this.OnJOT_HeartNo2Changing(value);
					this.SendPropertyChanging();
					this._JOT_HeartNo2 = value;
					this.SendPropertyChanged("JOT_HeartNo2");
					this.OnJOT_HeartNo2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JOT_WeldMat", DbType="VarChar(50)")]
		public string JOT_WeldMat
		{
			get
			{
				return this._JOT_WeldMat;
			}
			set
			{
				if ((this._JOT_WeldMat != value))
				{
					if (this._BS_WeldMaterial.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnJOT_WeldMatChanging(value);
					this.SendPropertyChanging();
					this._JOT_WeldMat = value;
					this.SendPropertyChanged("JOT_WeldMat");
					this.OnJOT_WeldMatChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JOT_JointStatus", DbType="VarChar(20)")]
		public string JOT_JointStatus
		{
			get
			{
				return this._JOT_JointStatus;
			}
			set
			{
				if ((this._JOT_JointStatus != value))
				{
					this.OnJOT_JointStatusChanging(value);
					this.SendPropertyChanging();
					this._JOT_JointStatus = value;
					this.SendPropertyChanged("JOT_JointStatus");
					this.OnJOT_JointStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JOT_FaceCheckResult", DbType="VarChar(20)")]
		public string JOT_FaceCheckResult
		{
			get
			{
				return this._JOT_FaceCheckResult;
			}
			set
			{
				if ((this._JOT_FaceCheckResult != value))
				{
					this.OnJOT_FaceCheckResultChanging(value);
					this.SendPropertyChanging();
					this._JOT_FaceCheckResult = value;
					this.SendPropertyChanged("JOT_FaceCheckResult");
					this.OnJOT_FaceCheckResultChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JOT_FaceCheckDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> JOT_FaceCheckDate
		{
			get
			{
				return this._JOT_FaceCheckDate;
			}
			set
			{
				if ((this._JOT_FaceCheckDate != value))
				{
					this.OnJOT_FaceCheckDateChanging(value);
					this.SendPropertyChanging();
					this._JOT_FaceCheckDate = value;
					this.SendPropertyChanged("JOT_FaceCheckDate");
					this.OnJOT_FaceCheckDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JOT_PHWTDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> JOT_PHWTDate
		{
			get
			{
				return this._JOT_PHWTDate;
			}
			set
			{
				if ((this._JOT_PHWTDate != value))
				{
					this.OnJOT_PHWTDateChanging(value);
					this.SendPropertyChanging();
					this._JOT_PHWTDate = value;
					this.SendPropertyChanged("JOT_PHWTDate");
					this.OnJOT_PHWTDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JOT_PHWTReportNo", DbType="VarChar(50)")]
		public string JOT_PHWTReportNo
		{
			get
			{
				return this._JOT_PHWTReportNo;
			}
			set
			{
				if ((this._JOT_PHWTReportNo != value))
				{
					this.OnJOT_PHWTReportNoChanging(value);
					this.SendPropertyChanging();
					this._JOT_PHWTReportNo = value;
					this.SendPropertyChanged("JOT_PHWTReportNo");
					this.OnJOT_PHWTReportNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JOT_PHWTResult", DbType="VarChar(20)")]
		public string JOT_PHWTResult
		{
			get
			{
				return this._JOT_PHWTResult;
			}
			set
			{
				if ((this._JOT_PHWTResult != value))
				{
					this.OnJOT_PHWTResultChanging(value);
					this.SendPropertyChanging();
					this._JOT_PHWTResult = value;
					this.SendPropertyChanged("JOT_PHWTResult");
					this.OnJOT_PHWTResultChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JOT_FaceChecker", DbType="VarChar(20)")]
		public string JOT_FaceChecker
		{
			get
			{
				return this._JOT_FaceChecker;
			}
			set
			{
				if ((this._JOT_FaceChecker != value))
				{
					this.OnJOT_FaceCheckerChanging(value);
					this.SendPropertyChanging();
					this._JOT_FaceChecker = value;
					this.SendPropertyChanged("JOT_FaceChecker");
					this.OnJOT_FaceCheckerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JOT_Dia", DbType="Decimal(18,4)")]
		public System.Nullable<decimal> JOT_Dia
		{
			get
			{
				return this._JOT_Dia;
			}
			set
			{
				if ((this._JOT_Dia != value))
				{
					this.OnJOT_DiaChanging(value);
					this.SendPropertyChanging();
					this._JOT_Dia = value;
					this.SendPropertyChanged("JOT_Dia");
					this.OnJOT_DiaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JOT_Size", DbType="Decimal(18,4)")]
		public System.Nullable<decimal> JOT_Size
		{
			get
			{
				return this._JOT_Size;
			}
			set
			{
				if ((this._JOT_Size != value))
				{
					this.OnJOT_SizeChanging(value);
					this.SendPropertyChanging();
					this._JOT_Size = value;
					this.SendPropertyChanged("JOT_Size");
					this.OnJOT_SizeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JOT_Sch", DbType="VarChar(40)")]
		public string JOT_Sch
		{
			get
			{
				return this._JOT_Sch;
			}
			set
			{
				if ((this._JOT_Sch != value))
				{
					this.OnJOT_SchChanging(value);
					this.SendPropertyChanging();
					this._JOT_Sch = value;
					this.SendPropertyChanged("JOT_Sch");
					this.OnJOT_SchChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JOT_FactSch", DbType="Decimal(18,4)")]
		public System.Nullable<decimal> JOT_FactSch
		{
			get
			{
				return this._JOT_FactSch;
			}
			set
			{
				if ((this._JOT_FactSch != value))
				{
					this.OnJOT_FactSchChanging(value);
					this.SendPropertyChanging();
					this._JOT_FactSch = value;
					this.SendPropertyChanged("JOT_FactSch");
					this.OnJOT_FactSchChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JOT_JointFlag", DbType="VarChar(80)")]
		public string JOT_JointFlag
		{
			get
			{
				return this._JOT_JointFlag;
			}
			set
			{
				if ((this._JOT_JointFlag != value))
				{
					this.OnJOT_JointFlagChanging(value);
					this.SendPropertyChanging();
					this._JOT_JointFlag = value;
					this.SendPropertyChanged("JOT_JointFlag");
					this.OnJOT_JointFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JOT_TrustFlag", DbType="VarChar(40)")]
		public string JOT_TrustFlag
		{
			get
			{
				return this._JOT_TrustFlag;
			}
			set
			{
				if ((this._JOT_TrustFlag != value))
				{
					this.OnJOT_TrustFlagChanging(value);
					this.SendPropertyChanging();
					this._JOT_TrustFlag = value;
					this.SendPropertyChanged("JOT_TrustFlag");
					this.OnJOT_TrustFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JOT_BecauseJointNo", DbType="Int")]
		public System.Nullable<int> JOT_BecauseJointNo
		{
			get
			{
				return this._JOT_BecauseJointNo;
			}
			set
			{
				if ((this._JOT_BecauseJointNo != value))
				{
					this.OnJOT_BecauseJointNoChanging(value);
					this.SendPropertyChanging();
					this._JOT_BecauseJointNo = value;
					this.SendPropertyChanged("JOT_BecauseJointNo");
					this.OnJOT_BecauseJointNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JOT_JointDesc", DbType="VarChar(100)")]
		public string JOT_JointDesc
		{
			get
			{
				return this._JOT_JointDesc;
			}
			set
			{
				if ((this._JOT_JointDesc != value))
				{
					this.OnJOT_JointDescChanging(value);
					this.SendPropertyChanging();
					this._JOT_JointDesc = value;
					this.SendPropertyChanged("JOT_JointDesc");
					this.OnJOT_JointDescChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JOT_WeldSilk", DbType="VarChar(50)")]
		public string JOT_WeldSilk
		{
			get
			{
				return this._JOT_WeldSilk;
			}
			set
			{
				if ((this._JOT_WeldSilk != value))
				{
					if (this._JOT_WeldSilkBS_WeldMaterial.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnJOT_WeldSilkChanging(value);
					this.SendPropertyChanging();
					this._JOT_WeldSilk = value;
					this.SendPropertyChanged("JOT_WeldSilk");
					this.OnJOT_WeldSilkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JOTY_ID", DbType="VarChar(50)")]
		public string JOTY_ID
		{
			get
			{
				return this._JOTY_ID;
			}
			set
			{
				if ((this._JOTY_ID != value))
				{
					if (this._BS_JointType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnJOTY_IDChanging(value);
					this.SendPropertyChanging();
					this._JOTY_ID = value;
					this.SendPropertyChanged("JOTY_ID");
					this.OnJOTY_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JOT_CheckFlag", DbType="VarChar(40)")]
		public string JOT_CheckFlag
		{
			get
			{
				return this._JOT_CheckFlag;
			}
			set
			{
				if ((this._JOT_CheckFlag != value))
				{
					this.OnJOT_CheckFlagChanging(value);
					this.SendPropertyChanging();
					this._JOT_CheckFlag = value;
					this.SendPropertyChanged("JOT_CheckFlag");
					this.OnJOT_CheckFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JOT_RepairFlag", DbType="VarChar(40)")]
		public string JOT_RepairFlag
		{
			get
			{
				return this._JOT_RepairFlag;
			}
			set
			{
				if ((this._JOT_RepairFlag != value))
				{
					this.OnJOT_RepairFlagChanging(value);
					this.SendPropertyChanging();
					this._JOT_RepairFlag = value;
					this.SendPropertyChanged("JOT_RepairFlag");
					this.OnJOT_RepairFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WME_ID", DbType="VarChar(50)")]
		public string WME_ID
		{
			get
			{
				return this._WME_ID;
			}
			set
			{
				if ((this._WME_ID != value))
				{
					if (this._BS_WeldMethod.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnWME_IDChanging(value);
					this.SendPropertyChanging();
					this._WME_ID = value;
					this.SendPropertyChanged("WME_ID");
					this.OnWME_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JST_ID", DbType="VarChar(50)")]
		public string JST_ID
		{
			get
			{
				return this._JST_ID;
			}
			set
			{
				if ((this._JST_ID != value))
				{
					if (this._BS_SlopeType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnJST_IDChanging(value);
					this.SendPropertyChanging();
					this._JST_ID = value;
					this.SendPropertyChanged("JST_ID");
					this.OnJST_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JOT_BelongPipe", DbType="VarChar(50)")]
		public string JOT_BelongPipe
		{
			get
			{
				return this._JOT_BelongPipe;
			}
			set
			{
				if ((this._JOT_BelongPipe != value))
				{
					this.OnJOT_BelongPipeChanging(value);
					this.SendPropertyChanging();
					this._JOT_BelongPipe = value;
					this.SendPropertyChanged("JOT_BelongPipe");
					this.OnJOT_BelongPipeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JOT_CheckResult", DbType="VarChar(40)")]
		public string JOT_CheckResult
		{
			get
			{
				return this._JOT_CheckResult;
			}
			set
			{
				if ((this._JOT_CheckResult != value))
				{
					this.OnJOT_CheckResultChanging(value);
					this.SendPropertyChanging();
					this._JOT_CheckResult = value;
					this.SendPropertyChanged("JOT_CheckResult");
					this.OnJOT_CheckResultChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JOT_Electricity", DbType="VarChar(40)")]
		public string JOT_Electricity
		{
			get
			{
				return this._JOT_Electricity;
			}
			set
			{
				if ((this._JOT_Electricity != value))
				{
					this.OnJOT_ElectricityChanging(value);
					this.SendPropertyChanging();
					this._JOT_Electricity = value;
					this.SendPropertyChanged("JOT_Electricity");
					this.OnJOT_ElectricityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JOT_Voltage", DbType="VarChar(40)")]
		public string JOT_Voltage
		{
			get
			{
				return this._JOT_Voltage;
			}
			set
			{
				if ((this._JOT_Voltage != value))
				{
					this.OnJOT_VoltageChanging(value);
					this.SendPropertyChanging();
					this._JOT_Voltage = value;
					this.SendPropertyChanged("JOT_Voltage");
					this.OnJOT_VoltageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IS_Proess", DbType="Char(1)")]
		public string IS_Proess
		{
			get
			{
				return this._IS_Proess;
			}
			set
			{
				if ((this._IS_Proess != value))
				{
					this.OnIS_ProessChanging(value);
					this.SendPropertyChanging();
					this._IS_Proess = value;
					this.SendPropertyChanged("IS_Proess");
					this.OnIS_ProessChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JOT_ProessDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> JOT_ProessDate
		{
			get
			{
				return this._JOT_ProessDate;
			}
			set
			{
				if ((this._JOT_ProessDate != value))
				{
					this.OnJOT_ProessDateChanging(value);
					this.SendPropertyChanging();
					this._JOT_ProessDate = value;
					this.SendPropertyChanged("JOT_ProessDate");
					this.OnJOT_ProessDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JOT_HotRpt", DbType="VarChar(40)")]
		public string JOT_HotRpt
		{
			get
			{
				return this._JOT_HotRpt;
			}
			set
			{
				if ((this._JOT_HotRpt != value))
				{
					this.OnJOT_HotRptChanging(value);
					this.SendPropertyChanging();
					this._JOT_HotRpt = value;
					this.SendPropertyChanged("JOT_HotRpt");
					this.OnJOT_HotRptChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JOT_PrepareTemp", DbType="Decimal(18,4)")]
		public System.Nullable<decimal> JOT_PrepareTemp
		{
			get
			{
				return this._JOT_PrepareTemp;
			}
			set
			{
				if ((this._JOT_PrepareTemp != value))
				{
					this.OnJOT_PrepareTempChanging(value);
					this.SendPropertyChanging();
					this._JOT_PrepareTemp = value;
					this.SendPropertyChanged("JOT_PrepareTemp");
					this.OnJOT_PrepareTempChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JOT_CellTemp", DbType="Decimal(18,4)")]
		public System.Nullable<decimal> JOT_CellTemp
		{
			get
			{
				return this._JOT_CellTemp;
			}
			set
			{
				if ((this._JOT_CellTemp != value))
				{
					this.OnJOT_CellTempChanging(value);
					this.SendPropertyChanging();
					this._JOT_CellTemp = value;
					this.SendPropertyChanged("JOT_CellTemp");
					this.OnJOT_CellTempChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JOT_LastTemp", DbType="Decimal(18,4)")]
		public System.Nullable<decimal> JOT_LastTemp
		{
			get
			{
				return this._JOT_LastTemp;
			}
			set
			{
				if ((this._JOT_LastTemp != value))
				{
					this.OnJOT_LastTempChanging(value);
					this.SendPropertyChanging();
					this._JOT_LastTemp = value;
					this.SendPropertyChanged("JOT_LastTemp");
					this.OnJOT_LastTempChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JOT_JointAttribute", DbType="VarChar(20)")]
		public string JOT_JointAttribute
		{
			get
			{
				return this._JOT_JointAttribute;
			}
			set
			{
				if ((this._JOT_JointAttribute != value))
				{
					this.OnJOT_JointAttributeChanging(value);
					this.SendPropertyChanging();
					this._JOT_JointAttribute = value;
					this.SendPropertyChanged("JOT_JointAttribute");
					this.OnJOT_JointAttributeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JOT_CellWeldRules", DbType="VarChar(50)")]
		public string JOT_CellWeldRules
		{
			get
			{
				return this._JOT_CellWeldRules;
			}
			set
			{
				if ((this._JOT_CellWeldRules != value))
				{
					this.OnJOT_CellWeldRulesChanging(value);
					this.SendPropertyChanging();
					this._JOT_CellWeldRules = value;
					this.SendPropertyChanged("JOT_CellWeldRules");
					this.OnJOT_CellWeldRulesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JOT_FloorWeldRules", DbType="VarChar(50)")]
		public string JOT_FloorWeldRules
		{
			get
			{
				return this._JOT_FloorWeldRules;
			}
			set
			{
				if ((this._JOT_FloorWeldRules != value))
				{
					this.OnJOT_FloorWeldRulesChanging(value);
					this.SendPropertyChanging();
					this._JOT_FloorWeldRules = value;
					this.SendPropertyChanged("JOT_FloorWeldRules");
					this.OnJOT_FloorWeldRulesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Fix1_FloorWeld", DbType="NVarChar(50)")]
		public string Fix1_FloorWeld
		{
			get
			{
				return this._Fix1_FloorWeld;
			}
			set
			{
				if ((this._Fix1_FloorWeld != value))
				{
					if (this._Fix1_FloorWeldBS_Welder.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFix1_FloorWeldChanging(value);
					this.SendPropertyChanging();
					this._Fix1_FloorWeld = value;
					this.SendPropertyChanged("Fix1_FloorWeld");
					this.OnFix1_FloorWeldChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Fix1_CellWelder", DbType="NVarChar(50)")]
		public string Fix1_CellWelder
		{
			get
			{
				return this._Fix1_CellWelder;
			}
			set
			{
				if ((this._Fix1_CellWelder != value))
				{
					if (this._Fix1_CellWelderBS_Welder.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFix1_CellWelderChanging(value);
					this.SendPropertyChanging();
					this._Fix1_CellWelder = value;
					this.SendPropertyChanged("Fix1_CellWelder");
					this.OnFix1_CellWelderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Fix2_FloorWeld", DbType="NVarChar(50)")]
		public string Fix2_FloorWeld
		{
			get
			{
				return this._Fix2_FloorWeld;
			}
			set
			{
				if ((this._Fix2_FloorWeld != value))
				{
					if (this._Fix2_FloorWeldBS_Welder.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFix2_FloorWeldChanging(value);
					this.SendPropertyChanging();
					this._Fix2_FloorWeld = value;
					this.SendPropertyChanged("Fix2_FloorWeld");
					this.OnFix2_FloorWeldChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Fix2_CellWelder", DbType="NVarChar(50)")]
		public string Fix2_CellWelder
		{
			get
			{
				return this._Fix2_CellWelder;
			}
			set
			{
				if ((this._Fix2_CellWelder != value))
				{
					if (this._Fix2_CellWelderBS_Welder.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFix2_CellWelderChanging(value);
					this.SendPropertyChanging();
					this._Fix2_CellWelder = value;
					this.SendPropertyChanged("Fix2_CellWelder");
					this.OnFix2_CellWelderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JOT_Location", DbType="NVarChar(50)")]
		public string JOT_Location
		{
			get
			{
				return this._JOT_Location;
			}
			set
			{
				if ((this._JOT_Location != value))
				{
					this.OnJOT_LocationChanging(value);
					this.SendPropertyChanging();
					this._JOT_Location = value;
					this.SendPropertyChanged("JOT_Location");
					this.OnJOT_LocationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PW_PointID", DbType="VarChar(50)")]
		public string PW_PointID
		{
			get
			{
				return this._PW_PointID;
			}
			set
			{
				if ((this._PW_PointID != value))
				{
					if (this._BO_Point.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPW_PointIDChanging(value);
					this.SendPropertyChanging();
					this._PW_PointID = value;
					this.SendPropertyChanged("PW_PointID");
					this.OnPW_PointIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NDT_ID", DbType="VarChar(50)")]
		public string NDT_ID
		{
			get
			{
				return this._NDT_ID;
			}
			set
			{
				if ((this._NDT_ID != value))
				{
					if (this._BS_NDTType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnNDT_IDChanging(value);
					this.SendPropertyChanging();
					this._NDT_ID = value;
					this.SendPropertyChanged("NDT_ID");
					this.OnNDT_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NDTT_ID", DbType="VarChar(50)")]
		public string NDTT_ID
		{
			get
			{
				return this._NDTT_ID;
			}
			set
			{
				if ((this._NDTT_ID != value))
				{
					if (this._BO_NDTTrust.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnNDTT_IDChanging(value);
					this.SendPropertyChanging();
					this._NDTT_ID = value;
					this.SendPropertyChanged("NDTT_ID");
					this.OnNDTT_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CH_RepairID1", DbType="VarChar(50)")]
		public string CH_RepairID1
		{
			get
			{
				return this._CH_RepairID1;
			}
			set
			{
				if ((this._CH_RepairID1 != value))
				{
					if (this._CH_Repair.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCH_RepairID1Changing(value);
					this.SendPropertyChanging();
					this._CH_RepairID1 = value;
					this.SendPropertyChanged("CH_RepairID1");
					this.OnCH_RepairID1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CH_RepairID2", DbType="VarChar(50)")]
		public string CH_RepairID2
		{
			get
			{
				return this._CH_RepairID2;
			}
			set
			{
				if ((this._CH_RepairID2 != value))
				{
					if (this._CH_RepairID2CH_Repair.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCH_RepairID2Changing(value);
					this.SendPropertyChanging();
					this._CH_RepairID2 = value;
					this.SendPropertyChanged("CH_RepairID2");
					this.OnCH_RepairID2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Fix1_date", DbType="DateTime")]
		public System.Nullable<System.DateTime> Fix1_date
		{
			get
			{
				return this._Fix1_date;
			}
			set
			{
				if ((this._Fix1_date != value))
				{
					this.OnFix1_dateChanging(value);
					this.SendPropertyChanging();
					this._Fix1_date = value;
					this.SendPropertyChanged("Fix1_date");
					this.OnFix1_dateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Fix2_date", DbType="DateTime")]
		public System.Nullable<System.DateTime> Fix2_date
		{
			get
			{
				return this._Fix2_date;
			}
			set
			{
				if ((this._Fix2_date != value))
				{
					this.OnFix2_dateChanging(value);
					this.SendPropertyChanging();
					this._Fix2_date = value;
					this.SendPropertyChanged("Fix2_date");
					this.OnFix2_dateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JOT_Remark", DbType="VarChar(100)")]
		public string JOT_Remark
		{
			get
			{
				return this._JOT_Remark;
			}
			set
			{
				if ((this._JOT_Remark != value))
				{
					this.OnJOT_RemarkChanging(value);
					this.SendPropertyChanging();
					this._JOT_Remark = value;
					this.SendPropertyChanged("JOT_Remark");
					this.OnJOT_RemarkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WeldingProcedureJotId", DbType="NVarChar(50)")]
		public string WeldingProcedureJotId
		{
			get
			{
				return this._WeldingProcedureJotId;
			}
			set
			{
				if ((this._WeldingProcedureJotId != value))
				{
					this.OnWeldingProcedureJotIdChanging(value);
					this.SendPropertyChanging();
					this._WeldingProcedureJotId = value;
					this.SendPropertyChanged("WeldingProcedureJotId");
					this.OnWeldingProcedureJotIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OldJointNo", DbType="NVarChar(50)")]
		public string OldJointNo
		{
			get
			{
				return this._OldJointNo;
			}
			set
			{
				if ((this._OldJointNo != value))
				{
					this.OnOldJointNoChanging(value);
					this.SendPropertyChanging();
					this._OldJointNo = value;
					this.SendPropertyChanged("OldJointNo");
					this.OnOldJointNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_CH_CHECK_REFERENCE_PW_JOINT", Storage="_CH_CheckItem", ThisKey="JOT_ID", OtherKey="JOT_ID", DeleteRule="NO ACTION")]
		public EntitySet<CH_CheckItem> CH_CheckItem
		{
			get
			{
				return this._CH_CheckItem;
			}
			set
			{
				this._CH_CheckItem.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_HotProessItem_PW_JointInfo", Storage="_HotProessItem", ThisKey="JOT_ID", OtherKey="JOT_ID", DeleteRule="NO ACTION")]
		public EntitySet<HotProessItem> HotProessItem
		{
			get
			{
				return this._HotProessItem;
			}
			set
			{
				this._HotProessItem.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_PW_JointInfo_Base_Project", Storage="_Base_Project", ThisKey="ProjectId", OtherKey="ProjectId", IsForeignKey=true)]
		public Base_Project Base_Project
		{
			get
			{
				return this._Base_Project.Entity;
			}
			set
			{
				Base_Project previousValue = this._Base_Project.Entity;
				if (((previousValue != value) 
							|| (this._Base_Project.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Base_Project.Entity = null;
						previousValue.PW_JointInfo.Remove(this);
					}
					this._Base_Project.Entity = value;
					if ((value != null))
					{
						value.PW_JointInfo.Add(this);
						this._ProjectId = value.ProjectId;
					}
					else
					{
						this._ProjectId = default(string);
					}
					this.SendPropertyChanged("Base_Project");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_PW_JointInfo_BO_NDTTrust", Storage="_BO_NDTTrust", ThisKey="NDTT_ID", OtherKey="NDTT_ID", IsForeignKey=true)]
		public BO_NDTTrust BO_NDTTrust
		{
			get
			{
				return this._BO_NDTTrust.Entity;
			}
			set
			{
				BO_NDTTrust previousValue = this._BO_NDTTrust.Entity;
				if (((previousValue != value) 
							|| (this._BO_NDTTrust.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._BO_NDTTrust.Entity = null;
						previousValue.PW_JointInfo.Remove(this);
					}
					this._BO_NDTTrust.Entity = value;
					if ((value != null))
					{
						value.PW_JointInfo.Add(this);
						this._NDTT_ID = value.NDTT_ID;
					}
					else
					{
						this._NDTT_ID = default(string);
					}
					this.SendPropertyChanged("BO_NDTTrust");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_PW_JointInfo_BO_Point", Storage="_BO_Point", ThisKey="PW_PointID", OtherKey="PW_PointID", IsForeignKey=true)]
		public BO_Point BO_Point
		{
			get
			{
				return this._BO_Point.Entity;
			}
			set
			{
				BO_Point previousValue = this._BO_Point.Entity;
				if (((previousValue != value) 
							|| (this._BO_Point.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._BO_Point.Entity = null;
						previousValue.PW_JointInfo.Remove(this);
					}
					this._BO_Point.Entity = value;
					if ((value != null))
					{
						value.PW_JointInfo.Add(this);
						this._PW_PointID = value.PW_PointID;
					}
					else
					{
						this._PW_PointID = default(string);
					}
					this.SendPropertyChanged("BO_Point");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_PW_JointInfo_BO_WeldReportMain", Storage="_BO_WeldReportMain", ThisKey="DReportID", OtherKey="DReportID", IsForeignKey=true)]
		public BO_WeldReportMain BO_WeldReportMain
		{
			get
			{
				return this._BO_WeldReportMain.Entity;
			}
			set
			{
				BO_WeldReportMain previousValue = this._BO_WeldReportMain.Entity;
				if (((previousValue != value) 
							|| (this._BO_WeldReportMain.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._BO_WeldReportMain.Entity = null;
						previousValue.PW_JointInfo.Remove(this);
					}
					this._BO_WeldReportMain.Entity = value;
					if ((value != null))
					{
						value.PW_JointInfo.Add(this);
						this._DReportID = value.DReportID;
					}
					else
					{
						this._DReportID = default(string);
					}
					this.SendPropertyChanged("BO_WeldReportMain");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_PW_JointInfo_BS_Component", Storage="_BS_Component", ThisKey="JOT_Component1", OtherKey="COM_ID", IsForeignKey=true)]
		public BS_Component BS_Component
		{
			get
			{
				return this._BS_Component.Entity;
			}
			set
			{
				BS_Component previousValue = this._BS_Component.Entity;
				if (((previousValue != value) 
							|| (this._BS_Component.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._BS_Component.Entity = null;
						previousValue.PW_JointInfo.Remove(this);
					}
					this._BS_Component.Entity = value;
					if ((value != null))
					{
						value.PW_JointInfo.Add(this);
						this._JOT_Component1 = value.COM_ID;
					}
					else
					{
						this._JOT_Component1 = default(string);
					}
					this.SendPropertyChanged("BS_Component");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_PW_JointInfo_BS_Component1", Storage="_JOT_Component2BS_Component", ThisKey="JOT_Component2", OtherKey="COM_ID", IsForeignKey=true)]
		public BS_Component JOT_Component2BS_Component
		{
			get
			{
				return this._JOT_Component2BS_Component.Entity;
			}
			set
			{
				BS_Component previousValue = this._JOT_Component2BS_Component.Entity;
				if (((previousValue != value) 
							|| (this._JOT_Component2BS_Component.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._JOT_Component2BS_Component.Entity = null;
						previousValue.COM_.Remove(this);
					}
					this._JOT_Component2BS_Component.Entity = value;
					if ((value != null))
					{
						value.COM_.Add(this);
						this._JOT_Component2 = value.COM_ID;
					}
					else
					{
						this._JOT_Component2 = default(string);
					}
					this.SendPropertyChanged("JOT_Component2BS_Component");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_PW_JointInfo_BS_JointType", Storage="_BS_JointType", ThisKey="JOTY_ID", OtherKey="JOTY_ID", IsForeignKey=true)]
		public BS_JointType BS_JointType
		{
			get
			{
				return this._BS_JointType.Entity;
			}
			set
			{
				BS_JointType previousValue = this._BS_JointType.Entity;
				if (((previousValue != value) 
							|| (this._BS_JointType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._BS_JointType.Entity = null;
						previousValue.PW_JointInfo.Remove(this);
					}
					this._BS_JointType.Entity = value;
					if ((value != null))
					{
						value.PW_JointInfo.Add(this);
						this._JOTY_ID = value.JOTY_ID;
					}
					else
					{
						this._JOTY_ID = default(string);
					}
					this.SendPropertyChanged("BS_JointType");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_PW_JointInfo_BS_NDTType", Storage="_BS_NDTType", ThisKey="NDT_ID", OtherKey="NDT_ID", IsForeignKey=true)]
		public BS_NDTType BS_NDTType
		{
			get
			{
				return this._BS_NDTType.Entity;
			}
			set
			{
				BS_NDTType previousValue = this._BS_NDTType.Entity;
				if (((previousValue != value) 
							|| (this._BS_NDTType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._BS_NDTType.Entity = null;
						previousValue.PW_JointInfo.Remove(this);
					}
					this._BS_NDTType.Entity = value;
					if ((value != null))
					{
						value.PW_JointInfo.Add(this);
						this._NDT_ID = value.NDT_ID;
					}
					else
					{
						this._NDT_ID = default(string);
					}
					this.SendPropertyChanged("BS_NDTType");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_PW_JointInfo_BS_SlopeType", Storage="_BS_SlopeType", ThisKey="JST_ID", OtherKey="JST_ID", IsForeignKey=true)]
		public BS_SlopeType BS_SlopeType
		{
			get
			{
				return this._BS_SlopeType.Entity;
			}
			set
			{
				BS_SlopeType previousValue = this._BS_SlopeType.Entity;
				if (((previousValue != value) 
							|| (this._BS_SlopeType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._BS_SlopeType.Entity = null;
						previousValue.PW_JointInfo.Remove(this);
					}
					this._BS_SlopeType.Entity = value;
					if ((value != null))
					{
						value.PW_JointInfo.Add(this);
						this._JST_ID = value.JST_ID;
					}
					else
					{
						this._JST_ID = default(string);
					}
					this.SendPropertyChanged("BS_SlopeType");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_PW_JointInfo_BS_Steel", Storage="_BS_Steel", ThisKey="STE_ID", OtherKey="STE_ID", IsForeignKey=true)]
		public BS_Steel BS_Steel
		{
			get
			{
				return this._BS_Steel.Entity;
			}
			set
			{
				BS_Steel previousValue = this._BS_Steel.Entity;
				if (((previousValue != value) 
							|| (this._BS_Steel.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._BS_Steel.Entity = null;
						previousValue.PW_JointInfo.Remove(this);
					}
					this._BS_Steel.Entity = value;
					if ((value != null))
					{
						value.PW_JointInfo.Add(this);
						this._STE_ID = value.STE_ID;
					}
					else
					{
						this._STE_ID = default(string);
					}
					this.SendPropertyChanged("BS_Steel");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_PW_JointInfo_BS_Steel1", Storage="_STE_ID2BS_Steel", ThisKey="STE_ID2", OtherKey="STE_ID", IsForeignKey=true)]
		public BS_Steel STE_ID2BS_Steel
		{
			get
			{
				return this._STE_ID2BS_Steel.Entity;
			}
			set
			{
				BS_Steel previousValue = this._STE_ID2BS_Steel.Entity;
				if (((previousValue != value) 
							|| (this._STE_ID2BS_Steel.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._STE_ID2BS_Steel.Entity = null;
						previousValue.STE_.Remove(this);
					}
					this._STE_ID2BS_Steel.Entity = value;
					if ((value != null))
					{
						value.STE_.Add(this);
						this._STE_ID2 = value.STE_ID;
					}
					else
					{
						this._STE_ID2 = default(string);
					}
					this.SendPropertyChanged("STE_ID2BS_Steel");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_PW_JointInfo_BS_Welder", Storage="_BS_Welder", ThisKey="JOT_CellWelder", OtherKey="WED_ID", IsForeignKey=true)]
		public BS_Welder BS_Welder
		{
			get
			{
				return this._BS_Welder.Entity;
			}
			set
			{
				BS_Welder previousValue = this._BS_Welder.Entity;
				if (((previousValue != value) 
							|| (this._BS_Welder.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._BS_Welder.Entity = null;
						previousValue.PW_JointInfo.Remove(this);
					}
					this._BS_Welder.Entity = value;
					if ((value != null))
					{
						value.PW_JointInfo.Add(this);
						this._JOT_CellWelder = value.WED_ID;
					}
					else
					{
						this._JOT_CellWelder = default(string);
					}
					this.SendPropertyChanged("BS_Welder");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_PW_JointInfo_BS_Welder1", Storage="_JOT_FloorWelderBS_Welder", ThisKey="JOT_FloorWelder", OtherKey="WED_ID", IsForeignKey=true)]
		public BS_Welder JOT_FloorWelderBS_Welder
		{
			get
			{
				return this._JOT_FloorWelderBS_Welder.Entity;
			}
			set
			{
				BS_Welder previousValue = this._JOT_FloorWelderBS_Welder.Entity;
				if (((previousValue != value) 
							|| (this._JOT_FloorWelderBS_Welder.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._JOT_FloorWelderBS_Welder.Entity = null;
						previousValue.PW_JointInfo_BS_Welder1.Remove(this);
					}
					this._JOT_FloorWelderBS_Welder.Entity = value;
					if ((value != null))
					{
						value.PW_JointInfo_BS_Welder1.Add(this);
						this._JOT_FloorWelder = value.WED_ID;
					}
					else
					{
						this._JOT_FloorWelder = default(string);
					}
					this.SendPropertyChanged("JOT_FloorWelderBS_Welder");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_PW_JointInfo_BS_Welder2", Storage="_Fix1_FloorWeldBS_Welder", ThisKey="Fix1_FloorWeld", OtherKey="WED_ID", IsForeignKey=true)]
		public BS_Welder Fix1_FloorWeldBS_Welder
		{
			get
			{
				return this._Fix1_FloorWeldBS_Welder.Entity;
			}
			set
			{
				BS_Welder previousValue = this._Fix1_FloorWeldBS_Welder.Entity;
				if (((previousValue != value) 
							|| (this._Fix1_FloorWeldBS_Welder.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Fix1_FloorWeldBS_Welder.Entity = null;
						previousValue.PW_JointInfo_BS_Welder2.Remove(this);
					}
					this._Fix1_FloorWeldBS_Welder.Entity = value;
					if ((value != null))
					{
						value.PW_JointInfo_BS_Welder2.Add(this);
						this._Fix1_FloorWeld = value.WED_ID;
					}
					else
					{
						this._Fix1_FloorWeld = default(string);
					}
					this.SendPropertyChanged("Fix1_FloorWeldBS_Welder");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_PW_JointInfo_BS_Welder3", Storage="_Fix2_FloorWeldBS_Welder", ThisKey="Fix2_FloorWeld", OtherKey="WED_ID", IsForeignKey=true)]
		public BS_Welder Fix2_FloorWeldBS_Welder
		{
			get
			{
				return this._Fix2_FloorWeldBS_Welder.Entity;
			}
			set
			{
				BS_Welder previousValue = this._Fix2_FloorWeldBS_Welder.Entity;
				if (((previousValue != value) 
							|| (this._Fix2_FloorWeldBS_Welder.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Fix2_FloorWeldBS_Welder.Entity = null;
						previousValue.PW_JointInfo_BS_Welder3.Remove(this);
					}
					this._Fix2_FloorWeldBS_Welder.Entity = value;
					if ((value != null))
					{
						value.PW_JointInfo_BS_Welder3.Add(this);
						this._Fix2_FloorWeld = value.WED_ID;
					}
					else
					{
						this._Fix2_FloorWeld = default(string);
					}
					this.SendPropertyChanged("Fix2_FloorWeldBS_Welder");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_PW_JointInfo_BS_Welder4", Storage="_Fix2_CellWelderBS_Welder", ThisKey="Fix2_CellWelder", OtherKey="WED_ID", IsForeignKey=true)]
		public BS_Welder Fix2_CellWelderBS_Welder
		{
			get
			{
				return this._Fix2_CellWelderBS_Welder.Entity;
			}
			set
			{
				BS_Welder previousValue = this._Fix2_CellWelderBS_Welder.Entity;
				if (((previousValue != value) 
							|| (this._Fix2_CellWelderBS_Welder.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Fix2_CellWelderBS_Welder.Entity = null;
						previousValue.PW_JointInfo_BS_Welder4.Remove(this);
					}
					this._Fix2_CellWelderBS_Welder.Entity = value;
					if ((value != null))
					{
						value.PW_JointInfo_BS_Welder4.Add(this);
						this._Fix2_CellWelder = value.WED_ID;
					}
					else
					{
						this._Fix2_CellWelder = default(string);
					}
					this.SendPropertyChanged("Fix2_CellWelderBS_Welder");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_PW_JointInfo_BS_Welder5", Storage="_Fix1_CellWelderBS_Welder", ThisKey="Fix1_CellWelder", OtherKey="WED_ID", IsForeignKey=true)]
		public BS_Welder Fix1_CellWelderBS_Welder
		{
			get
			{
				return this._Fix1_CellWelderBS_Welder.Entity;
			}
			set
			{
				BS_Welder previousValue = this._Fix1_CellWelderBS_Welder.Entity;
				if (((previousValue != value) 
							|| (this._Fix1_CellWelderBS_Welder.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Fix1_CellWelderBS_Welder.Entity = null;
						previousValue.PW_JointInfo_BS_Welder5.Remove(this);
					}
					this._Fix1_CellWelderBS_Welder.Entity = value;
					if ((value != null))
					{
						value.PW_JointInfo_BS_Welder5.Add(this);
						this._Fix1_CellWelder = value.WED_ID;
					}
					else
					{
						this._Fix1_CellWelder = default(string);
					}
					this.SendPropertyChanged("Fix1_CellWelderBS_Welder");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_PW_JointInfo_BS_WeldMaterial", Storage="_BS_WeldMaterial", ThisKey="JOT_WeldMat", OtherKey="WMT_ID", IsForeignKey=true)]
		public BS_WeldMaterial BS_WeldMaterial
		{
			get
			{
				return this._BS_WeldMaterial.Entity;
			}
			set
			{
				BS_WeldMaterial previousValue = this._BS_WeldMaterial.Entity;
				if (((previousValue != value) 
							|| (this._BS_WeldMaterial.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._BS_WeldMaterial.Entity = null;
						previousValue.PW_JointInfo.Remove(this);
					}
					this._BS_WeldMaterial.Entity = value;
					if ((value != null))
					{
						value.PW_JointInfo.Add(this);
						this._JOT_WeldMat = value.WMT_ID;
					}
					else
					{
						this._JOT_WeldMat = default(string);
					}
					this.SendPropertyChanged("BS_WeldMaterial");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_PW_JointInfo_BS_WeldMaterial1", Storage="_JOT_WeldSilkBS_WeldMaterial", ThisKey="JOT_WeldSilk", OtherKey="WMT_ID", IsForeignKey=true)]
		public BS_WeldMaterial JOT_WeldSilkBS_WeldMaterial
		{
			get
			{
				return this._JOT_WeldSilkBS_WeldMaterial.Entity;
			}
			set
			{
				BS_WeldMaterial previousValue = this._JOT_WeldSilkBS_WeldMaterial.Entity;
				if (((previousValue != value) 
							|| (this._JOT_WeldSilkBS_WeldMaterial.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._JOT_WeldSilkBS_WeldMaterial.Entity = null;
						previousValue.WMT_.Remove(this);
					}
					this._JOT_WeldSilkBS_WeldMaterial.Entity = value;
					if ((value != null))
					{
						value.WMT_.Add(this);
						this._JOT_WeldSilk = value.WMT_ID;
					}
					else
					{
						this._JOT_WeldSilk = default(string);
					}
					this.SendPropertyChanged("JOT_WeldSilkBS_WeldMaterial");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_PW_JointInfo_BS_WeldMethod", Storage="_BS_WeldMethod", ThisKey="WME_ID", OtherKey="WME_ID", IsForeignKey=true)]
		public BS_WeldMethod BS_WeldMethod
		{
			get
			{
				return this._BS_WeldMethod.Entity;
			}
			set
			{
				BS_WeldMethod previousValue = this._BS_WeldMethod.Entity;
				if (((previousValue != value) 
							|| (this._BS_WeldMethod.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._BS_WeldMethod.Entity = null;
						previousValue.PW_JointInfo.Remove(this);
					}
					this._BS_WeldMethod.Entity = value;
					if ((value != null))
					{
						value.PW_JointInfo.Add(this);
						this._WME_ID = value.WME_ID;
					}
					else
					{
						this._WME_ID = default(string);
					}
					this.SendPropertyChanged("BS_WeldMethod");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_PW_JointInfo_CH_Repair", Storage="_CH_Repair", ThisKey="CH_RepairID1", OtherKey="CH_RepairID", IsForeignKey=true)]
		public CH_Repair CH_Repair
		{
			get
			{
				return this._CH_Repair.Entity;
			}
			set
			{
				CH_Repair previousValue = this._CH_Repair.Entity;
				if (((previousValue != value) 
							|| (this._CH_Repair.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CH_Repair.Entity = null;
						previousValue.PW_JointInfo.Remove(this);
					}
					this._CH_Repair.Entity = value;
					if ((value != null))
					{
						value.PW_JointInfo.Add(this);
						this._CH_RepairID1 = value.CH_RepairID;
					}
					else
					{
						this._CH_RepairID1 = default(string);
					}
					this.SendPropertyChanged("CH_Repair");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_PW_JointInfo_CH_Repair1", Storage="_CH_RepairID2CH_Repair", ThisKey="CH_RepairID2", OtherKey="CH_RepairID", IsForeignKey=true)]
		public CH_Repair CH_RepairID2CH_Repair
		{
			get
			{
				return this._CH_RepairID2CH_Repair.Entity;
			}
			set
			{
				CH_Repair previousValue = this._CH_RepairID2CH_Repair.Entity;
				if (((previousValue != value) 
							|| (this._CH_RepairID2CH_Repair.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CH_RepairID2CH_Repair.Entity = null;
						previousValue.PW_JointInfo_CH_Repair1.Remove(this);
					}
					this._CH_RepairID2CH_Repair.Entity = value;
					if ((value != null))
					{
						value.PW_JointInfo_CH_Repair1.Add(this);
						this._CH_RepairID2 = value.CH_RepairID;
					}
					else
					{
						this._CH_RepairID2 = default(string);
					}
					this.SendPropertyChanged("CH_RepairID2CH_Repair");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_PW_JointInfo_HS_Education", Storage="_HS_Education", ThisKey="JOT_FloorGroup", OtherKey="EDU_ID", IsForeignKey=true)]
		public HS_Education HS_Education
		{
			get
			{
				return this._HS_Education.Entity;
			}
			set
			{
				HS_Education previousValue = this._HS_Education.Entity;
				if (((previousValue != value) 
							|| (this._HS_Education.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._HS_Education.Entity = null;
						previousValue.PW_JointInfo.Remove(this);
					}
					this._HS_Education.Entity = value;
					if ((value != null))
					{
						value.PW_JointInfo.Add(this);
						this._JOT_FloorGroup = value.EDU_ID;
					}
					else
					{
						this._JOT_FloorGroup = default(string);
					}
					this.SendPropertyChanged("HS_Education");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_PW_JointInfo_HS_Education1", Storage="_JOT_CellGroupHS_Education", ThisKey="JOT_CellGroup", OtherKey="EDU_ID", IsForeignKey=true)]
		public HS_Education JOT_CellGroupHS_Education
		{
			get
			{
				return this._JOT_CellGroupHS_Education.Entity;
			}
			set
			{
				HS_Education previousValue = this._JOT_CellGroupHS_Education.Entity;
				if (((previousValue != value) 
							|| (this._JOT_CellGroupHS_Education.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._JOT_CellGroupHS_Education.Entity = null;
						previousValue.EDU_.Remove(this);
					}
					this._JOT_CellGroupHS_Education.Entity = value;
					if ((value != null))
					{
						value.EDU_.Add(this);
						this._JOT_CellGroup = value.EDU_ID;
					}
					else
					{
						this._JOT_CellGroup = default(string);
					}
					this.SendPropertyChanged("JOT_CellGroupHS_Education");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_PW_JointInfo_PW_IsoInfo", Storage="_PW_IsoInfo", ThisKey="ISO_ID", OtherKey="ISO_ID", IsForeignKey=true)]
		public PW_IsoInfo PW_IsoInfo
		{
			get
			{
				return this._PW_IsoInfo.Entity;
			}
			set
			{
				PW_IsoInfo previousValue = this._PW_IsoInfo.Entity;
				if (((previousValue != value) 
							|| (this._PW_IsoInfo.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PW_IsoInfo.Entity = null;
						previousValue.PW_JointInfo.Remove(this);
					}
					this._PW_IsoInfo.Entity = value;
					if ((value != null))
					{
						value.PW_JointInfo.Add(this);
						this._ISO_ID = value.ISO_ID;
					}
					else
					{
						this._ISO_ID = default(string);
					}
					this.SendPropertyChanged("PW_IsoInfo");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CH_CheckItem(CH_CheckItem entity)
		{
			this.SendPropertyChanging();
			entity.PW_JointInfo = this;
		}
		
		private void detach_CH_CheckItem(CH_CheckItem entity)
		{
			this.SendPropertyChanging();
			entity.PW_JointInfo = null;
		}
		
		private void attach_HotProessItem(HotProessItem entity)
		{
			this.SendPropertyChanging();
			entity.PW_JointInfo = this;
		}
		
		private void detach_HotProessItem(HotProessItem entity)
		{
			this.SendPropertyChanging();
			entity.PW_JointInfo = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PW_ProcedureImageManage")]
	public partial class PW_ProcedureImageManage : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ImageId;
		
		private string _ImageContent;
		
		private string _AttachUrl;
		
		private string _WME_ID;
		
		private System.Nullable<decimal> _Thickness;
		
		private string _JOTY_ID;
		
		private string _JST_ID;
		
		private EntityRef<BS_JointType> _BS_JointType;
		
		private EntityRef<BS_SlopeType> _BS_SlopeType;
		
		private EntityRef<BS_WeldMethod> _BS_WeldMethod;
		
		private EntitySet<PW_WeldingProcedure> _PW_WeldingProcedure;
		
		private EntitySet<PW_WeldingProcedureJOT> _PW_WeldingProcedureJOT;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnImageIdChanging(string value);
    partial void OnImageIdChanged();
    partial void OnImageContentChanging(string value);
    partial void OnImageContentChanged();
    partial void OnAttachUrlChanging(string value);
    partial void OnAttachUrlChanged();
    partial void OnWME_IDChanging(string value);
    partial void OnWME_IDChanged();
    partial void OnThicknessChanging(System.Nullable<decimal> value);
    partial void OnThicknessChanged();
    partial void OnJOTY_IDChanging(string value);
    partial void OnJOTY_IDChanged();
    partial void OnJST_IDChanging(string value);
    partial void OnJST_IDChanged();
    #endregion
		
		public PW_ProcedureImageManage()
		{
			this._BS_JointType = default(EntityRef<BS_JointType>);
			this._BS_SlopeType = default(EntityRef<BS_SlopeType>);
			this._BS_WeldMethod = default(EntityRef<BS_WeldMethod>);
			this._PW_WeldingProcedure = new EntitySet<PW_WeldingProcedure>(new Action<PW_WeldingProcedure>(this.attach_PW_WeldingProcedure), new Action<PW_WeldingProcedure>(this.detach_PW_WeldingProcedure));
			this._PW_WeldingProcedureJOT = new EntitySet<PW_WeldingProcedureJOT>(new Action<PW_WeldingProcedureJOT>(this.attach_PW_WeldingProcedureJOT), new Action<PW_WeldingProcedureJOT>(this.detach_PW_WeldingProcedureJOT));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ImageId", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ImageId
		{
			get
			{
				return this._ImageId;
			}
			set
			{
				if ((this._ImageId != value))
				{
					this.OnImageIdChanging(value);
					this.SendPropertyChanging();
					this._ImageId = value;
					this.SendPropertyChanged("ImageId");
					this.OnImageIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ImageContent", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string ImageContent
		{
			get
			{
				return this._ImageContent;
			}
			set
			{
				if ((this._ImageContent != value))
				{
					this.OnImageContentChanging(value);
					this.SendPropertyChanging();
					this._ImageContent = value;
					this.SendPropertyChanged("ImageContent");
					this.OnImageContentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AttachUrl", DbType="NVarChar(100)")]
		public string AttachUrl
		{
			get
			{
				return this._AttachUrl;
			}
			set
			{
				if ((this._AttachUrl != value))
				{
					this.OnAttachUrlChanging(value);
					this.SendPropertyChanging();
					this._AttachUrl = value;
					this.SendPropertyChanged("AttachUrl");
					this.OnAttachUrlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WME_ID", DbType="VarChar(50)")]
		public string WME_ID
		{
			get
			{
				return this._WME_ID;
			}
			set
			{
				if ((this._WME_ID != value))
				{
					if (this._BS_WeldMethod.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnWME_IDChanging(value);
					this.SendPropertyChanging();
					this._WME_ID = value;
					this.SendPropertyChanged("WME_ID");
					this.OnWME_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Thickness", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> Thickness
		{
			get
			{
				return this._Thickness;
			}
			set
			{
				if ((this._Thickness != value))
				{
					this.OnThicknessChanging(value);
					this.SendPropertyChanging();
					this._Thickness = value;
					this.SendPropertyChanged("Thickness");
					this.OnThicknessChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JOTY_ID", DbType="VarChar(50)")]
		public string JOTY_ID
		{
			get
			{
				return this._JOTY_ID;
			}
			set
			{
				if ((this._JOTY_ID != value))
				{
					if (this._BS_JointType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnJOTY_IDChanging(value);
					this.SendPropertyChanging();
					this._JOTY_ID = value;
					this.SendPropertyChanged("JOTY_ID");
					this.OnJOTY_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JST_ID", DbType="VarChar(50)")]
		public string JST_ID
		{
			get
			{
				return this._JST_ID;
			}
			set
			{
				if ((this._JST_ID != value))
				{
					if (this._BS_SlopeType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnJST_IDChanging(value);
					this.SendPropertyChanging();
					this._JST_ID = value;
					this.SendPropertyChanged("JST_ID");
					this.OnJST_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_PW_ProcedureImageManage_BS_JointType", Storage="_BS_JointType", ThisKey="JOTY_ID", OtherKey="JOTY_ID", IsForeignKey=true)]
		public BS_JointType BS_JointType
		{
			get
			{
				return this._BS_JointType.Entity;
			}
			set
			{
				BS_JointType previousValue = this._BS_JointType.Entity;
				if (((previousValue != value) 
							|| (this._BS_JointType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._BS_JointType.Entity = null;
						previousValue.PW_ProcedureImageManage.Remove(this);
					}
					this._BS_JointType.Entity = value;
					if ((value != null))
					{
						value.PW_ProcedureImageManage.Add(this);
						this._JOTY_ID = value.JOTY_ID;
					}
					else
					{
						this._JOTY_ID = default(string);
					}
					this.SendPropertyChanged("BS_JointType");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_PW_ProcedureImageManage_BS_SlopeType", Storage="_BS_SlopeType", ThisKey="JST_ID", OtherKey="JST_ID", IsForeignKey=true)]
		public BS_SlopeType BS_SlopeType
		{
			get
			{
				return this._BS_SlopeType.Entity;
			}
			set
			{
				BS_SlopeType previousValue = this._BS_SlopeType.Entity;
				if (((previousValue != value) 
							|| (this._BS_SlopeType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._BS_SlopeType.Entity = null;
						previousValue.PW_ProcedureImageManage.Remove(this);
					}
					this._BS_SlopeType.Entity = value;
					if ((value != null))
					{
						value.PW_ProcedureImageManage.Add(this);
						this._JST_ID = value.JST_ID;
					}
					else
					{
						this._JST_ID = default(string);
					}
					this.SendPropertyChanged("BS_SlopeType");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_PW_ProcedureImageManage_BS_WeldMethod", Storage="_BS_WeldMethod", ThisKey="WME_ID", OtherKey="WME_ID", IsForeignKey=true)]
		public BS_WeldMethod BS_WeldMethod
		{
			get
			{
				return this._BS_WeldMethod.Entity;
			}
			set
			{
				BS_WeldMethod previousValue = this._BS_WeldMethod.Entity;
				if (((previousValue != value) 
							|| (this._BS_WeldMethod.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._BS_WeldMethod.Entity = null;
						previousValue.PW_ProcedureImageManage.Remove(this);
					}
					this._BS_WeldMethod.Entity = value;
					if ((value != null))
					{
						value.PW_ProcedureImageManage.Add(this);
						this._WME_ID = value.WME_ID;
					}
					else
					{
						this._WME_ID = default(string);
					}
					this.SendPropertyChanged("BS_WeldMethod");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_PW_WeldingProcedure_PW_ProcedureImageManage", Storage="_PW_WeldingProcedure", ThisKey="ImageId", OtherKey="ImageId", DeleteRule="NO ACTION")]
		public EntitySet<PW_WeldingProcedure> PW_WeldingProcedure
		{
			get
			{
				return this._PW_WeldingProcedure;
			}
			set
			{
				this._PW_WeldingProcedure.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_PW_WeldingProcedureJOT_PW_ProcedureImageManage", Storage="_PW_WeldingProcedureJOT", ThisKey="ImageId", OtherKey="ImageId", DeleteRule="NO ACTION")]
		public EntitySet<PW_WeldingProcedureJOT> PW_WeldingProcedureJOT
		{
			get
			{
				return this._PW_WeldingProcedureJOT;
			}
			set
			{
				this._PW_WeldingProcedureJOT.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_PW_WeldingProcedure(PW_WeldingProcedure entity)
		{
			this.SendPropertyChanging();
			entity.PW_ProcedureImageManage = this;
		}
		
		private void detach_PW_WeldingProcedure(PW_WeldingProcedure entity)
		{
			this.SendPropertyChanging();
			entity.PW_ProcedureImageManage = null;
		}
		
		private void attach_PW_WeldingProcedureJOT(PW_WeldingProcedureJOT entity)
		{
			this.SendPropertyChanging();
			entity.PW_ProcedureImageManage = this;
		}
		
		private void detach_PW_WeldingProcedureJOT(PW_WeldingProcedureJOT entity)
		{
			this.SendPropertyChanging();
			entity.PW_ProcedureImageManage = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PW_WeldingProcedure")]
	public partial class PW_WeldingProcedure : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _WeldingProcedureId;
		
		private string _WeldPositionCode;
		
		private string _WType;
		
		private string _Material;
		
		private string _Specification;
		
		private string _Welding;
		
		private string _WRange;
		
		private string _Remark;
		
		private System.Nullable<bool> _IsAdd;
		
		private string _MaterialGroup;
		
		private string _JointsForm;
		
		private string _TubeDiameter;
		
		private System.Nullable<decimal> _SpecimenThickness;
		
		private string _WeldMethod;
		
		private string _WeldPreheating;
		
		private string _PWHT;
		
		private string _STE_ID;
		
		private string _WeldingProcedureCode;
		
		private System.Nullable<System.DateTime> _ProcedureDate;
		
		private string _WeldedJoints;
		
		private string _GrooveForm;
		
		private string _MaterialCode;
		
		private string _ThicknessRange;
		
		private string _MaterialStandard;
		
		private string _MaterialType;
		
		private string _MaterialModel;
		
		private string _MaterialSpecification;
		
		private string _WeldingPosition;
		
		private string _HotTemperatures;
		
		private System.Nullable<System.DateTime> _HoldingTime;
		
		private string _PreheatingTemperature;
		
		private string _HeatingMode;
		
		private string _GasComponent;
		
		private string _GasFlow;
		
		private string _PolarDiameter;
		
		private string _NozzleDiameter;
		
		private string _WeldLayer;
		
		private string _WeldMethod1;
		
		private string _CardNum;
		
		private string _Diameter;
		
		private string _Polarity;
		
		private string _ElectricCurrent;
		
		private string _Voltage;
		
		private string _Speed;
		
		private string _LineCapacity;
		
		private string _TestingRT;
		
		private string _TestingPT;
		
		private string _TestingMT;
		
		private string _TestingUT;
		
		private string _TestingOther;
		
		private string _TechnicalMeasures;
		
		private string _Description;
		
		private string _ImageId;
		
		private EntityRef<BS_Steel> _BS_Steel;
		
		private EntityRef<PW_ProcedureImageManage> _PW_ProcedureImageManage;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnWeldingProcedureIdChanging(string value);
    partial void OnWeldingProcedureIdChanged();
    partial void OnWeldPositionCodeChanging(string value);
    partial void OnWeldPositionCodeChanged();
    partial void OnWTypeChanging(string value);
    partial void OnWTypeChanged();
    partial void OnMaterialChanging(string value);
    partial void OnMaterialChanged();
    partial void OnSpecificationChanging(string value);
    partial void OnSpecificationChanged();
    partial void OnWeldingChanging(string value);
    partial void OnWeldingChanged();
    partial void OnWRangeChanging(string value);
    partial void OnWRangeChanged();
    partial void OnRemarkChanging(string value);
    partial void OnRemarkChanged();
    partial void OnIsAddChanging(System.Nullable<bool> value);
    partial void OnIsAddChanged();
    partial void OnMaterialGroupChanging(string value);
    partial void OnMaterialGroupChanged();
    partial void OnJointsFormChanging(string value);
    partial void OnJointsFormChanged();
    partial void OnTubeDiameterChanging(string value);
    partial void OnTubeDiameterChanged();
    partial void OnSpecimenThicknessChanging(System.Nullable<decimal> value);
    partial void OnSpecimenThicknessChanged();
    partial void OnWeldMethodChanging(string value);
    partial void OnWeldMethodChanged();
    partial void OnWeldPreheatingChanging(string value);
    partial void OnWeldPreheatingChanged();
    partial void OnPWHTChanging(string value);
    partial void OnPWHTChanged();
    partial void OnSTE_IDChanging(string value);
    partial void OnSTE_IDChanged();
    partial void OnWeldingProcedureCodeChanging(string value);
    partial void OnWeldingProcedureCodeChanged();
    partial void OnProcedureDateChanging(System.Nullable<System.DateTime> value);
    partial void OnProcedureDateChanged();
    partial void OnWeldedJointsChanging(string value);
    partial void OnWeldedJointsChanged();
    partial void OnGrooveFormChanging(string value);
    partial void OnGrooveFormChanged();
    partial void OnMaterialCodeChanging(string value);
    partial void OnMaterialCodeChanged();
    partial void OnThicknessRangeChanging(string value);
    partial void OnThicknessRangeChanged();
    partial void OnMaterialStandardChanging(string value);
    partial void OnMaterialStandardChanged();
    partial void OnMaterialTypeChanging(string value);
    partial void OnMaterialTypeChanged();
    partial void OnMaterialModelChanging(string value);
    partial void OnMaterialModelChanged();
    partial void OnMaterialSpecificationChanging(string value);
    partial void OnMaterialSpecificationChanged();
    partial void OnWeldingPositionChanging(string value);
    partial void OnWeldingPositionChanged();
    partial void OnHotTemperaturesChanging(string value);
    partial void OnHotTemperaturesChanged();
    partial void OnHoldingTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnHoldingTimeChanged();
    partial void OnPreheatingTemperatureChanging(string value);
    partial void OnPreheatingTemperatureChanged();
    partial void OnHeatingModeChanging(string value);
    partial void OnHeatingModeChanged();
    partial void OnGasComponentChanging(string value);
    partial void OnGasComponentChanged();
    partial void OnGasFlowChanging(string value);
    partial void OnGasFlowChanged();
    partial void OnPolarDiameterChanging(string value);
    partial void OnPolarDiameterChanged();
    partial void OnNozzleDiameterChanging(string value);
    partial void OnNozzleDiameterChanged();
    partial void OnWeldLayerChanging(string value);
    partial void OnWeldLayerChanged();
    partial void OnWeldMethod1Changing(string value);
    partial void OnWeldMethod1Changed();
    partial void OnCardNumChanging(string value);
    partial void OnCardNumChanged();
    partial void OnDiameterChanging(string value);
    partial void OnDiameterChanged();
    partial void OnPolarityChanging(string value);
    partial void OnPolarityChanged();
    partial void OnElectricCurrentChanging(string value);
    partial void OnElectricCurrentChanged();
    partial void OnVoltageChanging(string value);
    partial void OnVoltageChanged();
    partial void OnSpeedChanging(string value);
    partial void OnSpeedChanged();
    partial void OnLineCapacityChanging(string value);
    partial void OnLineCapacityChanged();
    partial void OnTestingRTChanging(string value);
    partial void OnTestingRTChanged();
    partial void OnTestingPTChanging(string value);
    partial void OnTestingPTChanged();
    partial void OnTestingMTChanging(string value);
    partial void OnTestingMTChanged();
    partial void OnTestingUTChanging(string value);
    partial void OnTestingUTChanged();
    partial void OnTestingOtherChanging(string value);
    partial void OnTestingOtherChanged();
    partial void OnTechnicalMeasuresChanging(string value);
    partial void OnTechnicalMeasuresChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnImageIdChanging(string value);
    partial void OnImageIdChanged();
    #endregion
		
		public PW_WeldingProcedure()
		{
			this._BS_Steel = default(EntityRef<BS_Steel>);
			this._PW_ProcedureImageManage = default(EntityRef<PW_ProcedureImageManage>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WeldingProcedureId", DbType="NVarChar(100) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string WeldingProcedureId
		{
			get
			{
				return this._WeldingProcedureId;
			}
			set
			{
				if ((this._WeldingProcedureId != value))
				{
					this.OnWeldingProcedureIdChanging(value);
					this.SendPropertyChanging();
					this._WeldingProcedureId = value;
					this.SendPropertyChanged("WeldingProcedureId");
					this.OnWeldingProcedureIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WeldPositionCode", DbType="NVarChar(50)")]
		public string WeldPositionCode
		{
			get
			{
				return this._WeldPositionCode;
			}
			set
			{
				if ((this._WeldPositionCode != value))
				{
					this.OnWeldPositionCodeChanging(value);
					this.SendPropertyChanging();
					this._WeldPositionCode = value;
					this.SendPropertyChanged("WeldPositionCode");
					this.OnWeldPositionCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WType", DbType="NVarChar(100)")]
		public string WType
		{
			get
			{
				return this._WType;
			}
			set
			{
				if ((this._WType != value))
				{
					this.OnWTypeChanging(value);
					this.SendPropertyChanging();
					this._WType = value;
					this.SendPropertyChanged("WType");
					this.OnWTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Material", DbType="NVarChar(50)")]
		public string Material
		{
			get
			{
				return this._Material;
			}
			set
			{
				if ((this._Material != value))
				{
					this.OnMaterialChanging(value);
					this.SendPropertyChanging();
					this._Material = value;
					this.SendPropertyChanged("Material");
					this.OnMaterialChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Specification", DbType="NVarChar(50)")]
		public string Specification
		{
			get
			{
				return this._Specification;
			}
			set
			{
				if ((this._Specification != value))
				{
					this.OnSpecificationChanging(value);
					this.SendPropertyChanging();
					this._Specification = value;
					this.SendPropertyChanged("Specification");
					this.OnSpecificationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Welding", DbType="NVarChar(50)")]
		public string Welding
		{
			get
			{
				return this._Welding;
			}
			set
			{
				if ((this._Welding != value))
				{
					this.OnWeldingChanging(value);
					this.SendPropertyChanging();
					this._Welding = value;
					this.SendPropertyChanged("Welding");
					this.OnWeldingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WRange", DbType="NVarChar(50)")]
		public string WRange
		{
			get
			{
				return this._WRange;
			}
			set
			{
				if ((this._WRange != value))
				{
					this.OnWRangeChanging(value);
					this.SendPropertyChanging();
					this._WRange = value;
					this.SendPropertyChanged("WRange");
					this.OnWRangeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Remark", DbType="NVarChar(50)")]
		public string Remark
		{
			get
			{
				return this._Remark;
			}
			set
			{
				if ((this._Remark != value))
				{
					this.OnRemarkChanging(value);
					this.SendPropertyChanging();
					this._Remark = value;
					this.SendPropertyChanged("Remark");
					this.OnRemarkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsAdd", DbType="Bit")]
		public System.Nullable<bool> IsAdd
		{
			get
			{
				return this._IsAdd;
			}
			set
			{
				if ((this._IsAdd != value))
				{
					this.OnIsAddChanging(value);
					this.SendPropertyChanging();
					this._IsAdd = value;
					this.SendPropertyChanged("IsAdd");
					this.OnIsAddChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaterialGroup", DbType="NVarChar(50)")]
		public string MaterialGroup
		{
			get
			{
				return this._MaterialGroup;
			}
			set
			{
				if ((this._MaterialGroup != value))
				{
					this.OnMaterialGroupChanging(value);
					this.SendPropertyChanging();
					this._MaterialGroup = value;
					this.SendPropertyChanged("MaterialGroup");
					this.OnMaterialGroupChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JointsForm", DbType="NVarChar(10)")]
		public string JointsForm
		{
			get
			{
				return this._JointsForm;
			}
			set
			{
				if ((this._JointsForm != value))
				{
					this.OnJointsFormChanging(value);
					this.SendPropertyChanging();
					this._JointsForm = value;
					this.SendPropertyChanged("JointsForm");
					this.OnJointsFormChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TubeDiameter", DbType="NVarChar(50)")]
		public string TubeDiameter
		{
			get
			{
				return this._TubeDiameter;
			}
			set
			{
				if ((this._TubeDiameter != value))
				{
					this.OnTubeDiameterChanging(value);
					this.SendPropertyChanging();
					this._TubeDiameter = value;
					this.SendPropertyChanged("TubeDiameter");
					this.OnTubeDiameterChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SpecimenThickness", DbType="Decimal(18,4)")]
		public System.Nullable<decimal> SpecimenThickness
		{
			get
			{
				return this._SpecimenThickness;
			}
			set
			{
				if ((this._SpecimenThickness != value))
				{
					this.OnSpecimenThicknessChanging(value);
					this.SendPropertyChanging();
					this._SpecimenThickness = value;
					this.SendPropertyChanged("SpecimenThickness");
					this.OnSpecimenThicknessChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WeldMethod", DbType="VarChar(50)")]
		public string WeldMethod
		{
			get
			{
				return this._WeldMethod;
			}
			set
			{
				if ((this._WeldMethod != value))
				{
					this.OnWeldMethodChanging(value);
					this.SendPropertyChanging();
					this._WeldMethod = value;
					this.SendPropertyChanged("WeldMethod");
					this.OnWeldMethodChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WeldPreheating", DbType="NVarChar(50)")]
		public string WeldPreheating
		{
			get
			{
				return this._WeldPreheating;
			}
			set
			{
				if ((this._WeldPreheating != value))
				{
					this.OnWeldPreheatingChanging(value);
					this.SendPropertyChanging();
					this._WeldPreheating = value;
					this.SendPropertyChanged("WeldPreheating");
					this.OnWeldPreheatingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PWHT", DbType="NVarChar(50)")]
		public string PWHT
		{
			get
			{
				return this._PWHT;
			}
			set
			{
				if ((this._PWHT != value))
				{
					this.OnPWHTChanging(value);
					this.SendPropertyChanging();
					this._PWHT = value;
					this.SendPropertyChanged("PWHT");
					this.OnPWHTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_STE_ID", DbType="VarChar(50)")]
		public string STE_ID
		{
			get
			{
				return this._STE_ID;
			}
			set
			{
				if ((this._STE_ID != value))
				{
					if (this._BS_Steel.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSTE_IDChanging(value);
					this.SendPropertyChanging();
					this._STE_ID = value;
					this.SendPropertyChanged("STE_ID");
					this.OnSTE_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WeldingProcedureCode", DbType="NVarChar(100)")]
		public string WeldingProcedureCode
		{
			get
			{
				return this._WeldingProcedureCode;
			}
			set
			{
				if ((this._WeldingProcedureCode != value))
				{
					this.OnWeldingProcedureCodeChanging(value);
					this.SendPropertyChanging();
					this._WeldingProcedureCode = value;
					this.SendPropertyChanged("WeldingProcedureCode");
					this.OnWeldingProcedureCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProcedureDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ProcedureDate
		{
			get
			{
				return this._ProcedureDate;
			}
			set
			{
				if ((this._ProcedureDate != value))
				{
					this.OnProcedureDateChanging(value);
					this.SendPropertyChanging();
					this._ProcedureDate = value;
					this.SendPropertyChanged("ProcedureDate");
					this.OnProcedureDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WeldedJoints", DbType="NVarChar(50)")]
		public string WeldedJoints
		{
			get
			{
				return this._WeldedJoints;
			}
			set
			{
				if ((this._WeldedJoints != value))
				{
					this.OnWeldedJointsChanging(value);
					this.SendPropertyChanging();
					this._WeldedJoints = value;
					this.SendPropertyChanged("WeldedJoints");
					this.OnWeldedJointsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GrooveForm", DbType="NVarChar(50)")]
		public string GrooveForm
		{
			get
			{
				return this._GrooveForm;
			}
			set
			{
				if ((this._GrooveForm != value))
				{
					this.OnGrooveFormChanging(value);
					this.SendPropertyChanging();
					this._GrooveForm = value;
					this.SendPropertyChanged("GrooveForm");
					this.OnGrooveFormChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaterialCode", DbType="NVarChar(50)")]
		public string MaterialCode
		{
			get
			{
				return this._MaterialCode;
			}
			set
			{
				if ((this._MaterialCode != value))
				{
					this.OnMaterialCodeChanging(value);
					this.SendPropertyChanging();
					this._MaterialCode = value;
					this.SendPropertyChanged("MaterialCode");
					this.OnMaterialCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ThicknessRange", DbType="NVarChar(20)")]
		public string ThicknessRange
		{
			get
			{
				return this._ThicknessRange;
			}
			set
			{
				if ((this._ThicknessRange != value))
				{
					this.OnThicknessRangeChanging(value);
					this.SendPropertyChanging();
					this._ThicknessRange = value;
					this.SendPropertyChanged("ThicknessRange");
					this.OnThicknessRangeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaterialStandard", DbType="NVarChar(50)")]
		public string MaterialStandard
		{
			get
			{
				return this._MaterialStandard;
			}
			set
			{
				if ((this._MaterialStandard != value))
				{
					this.OnMaterialStandardChanging(value);
					this.SendPropertyChanging();
					this._MaterialStandard = value;
					this.SendPropertyChanged("MaterialStandard");
					this.OnMaterialStandardChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaterialType", DbType="NVarChar(50)")]
		public string MaterialType
		{
			get
			{
				return this._MaterialType;
			}
			set
			{
				if ((this._MaterialType != value))
				{
					this.OnMaterialTypeChanging(value);
					this.SendPropertyChanging();
					this._MaterialType = value;
					this.SendPropertyChanged("MaterialType");
					this.OnMaterialTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaterialModel", DbType="NVarChar(50)")]
		public string MaterialModel
		{
			get
			{
				return this._MaterialModel;
			}
			set
			{
				if ((this._MaterialModel != value))
				{
					this.OnMaterialModelChanging(value);
					this.SendPropertyChanging();
					this._MaterialModel = value;
					this.SendPropertyChanged("MaterialModel");
					this.OnMaterialModelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaterialSpecification", DbType="NVarChar(50)")]
		public string MaterialSpecification
		{
			get
			{
				return this._MaterialSpecification;
			}
			set
			{
				if ((this._MaterialSpecification != value))
				{
					this.OnMaterialSpecificationChanging(value);
					this.SendPropertyChanging();
					this._MaterialSpecification = value;
					this.SendPropertyChanged("MaterialSpecification");
					this.OnMaterialSpecificationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WeldingPosition", DbType="NVarChar(50)")]
		public string WeldingPosition
		{
			get
			{
				return this._WeldingPosition;
			}
			set
			{
				if ((this._WeldingPosition != value))
				{
					this.OnWeldingPositionChanging(value);
					this.SendPropertyChanging();
					this._WeldingPosition = value;
					this.SendPropertyChanged("WeldingPosition");
					this.OnWeldingPositionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HotTemperatures", DbType="NChar(10)")]
		public string HotTemperatures
		{
			get
			{
				return this._HotTemperatures;
			}
			set
			{
				if ((this._HotTemperatures != value))
				{
					this.OnHotTemperaturesChanging(value);
					this.SendPropertyChanging();
					this._HotTemperatures = value;
					this.SendPropertyChanged("HotTemperatures");
					this.OnHotTemperaturesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HoldingTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> HoldingTime
		{
			get
			{
				return this._HoldingTime;
			}
			set
			{
				if ((this._HoldingTime != value))
				{
					this.OnHoldingTimeChanging(value);
					this.SendPropertyChanging();
					this._HoldingTime = value;
					this.SendPropertyChanged("HoldingTime");
					this.OnHoldingTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PreheatingTemperature", DbType="NChar(10)")]
		public string PreheatingTemperature
		{
			get
			{
				return this._PreheatingTemperature;
			}
			set
			{
				if ((this._PreheatingTemperature != value))
				{
					this.OnPreheatingTemperatureChanging(value);
					this.SendPropertyChanging();
					this._PreheatingTemperature = value;
					this.SendPropertyChanged("PreheatingTemperature");
					this.OnPreheatingTemperatureChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HeatingMode", DbType="NVarChar(50)")]
		public string HeatingMode
		{
			get
			{
				return this._HeatingMode;
			}
			set
			{
				if ((this._HeatingMode != value))
				{
					this.OnHeatingModeChanging(value);
					this.SendPropertyChanging();
					this._HeatingMode = value;
					this.SendPropertyChanged("HeatingMode");
					this.OnHeatingModeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GasComponent", DbType="NVarChar(50)")]
		public string GasComponent
		{
			get
			{
				return this._GasComponent;
			}
			set
			{
				if ((this._GasComponent != value))
				{
					this.OnGasComponentChanging(value);
					this.SendPropertyChanging();
					this._GasComponent = value;
					this.SendPropertyChanged("GasComponent");
					this.OnGasComponentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GasFlow", DbType="NVarChar(50)")]
		public string GasFlow
		{
			get
			{
				return this._GasFlow;
			}
			set
			{
				if ((this._GasFlow != value))
				{
					this.OnGasFlowChanging(value);
					this.SendPropertyChanging();
					this._GasFlow = value;
					this.SendPropertyChanged("GasFlow");
					this.OnGasFlowChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PolarDiameter", DbType="NVarChar(50)")]
		public string PolarDiameter
		{
			get
			{
				return this._PolarDiameter;
			}
			set
			{
				if ((this._PolarDiameter != value))
				{
					this.OnPolarDiameterChanging(value);
					this.SendPropertyChanging();
					this._PolarDiameter = value;
					this.SendPropertyChanged("PolarDiameter");
					this.OnPolarDiameterChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NozzleDiameter", DbType="NChar(10)")]
		public string NozzleDiameter
		{
			get
			{
				return this._NozzleDiameter;
			}
			set
			{
				if ((this._NozzleDiameter != value))
				{
					this.OnNozzleDiameterChanging(value);
					this.SendPropertyChanging();
					this._NozzleDiameter = value;
					this.SendPropertyChanged("NozzleDiameter");
					this.OnNozzleDiameterChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WeldLayer", DbType="NVarChar(50)")]
		public string WeldLayer
		{
			get
			{
				return this._WeldLayer;
			}
			set
			{
				if ((this._WeldLayer != value))
				{
					this.OnWeldLayerChanging(value);
					this.SendPropertyChanging();
					this._WeldLayer = value;
					this.SendPropertyChanged("WeldLayer");
					this.OnWeldLayerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WeldMethod1", DbType="NVarChar(50)")]
		public string WeldMethod1
		{
			get
			{
				return this._WeldMethod1;
			}
			set
			{
				if ((this._WeldMethod1 != value))
				{
					this.OnWeldMethod1Changing(value);
					this.SendPropertyChanging();
					this._WeldMethod1 = value;
					this.SendPropertyChanged("WeldMethod1");
					this.OnWeldMethod1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CardNum", DbType="NVarChar(50)")]
		public string CardNum
		{
			get
			{
				return this._CardNum;
			}
			set
			{
				if ((this._CardNum != value))
				{
					this.OnCardNumChanging(value);
					this.SendPropertyChanging();
					this._CardNum = value;
					this.SendPropertyChanged("CardNum");
					this.OnCardNumChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Diameter", DbType="NChar(10)")]
		public string Diameter
		{
			get
			{
				return this._Diameter;
			}
			set
			{
				if ((this._Diameter != value))
				{
					this.OnDiameterChanging(value);
					this.SendPropertyChanging();
					this._Diameter = value;
					this.SendPropertyChanged("Diameter");
					this.OnDiameterChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Polarity", DbType="NVarChar(50)")]
		public string Polarity
		{
			get
			{
				return this._Polarity;
			}
			set
			{
				if ((this._Polarity != value))
				{
					this.OnPolarityChanging(value);
					this.SendPropertyChanging();
					this._Polarity = value;
					this.SendPropertyChanged("Polarity");
					this.OnPolarityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ElectricCurrent", DbType="NVarChar(50)")]
		public string ElectricCurrent
		{
			get
			{
				return this._ElectricCurrent;
			}
			set
			{
				if ((this._ElectricCurrent != value))
				{
					this.OnElectricCurrentChanging(value);
					this.SendPropertyChanging();
					this._ElectricCurrent = value;
					this.SendPropertyChanged("ElectricCurrent");
					this.OnElectricCurrentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Voltage", DbType="NVarChar(50)")]
		public string Voltage
		{
			get
			{
				return this._Voltage;
			}
			set
			{
				if ((this._Voltage != value))
				{
					this.OnVoltageChanging(value);
					this.SendPropertyChanging();
					this._Voltage = value;
					this.SendPropertyChanged("Voltage");
					this.OnVoltageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Speed", DbType="NVarChar(50)")]
		public string Speed
		{
			get
			{
				return this._Speed;
			}
			set
			{
				if ((this._Speed != value))
				{
					this.OnSpeedChanging(value);
					this.SendPropertyChanging();
					this._Speed = value;
					this.SendPropertyChanged("Speed");
					this.OnSpeedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LineCapacity", DbType="NVarChar(50)")]
		public string LineCapacity
		{
			get
			{
				return this._LineCapacity;
			}
			set
			{
				if ((this._LineCapacity != value))
				{
					this.OnLineCapacityChanging(value);
					this.SendPropertyChanging();
					this._LineCapacity = value;
					this.SendPropertyChanged("LineCapacity");
					this.OnLineCapacityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TestingRT", DbType="NChar(10)")]
		public string TestingRT
		{
			get
			{
				return this._TestingRT;
			}
			set
			{
				if ((this._TestingRT != value))
				{
					this.OnTestingRTChanging(value);
					this.SendPropertyChanging();
					this._TestingRT = value;
					this.SendPropertyChanged("TestingRT");
					this.OnTestingRTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TestingPT", DbType="NChar(10)")]
		public string TestingPT
		{
			get
			{
				return this._TestingPT;
			}
			set
			{
				if ((this._TestingPT != value))
				{
					this.OnTestingPTChanging(value);
					this.SendPropertyChanging();
					this._TestingPT = value;
					this.SendPropertyChanged("TestingPT");
					this.OnTestingPTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TestingMT", DbType="NChar(10)")]
		public string TestingMT
		{
			get
			{
				return this._TestingMT;
			}
			set
			{
				if ((this._TestingMT != value))
				{
					this.OnTestingMTChanging(value);
					this.SendPropertyChanging();
					this._TestingMT = value;
					this.SendPropertyChanged("TestingMT");
					this.OnTestingMTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TestingUT", DbType="NChar(10)")]
		public string TestingUT
		{
			get
			{
				return this._TestingUT;
			}
			set
			{
				if ((this._TestingUT != value))
				{
					this.OnTestingUTChanging(value);
					this.SendPropertyChanging();
					this._TestingUT = value;
					this.SendPropertyChanged("TestingUT");
					this.OnTestingUTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TestingOther", DbType="NVarChar(50)")]
		public string TestingOther
		{
			get
			{
				return this._TestingOther;
			}
			set
			{
				if ((this._TestingOther != value))
				{
					this.OnTestingOtherChanging(value);
					this.SendPropertyChanging();
					this._TestingOther = value;
					this.SendPropertyChanged("TestingOther");
					this.OnTestingOtherChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TechnicalMeasures", DbType="NVarChar(100)")]
		public string TechnicalMeasures
		{
			get
			{
				return this._TechnicalMeasures;
			}
			set
			{
				if ((this._TechnicalMeasures != value))
				{
					this.OnTechnicalMeasuresChanging(value);
					this.SendPropertyChanging();
					this._TechnicalMeasures = value;
					this.SendPropertyChanged("TechnicalMeasures");
					this.OnTechnicalMeasuresChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(100)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ImageId", DbType="NVarChar(50)")]
		public string ImageId
		{
			get
			{
				return this._ImageId;
			}
			set
			{
				if ((this._ImageId != value))
				{
					if (this._PW_ProcedureImageManage.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnImageIdChanging(value);
					this.SendPropertyChanging();
					this._ImageId = value;
					this.SendPropertyChanged("ImageId");
					this.OnImageIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_PW_WeldingProcedure_BS_WeldMaterial", Storage="_BS_Steel", ThisKey="STE_ID", OtherKey="STE_ID", IsForeignKey=true)]
		public BS_Steel BS_Steel
		{
			get
			{
				return this._BS_Steel.Entity;
			}
			set
			{
				BS_Steel previousValue = this._BS_Steel.Entity;
				if (((previousValue != value) 
							|| (this._BS_Steel.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._BS_Steel.Entity = null;
						previousValue.PW_WeldingProcedure.Remove(this);
					}
					this._BS_Steel.Entity = value;
					if ((value != null))
					{
						value.PW_WeldingProcedure.Add(this);
						this._STE_ID = value.STE_ID;
					}
					else
					{
						this._STE_ID = default(string);
					}
					this.SendPropertyChanged("BS_Steel");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_PW_WeldingProcedure_PW_ProcedureImageManage", Storage="_PW_ProcedureImageManage", ThisKey="ImageId", OtherKey="ImageId", IsForeignKey=true)]
		public PW_ProcedureImageManage PW_ProcedureImageManage
		{
			get
			{
				return this._PW_ProcedureImageManage.Entity;
			}
			set
			{
				PW_ProcedureImageManage previousValue = this._PW_ProcedureImageManage.Entity;
				if (((previousValue != value) 
							|| (this._PW_ProcedureImageManage.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PW_ProcedureImageManage.Entity = null;
						previousValue.PW_WeldingProcedure.Remove(this);
					}
					this._PW_ProcedureImageManage.Entity = value;
					if ((value != null))
					{
						value.PW_WeldingProcedure.Add(this);
						this._ImageId = value.ImageId;
					}
					else
					{
						this._ImageId = default(string);
					}
					this.SendPropertyChanged("PW_ProcedureImageManage");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PW_WeldingProcedureJOT")]
	public partial class PW_WeldingProcedureJOT : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _WeldingProcedureJotId;
		
		private string _ProcedureCode;
		
		private System.Nullable<System.DateTime> _ProcedureDate;
		
		private string _WeldedJoints;
		
		private string _GrooveForm;
		
		private string _MaterialCode;
		
		private string _ThicknessRange;
		
		private string _MaterialStandard;
		
		private string _MaterialType;
		
		private string _MaterialModel;
		
		private string _MaterialSpecification;
		
		private string _WeldingPosition;
		
		private string _HotTemperatures;
		
		private System.Nullable<System.DateTime> _HoldingTime;
		
		private string _PreheatingTemperature;
		
		private string _HeatingMode;
		
		private string _GasComponent;
		
		private string _GasFlow;
		
		private string _PolarDiameter;
		
		private string _NozzleDiameter;
		
		private string _WeldLayer;
		
		private string _WeldMethod;
		
		private string _CardNum;
		
		private string _Diameter;
		
		private string _Polarity;
		
		private string _ElectricCurrent;
		
		private string _Voltage;
		
		private string _Speed;
		
		private string _LineCapacity;
		
		private string _TestingRT;
		
		private string _TestingPT;
		
		private string _TestingMT;
		
		private string _TestingUT;
		
		private string _TestingOther;
		
		private string _TechnicalMeasures;
		
		private string _Description;
		
		private string _ImageId;
		
		private string _WType;
		
		private string _Material;
		
		private string _Specification;
		
		private string _Welding;
		
		private string _WRange;
		
		private string _Remark;
		
		private string _MaterialGroup;
		
		private string _JointsForm;
		
		private string _TubeDiameter;
		
		private System.Nullable<decimal> _SpecimenThickness;
		
		private string _WeldPositionCode;
		
		private string _WeldPreheating;
		
		private string _PWHT;
		
		private string _STE_ID;
		
		private string _WWI_Code;
		
		private EntityRef<PW_ProcedureImageManage> _PW_ProcedureImageManage;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnWeldingProcedureJotIdChanging(string value);
    partial void OnWeldingProcedureJotIdChanged();
    partial void OnProcedureCodeChanging(string value);
    partial void OnProcedureCodeChanged();
    partial void OnProcedureDateChanging(System.Nullable<System.DateTime> value);
    partial void OnProcedureDateChanged();
    partial void OnWeldedJointsChanging(string value);
    partial void OnWeldedJointsChanged();
    partial void OnGrooveFormChanging(string value);
    partial void OnGrooveFormChanged();
    partial void OnMaterialCodeChanging(string value);
    partial void OnMaterialCodeChanged();
    partial void OnThicknessRangeChanging(string value);
    partial void OnThicknessRangeChanged();
    partial void OnMaterialStandardChanging(string value);
    partial void OnMaterialStandardChanged();
    partial void OnMaterialTypeChanging(string value);
    partial void OnMaterialTypeChanged();
    partial void OnMaterialModelChanging(string value);
    partial void OnMaterialModelChanged();
    partial void OnMaterialSpecificationChanging(string value);
    partial void OnMaterialSpecificationChanged();
    partial void OnWeldingPositionChanging(string value);
    partial void OnWeldingPositionChanged();
    partial void OnHotTemperaturesChanging(string value);
    partial void OnHotTemperaturesChanged();
    partial void OnHoldingTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnHoldingTimeChanged();
    partial void OnPreheatingTemperatureChanging(string value);
    partial void OnPreheatingTemperatureChanged();
    partial void OnHeatingModeChanging(string value);
    partial void OnHeatingModeChanged();
    partial void OnGasComponentChanging(string value);
    partial void OnGasComponentChanged();
    partial void OnGasFlowChanging(string value);
    partial void OnGasFlowChanged();
    partial void OnPolarDiameterChanging(string value);
    partial void OnPolarDiameterChanged();
    partial void OnNozzleDiameterChanging(string value);
    partial void OnNozzleDiameterChanged();
    partial void OnWeldLayerChanging(string value);
    partial void OnWeldLayerChanged();
    partial void OnWeldMethodChanging(string value);
    partial void OnWeldMethodChanged();
    partial void OnCardNumChanging(string value);
    partial void OnCardNumChanged();
    partial void OnDiameterChanging(string value);
    partial void OnDiameterChanged();
    partial void OnPolarityChanging(string value);
    partial void OnPolarityChanged();
    partial void OnElectricCurrentChanging(string value);
    partial void OnElectricCurrentChanged();
    partial void OnVoltageChanging(string value);
    partial void OnVoltageChanged();
    partial void OnSpeedChanging(string value);
    partial void OnSpeedChanged();
    partial void OnLineCapacityChanging(string value);
    partial void OnLineCapacityChanged();
    partial void OnTestingRTChanging(string value);
    partial void OnTestingRTChanged();
    partial void OnTestingPTChanging(string value);
    partial void OnTestingPTChanged();
    partial void OnTestingMTChanging(string value);
    partial void OnTestingMTChanged();
    partial void OnTestingUTChanging(string value);
    partial void OnTestingUTChanged();
    partial void OnTestingOtherChanging(string value);
    partial void OnTestingOtherChanged();
    partial void OnTechnicalMeasuresChanging(string value);
    partial void OnTechnicalMeasuresChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnImageIdChanging(string value);
    partial void OnImageIdChanged();
    partial void OnWTypeChanging(string value);
    partial void OnWTypeChanged();
    partial void OnMaterialChanging(string value);
    partial void OnMaterialChanged();
    partial void OnSpecificationChanging(string value);
    partial void OnSpecificationChanged();
    partial void OnWeldingChanging(string value);
    partial void OnWeldingChanged();
    partial void OnWRangeChanging(string value);
    partial void OnWRangeChanged();
    partial void OnRemarkChanging(string value);
    partial void OnRemarkChanged();
    partial void OnMaterialGroupChanging(string value);
    partial void OnMaterialGroupChanged();
    partial void OnJointsFormChanging(string value);
    partial void OnJointsFormChanged();
    partial void OnTubeDiameterChanging(string value);
    partial void OnTubeDiameterChanged();
    partial void OnSpecimenThicknessChanging(System.Nullable<decimal> value);
    partial void OnSpecimenThicknessChanged();
    partial void OnWeldPositionCodeChanging(string value);
    partial void OnWeldPositionCodeChanged();
    partial void OnWeldPreheatingChanging(string value);
    partial void OnWeldPreheatingChanged();
    partial void OnPWHTChanging(string value);
    partial void OnPWHTChanged();
    partial void OnSTE_IDChanging(string value);
    partial void OnSTE_IDChanged();
    partial void OnWWI_CodeChanging(string value);
    partial void OnWWI_CodeChanged();
    #endregion
		
		public PW_WeldingProcedureJOT()
		{
			this._PW_ProcedureImageManage = default(EntityRef<PW_ProcedureImageManage>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WeldingProcedureJotId", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string WeldingProcedureJotId
		{
			get
			{
				return this._WeldingProcedureJotId;
			}
			set
			{
				if ((this._WeldingProcedureJotId != value))
				{
					this.OnWeldingProcedureJotIdChanging(value);
					this.SendPropertyChanging();
					this._WeldingProcedureJotId = value;
					this.SendPropertyChanged("WeldingProcedureJotId");
					this.OnWeldingProcedureJotIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProcedureCode", DbType="NVarChar(50)")]
		public string ProcedureCode
		{
			get
			{
				return this._ProcedureCode;
			}
			set
			{
				if ((this._ProcedureCode != value))
				{
					this.OnProcedureCodeChanging(value);
					this.SendPropertyChanging();
					this._ProcedureCode = value;
					this.SendPropertyChanged("ProcedureCode");
					this.OnProcedureCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProcedureDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ProcedureDate
		{
			get
			{
				return this._ProcedureDate;
			}
			set
			{
				if ((this._ProcedureDate != value))
				{
					this.OnProcedureDateChanging(value);
					this.SendPropertyChanging();
					this._ProcedureDate = value;
					this.SendPropertyChanged("ProcedureDate");
					this.OnProcedureDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WeldedJoints", DbType="NVarChar(50)")]
		public string WeldedJoints
		{
			get
			{
				return this._WeldedJoints;
			}
			set
			{
				if ((this._WeldedJoints != value))
				{
					this.OnWeldedJointsChanging(value);
					this.SendPropertyChanging();
					this._WeldedJoints = value;
					this.SendPropertyChanged("WeldedJoints");
					this.OnWeldedJointsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GrooveForm", DbType="NVarChar(50)")]
		public string GrooveForm
		{
			get
			{
				return this._GrooveForm;
			}
			set
			{
				if ((this._GrooveForm != value))
				{
					this.OnGrooveFormChanging(value);
					this.SendPropertyChanging();
					this._GrooveForm = value;
					this.SendPropertyChanged("GrooveForm");
					this.OnGrooveFormChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaterialCode", DbType="NVarChar(50)")]
		public string MaterialCode
		{
			get
			{
				return this._MaterialCode;
			}
			set
			{
				if ((this._MaterialCode != value))
				{
					this.OnMaterialCodeChanging(value);
					this.SendPropertyChanging();
					this._MaterialCode = value;
					this.SendPropertyChanged("MaterialCode");
					this.OnMaterialCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ThicknessRange", DbType="NVarChar(20)")]
		public string ThicknessRange
		{
			get
			{
				return this._ThicknessRange;
			}
			set
			{
				if ((this._ThicknessRange != value))
				{
					this.OnThicknessRangeChanging(value);
					this.SendPropertyChanging();
					this._ThicknessRange = value;
					this.SendPropertyChanged("ThicknessRange");
					this.OnThicknessRangeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaterialStandard", DbType="NVarChar(50)")]
		public string MaterialStandard
		{
			get
			{
				return this._MaterialStandard;
			}
			set
			{
				if ((this._MaterialStandard != value))
				{
					this.OnMaterialStandardChanging(value);
					this.SendPropertyChanging();
					this._MaterialStandard = value;
					this.SendPropertyChanged("MaterialStandard");
					this.OnMaterialStandardChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaterialType", DbType="NVarChar(50)")]
		public string MaterialType
		{
			get
			{
				return this._MaterialType;
			}
			set
			{
				if ((this._MaterialType != value))
				{
					this.OnMaterialTypeChanging(value);
					this.SendPropertyChanging();
					this._MaterialType = value;
					this.SendPropertyChanged("MaterialType");
					this.OnMaterialTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaterialModel", DbType="NVarChar(50)")]
		public string MaterialModel
		{
			get
			{
				return this._MaterialModel;
			}
			set
			{
				if ((this._MaterialModel != value))
				{
					this.OnMaterialModelChanging(value);
					this.SendPropertyChanging();
					this._MaterialModel = value;
					this.SendPropertyChanged("MaterialModel");
					this.OnMaterialModelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaterialSpecification", DbType="NVarChar(50)")]
		public string MaterialSpecification
		{
			get
			{
				return this._MaterialSpecification;
			}
			set
			{
				if ((this._MaterialSpecification != value))
				{
					this.OnMaterialSpecificationChanging(value);
					this.SendPropertyChanging();
					this._MaterialSpecification = value;
					this.SendPropertyChanged("MaterialSpecification");
					this.OnMaterialSpecificationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WeldingPosition", DbType="NVarChar(50)")]
		public string WeldingPosition
		{
			get
			{
				return this._WeldingPosition;
			}
			set
			{
				if ((this._WeldingPosition != value))
				{
					this.OnWeldingPositionChanging(value);
					this.SendPropertyChanging();
					this._WeldingPosition = value;
					this.SendPropertyChanged("WeldingPosition");
					this.OnWeldingPositionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HotTemperatures", DbType="NChar(10)")]
		public string HotTemperatures
		{
			get
			{
				return this._HotTemperatures;
			}
			set
			{
				if ((this._HotTemperatures != value))
				{
					this.OnHotTemperaturesChanging(value);
					this.SendPropertyChanging();
					this._HotTemperatures = value;
					this.SendPropertyChanged("HotTemperatures");
					this.OnHotTemperaturesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HoldingTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> HoldingTime
		{
			get
			{
				return this._HoldingTime;
			}
			set
			{
				if ((this._HoldingTime != value))
				{
					this.OnHoldingTimeChanging(value);
					this.SendPropertyChanging();
					this._HoldingTime = value;
					this.SendPropertyChanged("HoldingTime");
					this.OnHoldingTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PreheatingTemperature", DbType="NChar(10)")]
		public string PreheatingTemperature
		{
			get
			{
				return this._PreheatingTemperature;
			}
			set
			{
				if ((this._PreheatingTemperature != value))
				{
					this.OnPreheatingTemperatureChanging(value);
					this.SendPropertyChanging();
					this._PreheatingTemperature = value;
					this.SendPropertyChanged("PreheatingTemperature");
					this.OnPreheatingTemperatureChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HeatingMode", DbType="NVarChar(50)")]
		public string HeatingMode
		{
			get
			{
				return this._HeatingMode;
			}
			set
			{
				if ((this._HeatingMode != value))
				{
					this.OnHeatingModeChanging(value);
					this.SendPropertyChanging();
					this._HeatingMode = value;
					this.SendPropertyChanged("HeatingMode");
					this.OnHeatingModeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GasComponent", DbType="NVarChar(50)")]
		public string GasComponent
		{
			get
			{
				return this._GasComponent;
			}
			set
			{
				if ((this._GasComponent != value))
				{
					this.OnGasComponentChanging(value);
					this.SendPropertyChanging();
					this._GasComponent = value;
					this.SendPropertyChanged("GasComponent");
					this.OnGasComponentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GasFlow", DbType="NVarChar(50)")]
		public string GasFlow
		{
			get
			{
				return this._GasFlow;
			}
			set
			{
				if ((this._GasFlow != value))
				{
					this.OnGasFlowChanging(value);
					this.SendPropertyChanging();
					this._GasFlow = value;
					this.SendPropertyChanged("GasFlow");
					this.OnGasFlowChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PolarDiameter", DbType="NVarChar(50)")]
		public string PolarDiameter
		{
			get
			{
				return this._PolarDiameter;
			}
			set
			{
				if ((this._PolarDiameter != value))
				{
					this.OnPolarDiameterChanging(value);
					this.SendPropertyChanging();
					this._PolarDiameter = value;
					this.SendPropertyChanged("PolarDiameter");
					this.OnPolarDiameterChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NozzleDiameter", DbType="NChar(10)")]
		public string NozzleDiameter
		{
			get
			{
				return this._NozzleDiameter;
			}
			set
			{
				if ((this._NozzleDiameter != value))
				{
					this.OnNozzleDiameterChanging(value);
					this.SendPropertyChanging();
					this._NozzleDiameter = value;
					this.SendPropertyChanged("NozzleDiameter");
					this.OnNozzleDiameterChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WeldLayer", DbType="NVarChar(50)")]
		public string WeldLayer
		{
			get
			{
				return this._WeldLayer;
			}
			set
			{
				if ((this._WeldLayer != value))
				{
					this.OnWeldLayerChanging(value);
					this.SendPropertyChanging();
					this._WeldLayer = value;
					this.SendPropertyChanged("WeldLayer");
					this.OnWeldLayerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WeldMethod", DbType="NVarChar(50)")]
		public string WeldMethod
		{
			get
			{
				return this._WeldMethod;
			}
			set
			{
				if ((this._WeldMethod != value))
				{
					this.OnWeldMethodChanging(value);
					this.SendPropertyChanging();
					this._WeldMethod = value;
					this.SendPropertyChanged("WeldMethod");
					this.OnWeldMethodChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CardNum", DbType="NVarChar(50)")]
		public string CardNum
		{
			get
			{
				return this._CardNum;
			}
			set
			{
				if ((this._CardNum != value))
				{
					this.OnCardNumChanging(value);
					this.SendPropertyChanging();
					this._CardNum = value;
					this.SendPropertyChanged("CardNum");
					this.OnCardNumChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Diameter", DbType="NChar(10)")]
		public string Diameter
		{
			get
			{
				return this._Diameter;
			}
			set
			{
				if ((this._Diameter != value))
				{
					this.OnDiameterChanging(value);
					this.SendPropertyChanging();
					this._Diameter = value;
					this.SendPropertyChanged("Diameter");
					this.OnDiameterChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Polarity", DbType="NVarChar(50)")]
		public string Polarity
		{
			get
			{
				return this._Polarity;
			}
			set
			{
				if ((this._Polarity != value))
				{
					this.OnPolarityChanging(value);
					this.SendPropertyChanging();
					this._Polarity = value;
					this.SendPropertyChanged("Polarity");
					this.OnPolarityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ElectricCurrent", DbType="NVarChar(50)")]
		public string ElectricCurrent
		{
			get
			{
				return this._ElectricCurrent;
			}
			set
			{
				if ((this._ElectricCurrent != value))
				{
					this.OnElectricCurrentChanging(value);
					this.SendPropertyChanging();
					this._ElectricCurrent = value;
					this.SendPropertyChanged("ElectricCurrent");
					this.OnElectricCurrentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Voltage", DbType="NVarChar(50)")]
		public string Voltage
		{
			get
			{
				return this._Voltage;
			}
			set
			{
				if ((this._Voltage != value))
				{
					this.OnVoltageChanging(value);
					this.SendPropertyChanging();
					this._Voltage = value;
					this.SendPropertyChanged("Voltage");
					this.OnVoltageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Speed", DbType="NVarChar(50)")]
		public string Speed
		{
			get
			{
				return this._Speed;
			}
			set
			{
				if ((this._Speed != value))
				{
					this.OnSpeedChanging(value);
					this.SendPropertyChanging();
					this._Speed = value;
					this.SendPropertyChanged("Speed");
					this.OnSpeedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LineCapacity", DbType="NVarChar(50)")]
		public string LineCapacity
		{
			get
			{
				return this._LineCapacity;
			}
			set
			{
				if ((this._LineCapacity != value))
				{
					this.OnLineCapacityChanging(value);
					this.SendPropertyChanging();
					this._LineCapacity = value;
					this.SendPropertyChanged("LineCapacity");
					this.OnLineCapacityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TestingRT", DbType="NChar(10)")]
		public string TestingRT
		{
			get
			{
				return this._TestingRT;
			}
			set
			{
				if ((this._TestingRT != value))
				{
					this.OnTestingRTChanging(value);
					this.SendPropertyChanging();
					this._TestingRT = value;
					this.SendPropertyChanged("TestingRT");
					this.OnTestingRTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TestingPT", DbType="NChar(10)")]
		public string TestingPT
		{
			get
			{
				return this._TestingPT;
			}
			set
			{
				if ((this._TestingPT != value))
				{
					this.OnTestingPTChanging(value);
					this.SendPropertyChanging();
					this._TestingPT = value;
					this.SendPropertyChanged("TestingPT");
					this.OnTestingPTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TestingMT", DbType="NChar(10)")]
		public string TestingMT
		{
			get
			{
				return this._TestingMT;
			}
			set
			{
				if ((this._TestingMT != value))
				{
					this.OnTestingMTChanging(value);
					this.SendPropertyChanging();
					this._TestingMT = value;
					this.SendPropertyChanged("TestingMT");
					this.OnTestingMTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TestingUT", DbType="NChar(10)")]
		public string TestingUT
		{
			get
			{
				return this._TestingUT;
			}
			set
			{
				if ((this._TestingUT != value))
				{
					this.OnTestingUTChanging(value);
					this.SendPropertyChanging();
					this._TestingUT = value;
					this.SendPropertyChanged("TestingUT");
					this.OnTestingUTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TestingOther", DbType="NVarChar(50)")]
		public string TestingOther
		{
			get
			{
				return this._TestingOther;
			}
			set
			{
				if ((this._TestingOther != value))
				{
					this.OnTestingOtherChanging(value);
					this.SendPropertyChanging();
					this._TestingOther = value;
					this.SendPropertyChanged("TestingOther");
					this.OnTestingOtherChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TechnicalMeasures", DbType="NVarChar(100)")]
		public string TechnicalMeasures
		{
			get
			{
				return this._TechnicalMeasures;
			}
			set
			{
				if ((this._TechnicalMeasures != value))
				{
					this.OnTechnicalMeasuresChanging(value);
					this.SendPropertyChanging();
					this._TechnicalMeasures = value;
					this.SendPropertyChanged("TechnicalMeasures");
					this.OnTechnicalMeasuresChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(100)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ImageId", DbType="NVarChar(50)")]
		public string ImageId
		{
			get
			{
				return this._ImageId;
			}
			set
			{
				if ((this._ImageId != value))
				{
					if (this._PW_ProcedureImageManage.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnImageIdChanging(value);
					this.SendPropertyChanging();
					this._ImageId = value;
					this.SendPropertyChanged("ImageId");
					this.OnImageIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WType", DbType="Char(1)")]
		public string WType
		{
			get
			{
				return this._WType;
			}
			set
			{
				if ((this._WType != value))
				{
					this.OnWTypeChanging(value);
					this.SendPropertyChanging();
					this._WType = value;
					this.SendPropertyChanged("WType");
					this.OnWTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Material", DbType="NVarChar(50)")]
		public string Material
		{
			get
			{
				return this._Material;
			}
			set
			{
				if ((this._Material != value))
				{
					this.OnMaterialChanging(value);
					this.SendPropertyChanging();
					this._Material = value;
					this.SendPropertyChanged("Material");
					this.OnMaterialChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Specification", DbType="NVarChar(50)")]
		public string Specification
		{
			get
			{
				return this._Specification;
			}
			set
			{
				if ((this._Specification != value))
				{
					this.OnSpecificationChanging(value);
					this.SendPropertyChanging();
					this._Specification = value;
					this.SendPropertyChanged("Specification");
					this.OnSpecificationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Welding", DbType="NVarChar(50)")]
		public string Welding
		{
			get
			{
				return this._Welding;
			}
			set
			{
				if ((this._Welding != value))
				{
					this.OnWeldingChanging(value);
					this.SendPropertyChanging();
					this._Welding = value;
					this.SendPropertyChanged("Welding");
					this.OnWeldingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WRange", DbType="NVarChar(50)")]
		public string WRange
		{
			get
			{
				return this._WRange;
			}
			set
			{
				if ((this._WRange != value))
				{
					this.OnWRangeChanging(value);
					this.SendPropertyChanging();
					this._WRange = value;
					this.SendPropertyChanged("WRange");
					this.OnWRangeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Remark", DbType="NVarChar(50)")]
		public string Remark
		{
			get
			{
				return this._Remark;
			}
			set
			{
				if ((this._Remark != value))
				{
					this.OnRemarkChanging(value);
					this.SendPropertyChanging();
					this._Remark = value;
					this.SendPropertyChanged("Remark");
					this.OnRemarkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaterialGroup", DbType="NVarChar(50)")]
		public string MaterialGroup
		{
			get
			{
				return this._MaterialGroup;
			}
			set
			{
				if ((this._MaterialGroup != value))
				{
					this.OnMaterialGroupChanging(value);
					this.SendPropertyChanging();
					this._MaterialGroup = value;
					this.SendPropertyChanged("MaterialGroup");
					this.OnMaterialGroupChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JointsForm", DbType="NVarChar(10)")]
		public string JointsForm
		{
			get
			{
				return this._JointsForm;
			}
			set
			{
				if ((this._JointsForm != value))
				{
					this.OnJointsFormChanging(value);
					this.SendPropertyChanging();
					this._JointsForm = value;
					this.SendPropertyChanged("JointsForm");
					this.OnJointsFormChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TubeDiameter", DbType="NVarChar(50)")]
		public string TubeDiameter
		{
			get
			{
				return this._TubeDiameter;
			}
			set
			{
				if ((this._TubeDiameter != value))
				{
					this.OnTubeDiameterChanging(value);
					this.SendPropertyChanging();
					this._TubeDiameter = value;
					this.SendPropertyChanged("TubeDiameter");
					this.OnTubeDiameterChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SpecimenThickness", DbType="Decimal(18,4)")]
		public System.Nullable<decimal> SpecimenThickness
		{
			get
			{
				return this._SpecimenThickness;
			}
			set
			{
				if ((this._SpecimenThickness != value))
				{
					this.OnSpecimenThicknessChanging(value);
					this.SendPropertyChanging();
					this._SpecimenThickness = value;
					this.SendPropertyChanged("SpecimenThickness");
					this.OnSpecimenThicknessChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WeldPositionCode", DbType="NVarChar(50)")]
		public string WeldPositionCode
		{
			get
			{
				return this._WeldPositionCode;
			}
			set
			{
				if ((this._WeldPositionCode != value))
				{
					this.OnWeldPositionCodeChanging(value);
					this.SendPropertyChanging();
					this._WeldPositionCode = value;
					this.SendPropertyChanged("WeldPositionCode");
					this.OnWeldPositionCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WeldPreheating", DbType="NVarChar(50)")]
		public string WeldPreheating
		{
			get
			{
				return this._WeldPreheating;
			}
			set
			{
				if ((this._WeldPreheating != value))
				{
					this.OnWeldPreheatingChanging(value);
					this.SendPropertyChanging();
					this._WeldPreheating = value;
					this.SendPropertyChanged("WeldPreheating");
					this.OnWeldPreheatingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PWHT", DbType="NVarChar(50)")]
		public string PWHT
		{
			get
			{
				return this._PWHT;
			}
			set
			{
				if ((this._PWHT != value))
				{
					this.OnPWHTChanging(value);
					this.SendPropertyChanging();
					this._PWHT = value;
					this.SendPropertyChanged("PWHT");
					this.OnPWHTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_STE_ID", DbType="NVarChar(50)")]
		public string STE_ID
		{
			get
			{
				return this._STE_ID;
			}
			set
			{
				if ((this._STE_ID != value))
				{
					this.OnSTE_IDChanging(value);
					this.SendPropertyChanging();
					this._STE_ID = value;
					this.SendPropertyChanged("STE_ID");
					this.OnSTE_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WWI_Code", DbType="NVarChar(50)")]
		public string WWI_Code
		{
			get
			{
				return this._WWI_Code;
			}
			set
			{
				if ((this._WWI_Code != value))
				{
					this.OnWWI_CodeChanging(value);
					this.SendPropertyChanging();
					this._WWI_Code = value;
					this.SendPropertyChanged("WWI_Code");
					this.OnWWI_CodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_PW_WeldingProcedureJOT_PW_ProcedureImageManage", Storage="_PW_ProcedureImageManage", ThisKey="ImageId", OtherKey="ImageId", IsForeignKey=true)]
		public PW_ProcedureImageManage PW_ProcedureImageManage
		{
			get
			{
				return this._PW_ProcedureImageManage.Entity;
			}
			set
			{
				PW_ProcedureImageManage previousValue = this._PW_ProcedureImageManage.Entity;
				if (((previousValue != value) 
							|| (this._PW_ProcedureImageManage.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PW_ProcedureImageManage.Entity = null;
						previousValue.PW_WeldingProcedureJOT.Remove(this);
					}
					this._PW_ProcedureImageManage.Entity = value;
					if ((value != null))
					{
						value.PW_WeldingProcedureJOT.Add(this);
						this._ImageId = value.ImageId;
					}
					else
					{
						this._ImageId = default(string);
					}
					this.SendPropertyChanged("PW_ProcedureImageManage");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ReportServer")]
	public partial class ReportServer : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ReportId;
		
		private string _TabContent;
		
		private string _ReportName;
		
		private string _InitTabContent;
		
		private string _ProjectId;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnReportIdChanging(string value);
    partial void OnReportIdChanged();
    partial void OnTabContentChanging(string value);
    partial void OnTabContentChanged();
    partial void OnReportNameChanging(string value);
    partial void OnReportNameChanged();
    partial void OnInitTabContentChanging(string value);
    partial void OnInitTabContentChanged();
    partial void OnProjectIdChanging(string value);
    partial void OnProjectIdChanged();
    #endregion
		
		public ReportServer()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReportId", DbType="NChar(3) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ReportId
		{
			get
			{
				return this._ReportId;
			}
			set
			{
				if ((this._ReportId != value))
				{
					this.OnReportIdChanging(value);
					this.SendPropertyChanging();
					this._ReportId = value;
					this.SendPropertyChanged("ReportId");
					this.OnReportIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TabContent", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string TabContent
		{
			get
			{
				return this._TabContent;
			}
			set
			{
				if ((this._TabContent != value))
				{
					this.OnTabContentChanging(value);
					this.SendPropertyChanging();
					this._TabContent = value;
					this.SendPropertyChanged("TabContent");
					this.OnTabContentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReportName", DbType="NVarChar(100)")]
		public string ReportName
		{
			get
			{
				return this._ReportName;
			}
			set
			{
				if ((this._ReportName != value))
				{
					this.OnReportNameChanging(value);
					this.SendPropertyChanging();
					this._ReportName = value;
					this.SendPropertyChanged("ReportName");
					this.OnReportNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InitTabContent", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string InitTabContent
		{
			get
			{
				return this._InitTabContent;
			}
			set
			{
				if ((this._InitTabContent != value))
				{
					this.OnInitTabContentChanging(value);
					this.SendPropertyChanging();
					this._InitTabContent = value;
					this.SendPropertyChanged("InitTabContent");
					this.OnInitTabContentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="projectId", Storage="_ProjectId", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ProjectId
		{
			get
			{
				return this._ProjectId;
			}
			set
			{
				if ((this._ProjectId != value))
				{
					this.OnProjectIdChanging(value);
					this.SendPropertyChanging();
					this._ProjectId = value;
					this.SendPropertyChanged("ProjectId");
					this.OnProjectIdChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Sys_ButtonPower")]
	public partial class Sys_ButtonPower : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ButtonPowerID;
		
		private string _RoleId;
		
		private string _MenuId;
		
		private string _ButtonToMenuId;
		
		private EntityRef<Sys_Menu> _Sys_Menu;
		
		private EntityRef<Sys_Role> _Sys_Role;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnButtonPowerIDChanging(string value);
    partial void OnButtonPowerIDChanged();
    partial void OnRoleIdChanging(string value);
    partial void OnRoleIdChanged();
    partial void OnMenuIdChanging(string value);
    partial void OnMenuIdChanged();
    partial void OnButtonToMenuIdChanging(string value);
    partial void OnButtonToMenuIdChanged();
    #endregion
		
		public Sys_ButtonPower()
		{
			this._Sys_Menu = default(EntityRef<Sys_Menu>);
			this._Sys_Role = default(EntityRef<Sys_Role>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ButtonPowerID", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ButtonPowerID
		{
			get
			{
				return this._ButtonPowerID;
			}
			set
			{
				if ((this._ButtonPowerID != value))
				{
					this.OnButtonPowerIDChanging(value);
					this.SendPropertyChanging();
					this._ButtonPowerID = value;
					this.SendPropertyChanged("ButtonPowerID");
					this.OnButtonPowerIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleId", DbType="NVarChar(50)")]
		public string RoleId
		{
			get
			{
				return this._RoleId;
			}
			set
			{
				if ((this._RoleId != value))
				{
					if (this._Sys_Role.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRoleIdChanging(value);
					this.SendPropertyChanging();
					this._RoleId = value;
					this.SendPropertyChanged("RoleId");
					this.OnRoleIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MenuId", DbType="NVarChar(50)")]
		public string MenuId
		{
			get
			{
				return this._MenuId;
			}
			set
			{
				if ((this._MenuId != value))
				{
					if (this._Sys_Menu.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMenuIdChanging(value);
					this.SendPropertyChanging();
					this._MenuId = value;
					this.SendPropertyChanged("MenuId");
					this.OnMenuIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ButtonToMenuId", DbType="NVarChar(50)")]
		public string ButtonToMenuId
		{
			get
			{
				return this._ButtonToMenuId;
			}
			set
			{
				if ((this._ButtonToMenuId != value))
				{
					this.OnButtonToMenuIdChanging(value);
					this.SendPropertyChanging();
					this._ButtonToMenuId = value;
					this.SendPropertyChanged("ButtonToMenuId");
					this.OnButtonToMenuIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Sys_ButtonPower_Sys_Menu", Storage="_Sys_Menu", ThisKey="MenuId", OtherKey="MenuId", IsForeignKey=true)]
		public Sys_Menu Sys_Menu
		{
			get
			{
				return this._Sys_Menu.Entity;
			}
			set
			{
				Sys_Menu previousValue = this._Sys_Menu.Entity;
				if (((previousValue != value) 
							|| (this._Sys_Menu.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Sys_Menu.Entity = null;
						previousValue.Sys_ButtonPower.Remove(this);
					}
					this._Sys_Menu.Entity = value;
					if ((value != null))
					{
						value.Sys_ButtonPower.Add(this);
						this._MenuId = value.MenuId;
					}
					else
					{
						this._MenuId = default(string);
					}
					this.SendPropertyChanged("Sys_Menu");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Sys_ButtonPower_Sys_Role", Storage="_Sys_Role", ThisKey="RoleId", OtherKey="RoleId", IsForeignKey=true)]
		public Sys_Role Sys_Role
		{
			get
			{
				return this._Sys_Role.Entity;
			}
			set
			{
				Sys_Role previousValue = this._Sys_Role.Entity;
				if (((previousValue != value) 
							|| (this._Sys_Role.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Sys_Role.Entity = null;
						previousValue.Sys_ButtonPower.Remove(this);
					}
					this._Sys_Role.Entity = value;
					if ((value != null))
					{
						value.Sys_ButtonPower.Add(this);
						this._RoleId = value.RoleId;
					}
					else
					{
						this._RoleId = default(string);
					}
					this.SendPropertyChanged("Sys_Role");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Sys_DataInTemp")]
	public partial class Sys_DataInTemp : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _TempId;
		
		private string _ProjectId;
		
		private string _UserId;
		
		private System.Nullable<System.DateTime> _Time;
		
		private System.Nullable<int> _RowNo;
		
		private string _Value1;
		
		private string _Value2;
		
		private string _Value3;
		
		private string _Value4;
		
		private string _Value5;
		
		private string _Value6;
		
		private string _Value7;
		
		private string _Value8;
		
		private string _Value9;
		
		private string _Value10;
		
		private string _Value11;
		
		private string _Value12;
		
		private string _Value13;
		
		private string _Value14;
		
		private string _Value15;
		
		private string _Value16;
		
		private string _Value17;
		
		private string _Value18;
		
		private string _Value19;
		
		private string _Value20;
		
		private string _Value21;
		
		private string _Value22;
		
		private string _Value23;
		
		private string _Value24;
		
		private string _Value25;
		
		private string _Value26;
		
		private string _Value27;
		
		private string _Value28;
		
		private string _Value29;
		
		private string _Value30;
		
		private string _Value31;
		
		private string _Value32;
		
		private string _Value33;
		
		private string _Value34;
		
		private string _Value35;
		
		private string _Value36;
		
		private string _Value37;
		
		private string _Value38;
		
		private string _Value39;
		
		private string _Value40;
		
		private string _Value41;
		
		private string _Value42;
		
		private string _Value43;
		
		private string _Value44;
		
		private string _Value45;
		
		private string _Value46;
		
		private string _Value47;
		
		private string _Value48;
		
		private string _Value49;
		
		private string _Value50;
		
		private string _ToopValue;
		
		private string _Value51;
		
		private string _Value52;
		
		private string _Value53;
		
		private string _Value54;
		
		private string _Value55;
		
		private string _Value56;
		
		private string _Value57;
		
		private string _Value58;
		
		private string _Value59;
		
		private string _Value60;
		
		private string _Value61;
		
		private string _Value62;
		
		private string _Value63;
		
		private string _Value64;
		
		private string _Value65;
		
		private string _Value66;
		
		private string _Value67;
		
		private string _Value68;
		
		private string _Value69;
		
		private string _Value70;
		
		private EntityRef<Base_Project> _Base_Project;
		
		private EntityRef<Sys_User> _Sys_User;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTempIdChanging(string value);
    partial void OnTempIdChanged();
    partial void OnProjectIdChanging(string value);
    partial void OnProjectIdChanged();
    partial void OnUserIdChanging(string value);
    partial void OnUserIdChanged();
    partial void OnTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnTimeChanged();
    partial void OnRowNoChanging(System.Nullable<int> value);
    partial void OnRowNoChanged();
    partial void OnValue1Changing(string value);
    partial void OnValue1Changed();
    partial void OnValue2Changing(string value);
    partial void OnValue2Changed();
    partial void OnValue3Changing(string value);
    partial void OnValue3Changed();
    partial void OnValue4Changing(string value);
    partial void OnValue4Changed();
    partial void OnValue5Changing(string value);
    partial void OnValue5Changed();
    partial void OnValue6Changing(string value);
    partial void OnValue6Changed();
    partial void OnValue7Changing(string value);
    partial void OnValue7Changed();
    partial void OnValue8Changing(string value);
    partial void OnValue8Changed();
    partial void OnValue9Changing(string value);
    partial void OnValue9Changed();
    partial void OnValue10Changing(string value);
    partial void OnValue10Changed();
    partial void OnValue11Changing(string value);
    partial void OnValue11Changed();
    partial void OnValue12Changing(string value);
    partial void OnValue12Changed();
    partial void OnValue13Changing(string value);
    partial void OnValue13Changed();
    partial void OnValue14Changing(string value);
    partial void OnValue14Changed();
    partial void OnValue15Changing(string value);
    partial void OnValue15Changed();
    partial void OnValue16Changing(string value);
    partial void OnValue16Changed();
    partial void OnValue17Changing(string value);
    partial void OnValue17Changed();
    partial void OnValue18Changing(string value);
    partial void OnValue18Changed();
    partial void OnValue19Changing(string value);
    partial void OnValue19Changed();
    partial void OnValue20Changing(string value);
    partial void OnValue20Changed();
    partial void OnValue21Changing(string value);
    partial void OnValue21Changed();
    partial void OnValue22Changing(string value);
    partial void OnValue22Changed();
    partial void OnValue23Changing(string value);
    partial void OnValue23Changed();
    partial void OnValue24Changing(string value);
    partial void OnValue24Changed();
    partial void OnValue25Changing(string value);
    partial void OnValue25Changed();
    partial void OnValue26Changing(string value);
    partial void OnValue26Changed();
    partial void OnValue27Changing(string value);
    partial void OnValue27Changed();
    partial void OnValue28Changing(string value);
    partial void OnValue28Changed();
    partial void OnValue29Changing(string value);
    partial void OnValue29Changed();
    partial void OnValue30Changing(string value);
    partial void OnValue30Changed();
    partial void OnValue31Changing(string value);
    partial void OnValue31Changed();
    partial void OnValue32Changing(string value);
    partial void OnValue32Changed();
    partial void OnValue33Changing(string value);
    partial void OnValue33Changed();
    partial void OnValue34Changing(string value);
    partial void OnValue34Changed();
    partial void OnValue35Changing(string value);
    partial void OnValue35Changed();
    partial void OnValue36Changing(string value);
    partial void OnValue36Changed();
    partial void OnValue37Changing(string value);
    partial void OnValue37Changed();
    partial void OnValue38Changing(string value);
    partial void OnValue38Changed();
    partial void OnValue39Changing(string value);
    partial void OnValue39Changed();
    partial void OnValue40Changing(string value);
    partial void OnValue40Changed();
    partial void OnValue41Changing(string value);
    partial void OnValue41Changed();
    partial void OnValue42Changing(string value);
    partial void OnValue42Changed();
    partial void OnValue43Changing(string value);
    partial void OnValue43Changed();
    partial void OnValue44Changing(string value);
    partial void OnValue44Changed();
    partial void OnValue45Changing(string value);
    partial void OnValue45Changed();
    partial void OnValue46Changing(string value);
    partial void OnValue46Changed();
    partial void OnValue47Changing(string value);
    partial void OnValue47Changed();
    partial void OnValue48Changing(string value);
    partial void OnValue48Changed();
    partial void OnValue49Changing(string value);
    partial void OnValue49Changed();
    partial void OnValue50Changing(string value);
    partial void OnValue50Changed();
    partial void OnToopValueChanging(string value);
    partial void OnToopValueChanged();
    partial void OnValue51Changing(string value);
    partial void OnValue51Changed();
    partial void OnValue52Changing(string value);
    partial void OnValue52Changed();
    partial void OnValue53Changing(string value);
    partial void OnValue53Changed();
    partial void OnValue54Changing(string value);
    partial void OnValue54Changed();
    partial void OnValue55Changing(string value);
    partial void OnValue55Changed();
    partial void OnValue56Changing(string value);
    partial void OnValue56Changed();
    partial void OnValue57Changing(string value);
    partial void OnValue57Changed();
    partial void OnValue58Changing(string value);
    partial void OnValue58Changed();
    partial void OnValue59Changing(string value);
    partial void OnValue59Changed();
    partial void OnValue60Changing(string value);
    partial void OnValue60Changed();
    partial void OnValue61Changing(string value);
    partial void OnValue61Changed();
    partial void OnValue62Changing(string value);
    partial void OnValue62Changed();
    partial void OnValue63Changing(string value);
    partial void OnValue63Changed();
    partial void OnValue64Changing(string value);
    partial void OnValue64Changed();
    partial void OnValue65Changing(string value);
    partial void OnValue65Changed();
    partial void OnValue66Changing(string value);
    partial void OnValue66Changed();
    partial void OnValue67Changing(string value);
    partial void OnValue67Changed();
    partial void OnValue68Changing(string value);
    partial void OnValue68Changed();
    partial void OnValue69Changing(string value);
    partial void OnValue69Changed();
    partial void OnValue70Changing(string value);
    partial void OnValue70Changed();
    #endregion
		
		public Sys_DataInTemp()
		{
			this._Base_Project = default(EntityRef<Base_Project>);
			this._Sys_User = default(EntityRef<Sys_User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TempId", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string TempId
		{
			get
			{
				return this._TempId;
			}
			set
			{
				if ((this._TempId != value))
				{
					this.OnTempIdChanging(value);
					this.SendPropertyChanging();
					this._TempId = value;
					this.SendPropertyChanged("TempId");
					this.OnTempIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProjectId", DbType="NVarChar(50)")]
		public string ProjectId
		{
			get
			{
				return this._ProjectId;
			}
			set
			{
				if ((this._ProjectId != value))
				{
					if (this._Base_Project.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProjectIdChanging(value);
					this.SendPropertyChanging();
					this._ProjectId = value;
					this.SendPropertyChanged("ProjectId");
					this.OnProjectIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="NVarChar(50)")]
		public string UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					if (this._Sys_User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Time", DbType="DateTime")]
		public System.Nullable<System.DateTime> Time
		{
			get
			{
				return this._Time;
			}
			set
			{
				if ((this._Time != value))
				{
					this.OnTimeChanging(value);
					this.SendPropertyChanging();
					this._Time = value;
					this.SendPropertyChanged("Time");
					this.OnTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RowNo", DbType="Int")]
		public System.Nullable<int> RowNo
		{
			get
			{
				return this._RowNo;
			}
			set
			{
				if ((this._RowNo != value))
				{
					this.OnRowNoChanging(value);
					this.SendPropertyChanging();
					this._RowNo = value;
					this.SendPropertyChanged("RowNo");
					this.OnRowNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Value1", DbType="NVarChar(100)")]
		public string Value1
		{
			get
			{
				return this._Value1;
			}
			set
			{
				if ((this._Value1 != value))
				{
					this.OnValue1Changing(value);
					this.SendPropertyChanging();
					this._Value1 = value;
					this.SendPropertyChanged("Value1");
					this.OnValue1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Value2", DbType="NVarChar(100)")]
		public string Value2
		{
			get
			{
				return this._Value2;
			}
			set
			{
				if ((this._Value2 != value))
				{
					this.OnValue2Changing(value);
					this.SendPropertyChanging();
					this._Value2 = value;
					this.SendPropertyChanged("Value2");
					this.OnValue2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Value3", DbType="NVarChar(100)")]
		public string Value3
		{
			get
			{
				return this._Value3;
			}
			set
			{
				if ((this._Value3 != value))
				{
					this.OnValue3Changing(value);
					this.SendPropertyChanging();
					this._Value3 = value;
					this.SendPropertyChanged("Value3");
					this.OnValue3Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Value4", DbType="NVarChar(100)")]
		public string Value4
		{
			get
			{
				return this._Value4;
			}
			set
			{
				if ((this._Value4 != value))
				{
					this.OnValue4Changing(value);
					this.SendPropertyChanging();
					this._Value4 = value;
					this.SendPropertyChanged("Value4");
					this.OnValue4Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Value5", DbType="NVarChar(100)")]
		public string Value5
		{
			get
			{
				return this._Value5;
			}
			set
			{
				if ((this._Value5 != value))
				{
					this.OnValue5Changing(value);
					this.SendPropertyChanging();
					this._Value5 = value;
					this.SendPropertyChanged("Value5");
					this.OnValue5Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Value6", DbType="NVarChar(100)")]
		public string Value6
		{
			get
			{
				return this._Value6;
			}
			set
			{
				if ((this._Value6 != value))
				{
					this.OnValue6Changing(value);
					this.SendPropertyChanging();
					this._Value6 = value;
					this.SendPropertyChanged("Value6");
					this.OnValue6Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Value7", DbType="NVarChar(100)")]
		public string Value7
		{
			get
			{
				return this._Value7;
			}
			set
			{
				if ((this._Value7 != value))
				{
					this.OnValue7Changing(value);
					this.SendPropertyChanging();
					this._Value7 = value;
					this.SendPropertyChanged("Value7");
					this.OnValue7Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Value8", DbType="NVarChar(100)")]
		public string Value8
		{
			get
			{
				return this._Value8;
			}
			set
			{
				if ((this._Value8 != value))
				{
					this.OnValue8Changing(value);
					this.SendPropertyChanging();
					this._Value8 = value;
					this.SendPropertyChanged("Value8");
					this.OnValue8Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Value9", DbType="NVarChar(100)")]
		public string Value9
		{
			get
			{
				return this._Value9;
			}
			set
			{
				if ((this._Value9 != value))
				{
					this.OnValue9Changing(value);
					this.SendPropertyChanging();
					this._Value9 = value;
					this.SendPropertyChanged("Value9");
					this.OnValue9Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Value10", DbType="NVarChar(100)")]
		public string Value10
		{
			get
			{
				return this._Value10;
			}
			set
			{
				if ((this._Value10 != value))
				{
					this.OnValue10Changing(value);
					this.SendPropertyChanging();
					this._Value10 = value;
					this.SendPropertyChanged("Value10");
					this.OnValue10Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Value11", DbType="NVarChar(100)")]
		public string Value11
		{
			get
			{
				return this._Value11;
			}
			set
			{
				if ((this._Value11 != value))
				{
					this.OnValue11Changing(value);
					this.SendPropertyChanging();
					this._Value11 = value;
					this.SendPropertyChanged("Value11");
					this.OnValue11Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Value12", DbType="NVarChar(100)")]
		public string Value12
		{
			get
			{
				return this._Value12;
			}
			set
			{
				if ((this._Value12 != value))
				{
					this.OnValue12Changing(value);
					this.SendPropertyChanging();
					this._Value12 = value;
					this.SendPropertyChanged("Value12");
					this.OnValue12Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Value13", DbType="NVarChar(100)")]
		public string Value13
		{
			get
			{
				return this._Value13;
			}
			set
			{
				if ((this._Value13 != value))
				{
					this.OnValue13Changing(value);
					this.SendPropertyChanging();
					this._Value13 = value;
					this.SendPropertyChanged("Value13");
					this.OnValue13Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Value14", DbType="NVarChar(100)")]
		public string Value14
		{
			get
			{
				return this._Value14;
			}
			set
			{
				if ((this._Value14 != value))
				{
					this.OnValue14Changing(value);
					this.SendPropertyChanging();
					this._Value14 = value;
					this.SendPropertyChanged("Value14");
					this.OnValue14Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Value15", DbType="NVarChar(100)")]
		public string Value15
		{
			get
			{
				return this._Value15;
			}
			set
			{
				if ((this._Value15 != value))
				{
					this.OnValue15Changing(value);
					this.SendPropertyChanging();
					this._Value15 = value;
					this.SendPropertyChanged("Value15");
					this.OnValue15Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Value16", DbType="NVarChar(100)")]
		public string Value16
		{
			get
			{
				return this._Value16;
			}
			set
			{
				if ((this._Value16 != value))
				{
					this.OnValue16Changing(value);
					this.SendPropertyChanging();
					this._Value16 = value;
					this.SendPropertyChanged("Value16");
					this.OnValue16Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Value17", DbType="NVarChar(100)")]
		public string Value17
		{
			get
			{
				return this._Value17;
			}
			set
			{
				if ((this._Value17 != value))
				{
					this.OnValue17Changing(value);
					this.SendPropertyChanging();
					this._Value17 = value;
					this.SendPropertyChanged("Value17");
					this.OnValue17Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Value18", DbType="NVarChar(100)")]
		public string Value18
		{
			get
			{
				return this._Value18;
			}
			set
			{
				if ((this._Value18 != value))
				{
					this.OnValue18Changing(value);
					this.SendPropertyChanging();
					this._Value18 = value;
					this.SendPropertyChanged("Value18");
					this.OnValue18Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Value19", DbType="NVarChar(100)")]
		public string Value19
		{
			get
			{
				return this._Value19;
			}
			set
			{
				if ((this._Value19 != value))
				{
					this.OnValue19Changing(value);
					this.SendPropertyChanging();
					this._Value19 = value;
					this.SendPropertyChanged("Value19");
					this.OnValue19Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Value20", DbType="NVarChar(100)")]
		public string Value20
		{
			get
			{
				return this._Value20;
			}
			set
			{
				if ((this._Value20 != value))
				{
					this.OnValue20Changing(value);
					this.SendPropertyChanging();
					this._Value20 = value;
					this.SendPropertyChanged("Value20");
					this.OnValue20Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Value21", DbType="NVarChar(100)")]
		public string Value21
		{
			get
			{
				return this._Value21;
			}
			set
			{
				if ((this._Value21 != value))
				{
					this.OnValue21Changing(value);
					this.SendPropertyChanging();
					this._Value21 = value;
					this.SendPropertyChanged("Value21");
					this.OnValue21Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Value22", DbType="NVarChar(100)")]
		public string Value22
		{
			get
			{
				return this._Value22;
			}
			set
			{
				if ((this._Value22 != value))
				{
					this.OnValue22Changing(value);
					this.SendPropertyChanging();
					this._Value22 = value;
					this.SendPropertyChanged("Value22");
					this.OnValue22Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Value23", DbType="NVarChar(100)")]
		public string Value23
		{
			get
			{
				return this._Value23;
			}
			set
			{
				if ((this._Value23 != value))
				{
					this.OnValue23Changing(value);
					this.SendPropertyChanging();
					this._Value23 = value;
					this.SendPropertyChanged("Value23");
					this.OnValue23Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Value24", DbType="NVarChar(100)")]
		public string Value24
		{
			get
			{
				return this._Value24;
			}
			set
			{
				if ((this._Value24 != value))
				{
					this.OnValue24Changing(value);
					this.SendPropertyChanging();
					this._Value24 = value;
					this.SendPropertyChanged("Value24");
					this.OnValue24Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Value25", DbType="NVarChar(100)")]
		public string Value25
		{
			get
			{
				return this._Value25;
			}
			set
			{
				if ((this._Value25 != value))
				{
					this.OnValue25Changing(value);
					this.SendPropertyChanging();
					this._Value25 = value;
					this.SendPropertyChanged("Value25");
					this.OnValue25Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Value26", DbType="NVarChar(100)")]
		public string Value26
		{
			get
			{
				return this._Value26;
			}
			set
			{
				if ((this._Value26 != value))
				{
					this.OnValue26Changing(value);
					this.SendPropertyChanging();
					this._Value26 = value;
					this.SendPropertyChanged("Value26");
					this.OnValue26Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Value27", DbType="NVarChar(100)")]
		public string Value27
		{
			get
			{
				return this._Value27;
			}
			set
			{
				if ((this._Value27 != value))
				{
					this.OnValue27Changing(value);
					this.SendPropertyChanging();
					this._Value27 = value;
					this.SendPropertyChanged("Value27");
					this.OnValue27Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Value28", DbType="NVarChar(100)")]
		public string Value28
		{
			get
			{
				return this._Value28;
			}
			set
			{
				if ((this._Value28 != value))
				{
					this.OnValue28Changing(value);
					this.SendPropertyChanging();
					this._Value28 = value;
					this.SendPropertyChanged("Value28");
					this.OnValue28Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Value29", DbType="NVarChar(100)")]
		public string Value29
		{
			get
			{
				return this._Value29;
			}
			set
			{
				if ((this._Value29 != value))
				{
					this.OnValue29Changing(value);
					this.SendPropertyChanging();
					this._Value29 = value;
					this.SendPropertyChanged("Value29");
					this.OnValue29Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Value30", DbType="NVarChar(100)")]
		public string Value30
		{
			get
			{
				return this._Value30;
			}
			set
			{
				if ((this._Value30 != value))
				{
					this.OnValue30Changing(value);
					this.SendPropertyChanging();
					this._Value30 = value;
					this.SendPropertyChanged("Value30");
					this.OnValue30Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Value31", DbType="NVarChar(100)")]
		public string Value31
		{
			get
			{
				return this._Value31;
			}
			set
			{
				if ((this._Value31 != value))
				{
					this.OnValue31Changing(value);
					this.SendPropertyChanging();
					this._Value31 = value;
					this.SendPropertyChanged("Value31");
					this.OnValue31Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Value32", DbType="NVarChar(100)")]
		public string Value32
		{
			get
			{
				return this._Value32;
			}
			set
			{
				if ((this._Value32 != value))
				{
					this.OnValue32Changing(value);
					this.SendPropertyChanging();
					this._Value32 = value;
					this.SendPropertyChanged("Value32");
					this.OnValue32Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Value33", DbType="NVarChar(100)")]
		public string Value33
		{
			get
			{
				return this._Value33;
			}
			set
			{
				if ((this._Value33 != value))
				{
					this.OnValue33Changing(value);
					this.SendPropertyChanging();
					this._Value33 = value;
					this.SendPropertyChanged("Value33");
					this.OnValue33Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Value34", DbType="NVarChar(100)")]
		public string Value34
		{
			get
			{
				return this._Value34;
			}
			set
			{
				if ((this._Value34 != value))
				{
					this.OnValue34Changing(value);
					this.SendPropertyChanging();
					this._Value34 = value;
					this.SendPropertyChanged("Value34");
					this.OnValue34Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Value35", DbType="NVarChar(100)")]
		public string Value35
		{
			get
			{
				return this._Value35;
			}
			set
			{
				if ((this._Value35 != value))
				{
					this.OnValue35Changing(value);
					this.SendPropertyChanging();
					this._Value35 = value;
					this.SendPropertyChanged("Value35");
					this.OnValue35Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Value36", DbType="NVarChar(100)")]
		public string Value36
		{
			get
			{
				return this._Value36;
			}
			set
			{
				if ((this._Value36 != value))
				{
					this.OnValue36Changing(value);
					this.SendPropertyChanging();
					this._Value36 = value;
					this.SendPropertyChanged("Value36");
					this.OnValue36Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Value37", DbType="NVarChar(100)")]
		public string Value37
		{
			get
			{
				return this._Value37;
			}
			set
			{
				if ((this._Value37 != value))
				{
					this.OnValue37Changing(value);
					this.SendPropertyChanging();
					this._Value37 = value;
					this.SendPropertyChanged("Value37");
					this.OnValue37Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Value38", DbType="NVarChar(100)")]
		public string Value38
		{
			get
			{
				return this._Value38;
			}
			set
			{
				if ((this._Value38 != value))
				{
					this.OnValue38Changing(value);
					this.SendPropertyChanging();
					this._Value38 = value;
					this.SendPropertyChanged("Value38");
					this.OnValue38Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Value39", DbType="NVarChar(100)")]
		public string Value39
		{
			get
			{
				return this._Value39;
			}
			set
			{
				if ((this._Value39 != value))
				{
					this.OnValue39Changing(value);
					this.SendPropertyChanging();
					this._Value39 = value;
					this.SendPropertyChanged("Value39");
					this.OnValue39Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Value40", DbType="NVarChar(100)")]
		public string Value40
		{
			get
			{
				return this._Value40;
			}
			set
			{
				if ((this._Value40 != value))
				{
					this.OnValue40Changing(value);
					this.SendPropertyChanging();
					this._Value40 = value;
					this.SendPropertyChanged("Value40");
					this.OnValue40Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Value41", DbType="NVarChar(100)")]
		public string Value41
		{
			get
			{
				return this._Value41;
			}
			set
			{
				if ((this._Value41 != value))
				{
					this.OnValue41Changing(value);
					this.SendPropertyChanging();
					this._Value41 = value;
					this.SendPropertyChanged("Value41");
					this.OnValue41Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Value42", DbType="NVarChar(100)")]
		public string Value42
		{
			get
			{
				return this._Value42;
			}
			set
			{
				if ((this._Value42 != value))
				{
					this.OnValue42Changing(value);
					this.SendPropertyChanging();
					this._Value42 = value;
					this.SendPropertyChanged("Value42");
					this.OnValue42Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Value43", DbType="NVarChar(100)")]
		public string Value43
		{
			get
			{
				return this._Value43;
			}
			set
			{
				if ((this._Value43 != value))
				{
					this.OnValue43Changing(value);
					this.SendPropertyChanging();
					this._Value43 = value;
					this.SendPropertyChanged("Value43");
					this.OnValue43Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Value44", DbType="NVarChar(100)")]
		public string Value44
		{
			get
			{
				return this._Value44;
			}
			set
			{
				if ((this._Value44 != value))
				{
					this.OnValue44Changing(value);
					this.SendPropertyChanging();
					this._Value44 = value;
					this.SendPropertyChanged("Value44");
					this.OnValue44Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Value45", DbType="NVarChar(100)")]
		public string Value45
		{
			get
			{
				return this._Value45;
			}
			set
			{
				if ((this._Value45 != value))
				{
					this.OnValue45Changing(value);
					this.SendPropertyChanging();
					this._Value45 = value;
					this.SendPropertyChanged("Value45");
					this.OnValue45Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Value46", DbType="NVarChar(100)")]
		public string Value46
		{
			get
			{
				return this._Value46;
			}
			set
			{
				if ((this._Value46 != value))
				{
					this.OnValue46Changing(value);
					this.SendPropertyChanging();
					this._Value46 = value;
					this.SendPropertyChanged("Value46");
					this.OnValue46Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Value47", DbType="NVarChar(100)")]
		public string Value47
		{
			get
			{
				return this._Value47;
			}
			set
			{
				if ((this._Value47 != value))
				{
					this.OnValue47Changing(value);
					this.SendPropertyChanging();
					this._Value47 = value;
					this.SendPropertyChanged("Value47");
					this.OnValue47Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Value48", DbType="NVarChar(100)")]
		public string Value48
		{
			get
			{
				return this._Value48;
			}
			set
			{
				if ((this._Value48 != value))
				{
					this.OnValue48Changing(value);
					this.SendPropertyChanging();
					this._Value48 = value;
					this.SendPropertyChanged("Value48");
					this.OnValue48Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Value49", DbType="NVarChar(100)")]
		public string Value49
		{
			get
			{
				return this._Value49;
			}
			set
			{
				if ((this._Value49 != value))
				{
					this.OnValue49Changing(value);
					this.SendPropertyChanging();
					this._Value49 = value;
					this.SendPropertyChanged("Value49");
					this.OnValue49Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Value50", DbType="NVarChar(100)")]
		public string Value50
		{
			get
			{
				return this._Value50;
			}
			set
			{
				if ((this._Value50 != value))
				{
					this.OnValue50Changing(value);
					this.SendPropertyChanging();
					this._Value50 = value;
					this.SendPropertyChanged("Value50");
					this.OnValue50Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ToopValue", DbType="NVarChar(4000)")]
		public string ToopValue
		{
			get
			{
				return this._ToopValue;
			}
			set
			{
				if ((this._ToopValue != value))
				{
					this.OnToopValueChanging(value);
					this.SendPropertyChanging();
					this._ToopValue = value;
					this.SendPropertyChanged("ToopValue");
					this.OnToopValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Value51", DbType="NVarChar(100)")]
		public string Value51
		{
			get
			{
				return this._Value51;
			}
			set
			{
				if ((this._Value51 != value))
				{
					this.OnValue51Changing(value);
					this.SendPropertyChanging();
					this._Value51 = value;
					this.SendPropertyChanged("Value51");
					this.OnValue51Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Value52", DbType="NVarChar(100)")]
		public string Value52
		{
			get
			{
				return this._Value52;
			}
			set
			{
				if ((this._Value52 != value))
				{
					this.OnValue52Changing(value);
					this.SendPropertyChanging();
					this._Value52 = value;
					this.SendPropertyChanged("Value52");
					this.OnValue52Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Value53", DbType="NVarChar(100)")]
		public string Value53
		{
			get
			{
				return this._Value53;
			}
			set
			{
				if ((this._Value53 != value))
				{
					this.OnValue53Changing(value);
					this.SendPropertyChanging();
					this._Value53 = value;
					this.SendPropertyChanged("Value53");
					this.OnValue53Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Value54", DbType="NVarChar(100)")]
		public string Value54
		{
			get
			{
				return this._Value54;
			}
			set
			{
				if ((this._Value54 != value))
				{
					this.OnValue54Changing(value);
					this.SendPropertyChanging();
					this._Value54 = value;
					this.SendPropertyChanged("Value54");
					this.OnValue54Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Value55", DbType="NVarChar(100)")]
		public string Value55
		{
			get
			{
				return this._Value55;
			}
			set
			{
				if ((this._Value55 != value))
				{
					this.OnValue55Changing(value);
					this.SendPropertyChanging();
					this._Value55 = value;
					this.SendPropertyChanged("Value55");
					this.OnValue55Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Value56", DbType="NVarChar(100)")]
		public string Value56
		{
			get
			{
				return this._Value56;
			}
			set
			{
				if ((this._Value56 != value))
				{
					this.OnValue56Changing(value);
					this.SendPropertyChanging();
					this._Value56 = value;
					this.SendPropertyChanged("Value56");
					this.OnValue56Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Value57", DbType="NVarChar(100)")]
		public string Value57
		{
			get
			{
				return this._Value57;
			}
			set
			{
				if ((this._Value57 != value))
				{
					this.OnValue57Changing(value);
					this.SendPropertyChanging();
					this._Value57 = value;
					this.SendPropertyChanged("Value57");
					this.OnValue57Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Value58", DbType="NVarChar(100)")]
		public string Value58
		{
			get
			{
				return this._Value58;
			}
			set
			{
				if ((this._Value58 != value))
				{
					this.OnValue58Changing(value);
					this.SendPropertyChanging();
					this._Value58 = value;
					this.SendPropertyChanged("Value58");
					this.OnValue58Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Value59", DbType="NVarChar(100)")]
		public string Value59
		{
			get
			{
				return this._Value59;
			}
			set
			{
				if ((this._Value59 != value))
				{
					this.OnValue59Changing(value);
					this.SendPropertyChanging();
					this._Value59 = value;
					this.SendPropertyChanged("Value59");
					this.OnValue59Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Value60", DbType="NVarChar(100)")]
		public string Value60
		{
			get
			{
				return this._Value60;
			}
			set
			{
				if ((this._Value60 != value))
				{
					this.OnValue60Changing(value);
					this.SendPropertyChanging();
					this._Value60 = value;
					this.SendPropertyChanged("Value60");
					this.OnValue60Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Value61", DbType="NVarChar(100)")]
		public string Value61
		{
			get
			{
				return this._Value61;
			}
			set
			{
				if ((this._Value61 != value))
				{
					this.OnValue61Changing(value);
					this.SendPropertyChanging();
					this._Value61 = value;
					this.SendPropertyChanged("Value61");
					this.OnValue61Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Value62", DbType="NVarChar(100)")]
		public string Value62
		{
			get
			{
				return this._Value62;
			}
			set
			{
				if ((this._Value62 != value))
				{
					this.OnValue62Changing(value);
					this.SendPropertyChanging();
					this._Value62 = value;
					this.SendPropertyChanged("Value62");
					this.OnValue62Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Value63", DbType="NVarChar(100)")]
		public string Value63
		{
			get
			{
				return this._Value63;
			}
			set
			{
				if ((this._Value63 != value))
				{
					this.OnValue63Changing(value);
					this.SendPropertyChanging();
					this._Value63 = value;
					this.SendPropertyChanged("Value63");
					this.OnValue63Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Value64", DbType="NVarChar(100)")]
		public string Value64
		{
			get
			{
				return this._Value64;
			}
			set
			{
				if ((this._Value64 != value))
				{
					this.OnValue64Changing(value);
					this.SendPropertyChanging();
					this._Value64 = value;
					this.SendPropertyChanged("Value64");
					this.OnValue64Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Value65", DbType="NVarChar(100)")]
		public string Value65
		{
			get
			{
				return this._Value65;
			}
			set
			{
				if ((this._Value65 != value))
				{
					this.OnValue65Changing(value);
					this.SendPropertyChanging();
					this._Value65 = value;
					this.SendPropertyChanged("Value65");
					this.OnValue65Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Value66", DbType="NVarChar(100)")]
		public string Value66
		{
			get
			{
				return this._Value66;
			}
			set
			{
				if ((this._Value66 != value))
				{
					this.OnValue66Changing(value);
					this.SendPropertyChanging();
					this._Value66 = value;
					this.SendPropertyChanged("Value66");
					this.OnValue66Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Value67", DbType="NVarChar(100)")]
		public string Value67
		{
			get
			{
				return this._Value67;
			}
			set
			{
				if ((this._Value67 != value))
				{
					this.OnValue67Changing(value);
					this.SendPropertyChanging();
					this._Value67 = value;
					this.SendPropertyChanged("Value67");
					this.OnValue67Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Value68", DbType="NVarChar(100)")]
		public string Value68
		{
			get
			{
				return this._Value68;
			}
			set
			{
				if ((this._Value68 != value))
				{
					this.OnValue68Changing(value);
					this.SendPropertyChanging();
					this._Value68 = value;
					this.SendPropertyChanged("Value68");
					this.OnValue68Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Value69", DbType="NVarChar(100)")]
		public string Value69
		{
			get
			{
				return this._Value69;
			}
			set
			{
				if ((this._Value69 != value))
				{
					this.OnValue69Changing(value);
					this.SendPropertyChanging();
					this._Value69 = value;
					this.SendPropertyChanged("Value69");
					this.OnValue69Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Value70", DbType="NVarChar(100)")]
		public string Value70
		{
			get
			{
				return this._Value70;
			}
			set
			{
				if ((this._Value70 != value))
				{
					this.OnValue70Changing(value);
					this.SendPropertyChanging();
					this._Value70 = value;
					this.SendPropertyChanged("Value70");
					this.OnValue70Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Sys_DataInTemp_Base_Project", Storage="_Base_Project", ThisKey="ProjectId", OtherKey="ProjectId", IsForeignKey=true)]
		public Base_Project Base_Project
		{
			get
			{
				return this._Base_Project.Entity;
			}
			set
			{
				Base_Project previousValue = this._Base_Project.Entity;
				if (((previousValue != value) 
							|| (this._Base_Project.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Base_Project.Entity = null;
						previousValue.Sys_DataInTemp.Remove(this);
					}
					this._Base_Project.Entity = value;
					if ((value != null))
					{
						value.Sys_DataInTemp.Add(this);
						this._ProjectId = value.ProjectId;
					}
					else
					{
						this._ProjectId = default(string);
					}
					this.SendPropertyChanged("Base_Project");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Sys_DataInTemp_Sys_User", Storage="_Sys_User", ThisKey="UserId", OtherKey="UserId", IsForeignKey=true)]
		public Sys_User Sys_User
		{
			get
			{
				return this._Sys_User.Entity;
			}
			set
			{
				Sys_User previousValue = this._Sys_User.Entity;
				if (((previousValue != value) 
							|| (this._Sys_User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Sys_User.Entity = null;
						previousValue.Sys_DataInTemp.Remove(this);
					}
					this._Sys_User.Entity = value;
					if ((value != null))
					{
						value.Sys_DataInTemp.Add(this);
						this._UserId = value.UserId;
					}
					else
					{
						this._UserId = default(string);
					}
					this.SendPropertyChanged("Sys_User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Sys_ErrLogInfo")]
	public partial class Sys_ErrLogInfo : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ErrLogId;
		
		private string _ErrType;
		
		private string _ErrMessage;
		
		private string _ErrStackTrace;
		
		private System.Nullable<System.DateTime> _ErrTime;
		
		private string _ErrUrl;
		
		private string _ErrIP;
		
		private string _UserName;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnErrLogIdChanging(string value);
    partial void OnErrLogIdChanged();
    partial void OnErrTypeChanging(string value);
    partial void OnErrTypeChanged();
    partial void OnErrMessageChanging(string value);
    partial void OnErrMessageChanged();
    partial void OnErrStackTraceChanging(string value);
    partial void OnErrStackTraceChanged();
    partial void OnErrTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnErrTimeChanged();
    partial void OnErrUrlChanging(string value);
    partial void OnErrUrlChanged();
    partial void OnErrIPChanging(string value);
    partial void OnErrIPChanged();
    partial void OnUserNameChanging(string value);
    partial void OnUserNameChanged();
    #endregion
		
		public Sys_ErrLogInfo()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ErrLogId", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ErrLogId
		{
			get
			{
				return this._ErrLogId;
			}
			set
			{
				if ((this._ErrLogId != value))
				{
					this.OnErrLogIdChanging(value);
					this.SendPropertyChanging();
					this._ErrLogId = value;
					this.SendPropertyChanged("ErrLogId");
					this.OnErrLogIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ErrType", DbType="NVarChar(500)")]
		public string ErrType
		{
			get
			{
				return this._ErrType;
			}
			set
			{
				if ((this._ErrType != value))
				{
					this.OnErrTypeChanging(value);
					this.SendPropertyChanging();
					this._ErrType = value;
					this.SendPropertyChanged("ErrType");
					this.OnErrTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ErrMessage", DbType="NVarChar(2000)")]
		public string ErrMessage
		{
			get
			{
				return this._ErrMessage;
			}
			set
			{
				if ((this._ErrMessage != value))
				{
					this.OnErrMessageChanging(value);
					this.SendPropertyChanging();
					this._ErrMessage = value;
					this.SendPropertyChanged("ErrMessage");
					this.OnErrMessageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ErrStackTrace", DbType="NVarChar(MAX)", UpdateCheck=UpdateCheck.Never)]
		public string ErrStackTrace
		{
			get
			{
				return this._ErrStackTrace;
			}
			set
			{
				if ((this._ErrStackTrace != value))
				{
					this.OnErrStackTraceChanging(value);
					this.SendPropertyChanging();
					this._ErrStackTrace = value;
					this.SendPropertyChanged("ErrStackTrace");
					this.OnErrStackTraceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ErrTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> ErrTime
		{
			get
			{
				return this._ErrTime;
			}
			set
			{
				if ((this._ErrTime != value))
				{
					this.OnErrTimeChanging(value);
					this.SendPropertyChanging();
					this._ErrTime = value;
					this.SendPropertyChanged("ErrTime");
					this.OnErrTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ErrUrl", DbType="NVarChar(800)")]
		public string ErrUrl
		{
			get
			{
				return this._ErrUrl;
			}
			set
			{
				if ((this._ErrUrl != value))
				{
					this.OnErrUrlChanging(value);
					this.SendPropertyChanging();
					this._ErrUrl = value;
					this.SendPropertyChanged("ErrUrl");
					this.OnErrUrlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ErrIP", DbType="NVarChar(50)")]
		public string ErrIP
		{
			get
			{
				return this._ErrIP;
			}
			set
			{
				if ((this._ErrIP != value))
				{
					this.OnErrIPChanging(value);
					this.SendPropertyChanging();
					this._ErrIP = value;
					this.SendPropertyChanged("ErrIP");
					this.OnErrIPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="NVarChar(50)")]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this.OnUserNameChanging(value);
					this.SendPropertyChanging();
					this._UserName = value;
					this.SendPropertyChanged("UserName");
					this.OnUserNameChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Sys_Log")]
	public partial class Sys_Log : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _LogId;
		
		private string _UserId;
		
		private System.Nullable<System.DateTime> _OperationTime;
		
		private string _Ip;
		
		private string _HostName;
		
		private string _OperationLog;
		
		private EntityRef<Sys_User> _Sys_User;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnLogIdChanging(string value);
    partial void OnLogIdChanged();
    partial void OnUserIdChanging(string value);
    partial void OnUserIdChanged();
    partial void OnOperationTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnOperationTimeChanged();
    partial void OnIpChanging(string value);
    partial void OnIpChanged();
    partial void OnHostNameChanging(string value);
    partial void OnHostNameChanged();
    partial void OnOperationLogChanging(string value);
    partial void OnOperationLogChanged();
    #endregion
		
		public Sys_Log()
		{
			this._Sys_User = default(EntityRef<Sys_User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LogId", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string LogId
		{
			get
			{
				return this._LogId;
			}
			set
			{
				if ((this._LogId != value))
				{
					this.OnLogIdChanging(value);
					this.SendPropertyChanging();
					this._LogId = value;
					this.SendPropertyChanged("LogId");
					this.OnLogIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="NVarChar(50)")]
		public string UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					if (this._Sys_User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OperationTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> OperationTime
		{
			get
			{
				return this._OperationTime;
			}
			set
			{
				if ((this._OperationTime != value))
				{
					this.OnOperationTimeChanging(value);
					this.SendPropertyChanging();
					this._OperationTime = value;
					this.SendPropertyChanged("OperationTime");
					this.OnOperationTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ip", DbType="NVarChar(200)")]
		public string Ip
		{
			get
			{
				return this._Ip;
			}
			set
			{
				if ((this._Ip != value))
				{
					this.OnIpChanging(value);
					this.SendPropertyChanging();
					this._Ip = value;
					this.SendPropertyChanged("Ip");
					this.OnIpChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HostName", DbType="NVarChar(500)")]
		public string HostName
		{
			get
			{
				return this._HostName;
			}
			set
			{
				if ((this._HostName != value))
				{
					this.OnHostNameChanging(value);
					this.SendPropertyChanging();
					this._HostName = value;
					this.SendPropertyChanged("HostName");
					this.OnHostNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OperationLog", DbType="NVarChar(200)")]
		public string OperationLog
		{
			get
			{
				return this._OperationLog;
			}
			set
			{
				if ((this._OperationLog != value))
				{
					this.OnOperationLogChanging(value);
					this.SendPropertyChanging();
					this._OperationLog = value;
					this.SendPropertyChanged("OperationLog");
					this.OnOperationLogChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Sys_Log_Sys_User", Storage="_Sys_User", ThisKey="UserId", OtherKey="UserId", IsForeignKey=true)]
		public Sys_User Sys_User
		{
			get
			{
				return this._Sys_User.Entity;
			}
			set
			{
				Sys_User previousValue = this._Sys_User.Entity;
				if (((previousValue != value) 
							|| (this._Sys_User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Sys_User.Entity = null;
						previousValue.Sys_Log.Remove(this);
					}
					this._Sys_User.Entity = value;
					if ((value != null))
					{
						value.Sys_Log.Add(this);
						this._UserId = value.UserId;
					}
					else
					{
						this._UserId = default(string);
					}
					this.SendPropertyChanged("Sys_User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Sys_Menu")]
	public partial class Sys_Menu : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MenuId;
		
		private string _MenuName;
		
		private string _Url;
		
		private System.Nullable<short> _SortIndex;
		
		private string _SuperMenu;
		
		private EntitySet<ButtonToMenu> _ButtonToMenu;
		
		private EntitySet<Sys_ButtonPower> _Sys_ButtonPower;
		
		private EntitySet<Sys_RolePower> _Sys_RolePower;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMenuIdChanging(string value);
    partial void OnMenuIdChanged();
    partial void OnMenuNameChanging(string value);
    partial void OnMenuNameChanged();
    partial void OnUrlChanging(string value);
    partial void OnUrlChanged();
    partial void OnSortIndexChanging(System.Nullable<short> value);
    partial void OnSortIndexChanged();
    partial void OnSuperMenuChanging(string value);
    partial void OnSuperMenuChanged();
    #endregion
		
		public Sys_Menu()
		{
			this._ButtonToMenu = new EntitySet<ButtonToMenu>(new Action<ButtonToMenu>(this.attach_ButtonToMenu), new Action<ButtonToMenu>(this.detach_ButtonToMenu));
			this._Sys_ButtonPower = new EntitySet<Sys_ButtonPower>(new Action<Sys_ButtonPower>(this.attach_Sys_ButtonPower), new Action<Sys_ButtonPower>(this.detach_Sys_ButtonPower));
			this._Sys_RolePower = new EntitySet<Sys_RolePower>(new Action<Sys_RolePower>(this.attach_Sys_RolePower), new Action<Sys_RolePower>(this.detach_Sys_RolePower));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MenuId", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MenuId
		{
			get
			{
				return this._MenuId;
			}
			set
			{
				if ((this._MenuId != value))
				{
					this.OnMenuIdChanging(value);
					this.SendPropertyChanging();
					this._MenuId = value;
					this.SendPropertyChanged("MenuId");
					this.OnMenuIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MenuName", DbType="NVarChar(50)")]
		public string MenuName
		{
			get
			{
				return this._MenuName;
			}
			set
			{
				if ((this._MenuName != value))
				{
					this.OnMenuNameChanging(value);
					this.SendPropertyChanging();
					this._MenuName = value;
					this.SendPropertyChanged("MenuName");
					this.OnMenuNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Url", DbType="NVarChar(60)")]
		public string Url
		{
			get
			{
				return this._Url;
			}
			set
			{
				if ((this._Url != value))
				{
					this.OnUrlChanging(value);
					this.SendPropertyChanging();
					this._Url = value;
					this.SendPropertyChanged("Url");
					this.OnUrlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SortIndex", DbType="SmallInt")]
		public System.Nullable<short> SortIndex
		{
			get
			{
				return this._SortIndex;
			}
			set
			{
				if ((this._SortIndex != value))
				{
					this.OnSortIndexChanging(value);
					this.SendPropertyChanging();
					this._SortIndex = value;
					this.SendPropertyChanged("SortIndex");
					this.OnSortIndexChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SuperMenu", DbType="NVarChar(50)")]
		public string SuperMenu
		{
			get
			{
				return this._SuperMenu;
			}
			set
			{
				if ((this._SuperMenu != value))
				{
					this.OnSuperMenuChanging(value);
					this.SendPropertyChanging();
					this._SuperMenu = value;
					this.SendPropertyChanged("SuperMenu");
					this.OnSuperMenuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_ButtonToMenu_Sys_Menu", Storage="_ButtonToMenu", ThisKey="MenuId", OtherKey="MenuId", DeleteRule="NO ACTION")]
		public EntitySet<ButtonToMenu> ButtonToMenu
		{
			get
			{
				return this._ButtonToMenu;
			}
			set
			{
				this._ButtonToMenu.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Sys_ButtonPower_Sys_Menu", Storage="_Sys_ButtonPower", ThisKey="MenuId", OtherKey="MenuId", DeleteRule="NO ACTION")]
		public EntitySet<Sys_ButtonPower> Sys_ButtonPower
		{
			get
			{
				return this._Sys_ButtonPower;
			}
			set
			{
				this._Sys_ButtonPower.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Sys_RolePower_Sys_Menu", Storage="_Sys_RolePower", ThisKey="MenuId", OtherKey="MenuId", DeleteRule="NO ACTION")]
		public EntitySet<Sys_RolePower> Sys_RolePower
		{
			get
			{
				return this._Sys_RolePower;
			}
			set
			{
				this._Sys_RolePower.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ButtonToMenu(ButtonToMenu entity)
		{
			this.SendPropertyChanging();
			entity.Sys_Menu = this;
		}
		
		private void detach_ButtonToMenu(ButtonToMenu entity)
		{
			this.SendPropertyChanging();
			entity.Sys_Menu = null;
		}
		
		private void attach_Sys_ButtonPower(Sys_ButtonPower entity)
		{
			this.SendPropertyChanging();
			entity.Sys_Menu = this;
		}
		
		private void detach_Sys_ButtonPower(Sys_ButtonPower entity)
		{
			this.SendPropertyChanging();
			entity.Sys_Menu = null;
		}
		
		private void attach_Sys_RolePower(Sys_RolePower entity)
		{
			this.SendPropertyChanging();
			entity.Sys_Menu = this;
		}
		
		private void detach_Sys_RolePower(Sys_RolePower entity)
		{
			this.SendPropertyChanging();
			entity.Sys_Menu = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Sys_Role")]
	public partial class Sys_Role : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _RoleId;
		
		private string _RoleName;
		
		private string _Def;
		
		private string _RoleType;
		
		private System.Nullable<int> _SortIndex;
		
		private System.Nullable<bool> _IsAuditFlow;
		
		private string _ProjectId;
		
		private EntitySet<Sys_ButtonPower> _Sys_ButtonPower;
		
		private EntityRef<Base_Project> _Base_Project;
		
		private EntitySet<Sys_RolePower> _Sys_RolePower;
		
		private EntitySet<Sys_User> _Sys_User;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRoleIdChanging(string value);
    partial void OnRoleIdChanged();
    partial void OnRoleNameChanging(string value);
    partial void OnRoleNameChanged();
    partial void OnDefChanging(string value);
    partial void OnDefChanged();
    partial void OnRoleTypeChanging(string value);
    partial void OnRoleTypeChanged();
    partial void OnSortIndexChanging(System.Nullable<int> value);
    partial void OnSortIndexChanged();
    partial void OnIsAuditFlowChanging(System.Nullable<bool> value);
    partial void OnIsAuditFlowChanged();
    partial void OnProjectIdChanging(string value);
    partial void OnProjectIdChanged();
    #endregion
		
		public Sys_Role()
		{
			this._Sys_ButtonPower = new EntitySet<Sys_ButtonPower>(new Action<Sys_ButtonPower>(this.attach_Sys_ButtonPower), new Action<Sys_ButtonPower>(this.detach_Sys_ButtonPower));
			this._Base_Project = default(EntityRef<Base_Project>);
			this._Sys_RolePower = new EntitySet<Sys_RolePower>(new Action<Sys_RolePower>(this.attach_Sys_RolePower), new Action<Sys_RolePower>(this.detach_Sys_RolePower));
			this._Sys_User = new EntitySet<Sys_User>(new Action<Sys_User>(this.attach_Sys_User), new Action<Sys_User>(this.detach_Sys_User));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleId", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string RoleId
		{
			get
			{
				return this._RoleId;
			}
			set
			{
				if ((this._RoleId != value))
				{
					this.OnRoleIdChanging(value);
					this.SendPropertyChanging();
					this._RoleId = value;
					this.SendPropertyChanged("RoleId");
					this.OnRoleIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string RoleName
		{
			get
			{
				return this._RoleName;
			}
			set
			{
				if ((this._RoleName != value))
				{
					this.OnRoleNameChanging(value);
					this.SendPropertyChanging();
					this._RoleName = value;
					this.SendPropertyChanged("RoleName");
					this.OnRoleNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Def", DbType="NVarChar(100)")]
		public string Def
		{
			get
			{
				return this._Def;
			}
			set
			{
				if ((this._Def != value))
				{
					this.OnDefChanging(value);
					this.SendPropertyChanging();
					this._Def = value;
					this.SendPropertyChanged("Def");
					this.OnDefChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleType", DbType="Char(1)")]
		public string RoleType
		{
			get
			{
				return this._RoleType;
			}
			set
			{
				if ((this._RoleType != value))
				{
					this.OnRoleTypeChanging(value);
					this.SendPropertyChanging();
					this._RoleType = value;
					this.SendPropertyChanged("RoleType");
					this.OnRoleTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SortIndex", DbType="Int")]
		public System.Nullable<int> SortIndex
		{
			get
			{
				return this._SortIndex;
			}
			set
			{
				if ((this._SortIndex != value))
				{
					this.OnSortIndexChanging(value);
					this.SendPropertyChanging();
					this._SortIndex = value;
					this.SendPropertyChanged("SortIndex");
					this.OnSortIndexChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsAuditFlow", DbType="Bit")]
		public System.Nullable<bool> IsAuditFlow
		{
			get
			{
				return this._IsAuditFlow;
			}
			set
			{
				if ((this._IsAuditFlow != value))
				{
					this.OnIsAuditFlowChanging(value);
					this.SendPropertyChanging();
					this._IsAuditFlow = value;
					this.SendPropertyChanged("IsAuditFlow");
					this.OnIsAuditFlowChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProjectId", DbType="NVarChar(50)")]
		public string ProjectId
		{
			get
			{
				return this._ProjectId;
			}
			set
			{
				if ((this._ProjectId != value))
				{
					if (this._Base_Project.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProjectIdChanging(value);
					this.SendPropertyChanging();
					this._ProjectId = value;
					this.SendPropertyChanged("ProjectId");
					this.OnProjectIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Sys_ButtonPower_Sys_Role", Storage="_Sys_ButtonPower", ThisKey="RoleId", OtherKey="RoleId", DeleteRule="NO ACTION")]
		public EntitySet<Sys_ButtonPower> Sys_ButtonPower
		{
			get
			{
				return this._Sys_ButtonPower;
			}
			set
			{
				this._Sys_ButtonPower.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Sys_Role_Base_Project", Storage="_Base_Project", ThisKey="ProjectId", OtherKey="ProjectId", IsForeignKey=true)]
		public Base_Project Base_Project
		{
			get
			{
				return this._Base_Project.Entity;
			}
			set
			{
				Base_Project previousValue = this._Base_Project.Entity;
				if (((previousValue != value) 
							|| (this._Base_Project.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Base_Project.Entity = null;
						previousValue.Sys_Role.Remove(this);
					}
					this._Base_Project.Entity = value;
					if ((value != null))
					{
						value.Sys_Role.Add(this);
						this._ProjectId = value.ProjectId;
					}
					else
					{
						this._ProjectId = default(string);
					}
					this.SendPropertyChanged("Base_Project");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Sys_RolePower_Sys_Role", Storage="_Sys_RolePower", ThisKey="RoleId", OtherKey="RoleId", DeleteRule="NO ACTION")]
		public EntitySet<Sys_RolePower> Sys_RolePower
		{
			get
			{
				return this._Sys_RolePower;
			}
			set
			{
				this._Sys_RolePower.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Sys_User_Sys_Role", Storage="_Sys_User", ThisKey="RoleId", OtherKey="RoleId", DeleteRule="NO ACTION")]
		public EntitySet<Sys_User> Sys_User
		{
			get
			{
				return this._Sys_User;
			}
			set
			{
				this._Sys_User.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Sys_ButtonPower(Sys_ButtonPower entity)
		{
			this.SendPropertyChanging();
			entity.Sys_Role = this;
		}
		
		private void detach_Sys_ButtonPower(Sys_ButtonPower entity)
		{
			this.SendPropertyChanging();
			entity.Sys_Role = null;
		}
		
		private void attach_Sys_RolePower(Sys_RolePower entity)
		{
			this.SendPropertyChanging();
			entity.Sys_Role = this;
		}
		
		private void detach_Sys_RolePower(Sys_RolePower entity)
		{
			this.SendPropertyChanging();
			entity.Sys_Role = null;
		}
		
		private void attach_Sys_User(Sys_User entity)
		{
			this.SendPropertyChanging();
			entity.Sys_Role = this;
		}
		
		private void detach_Sys_User(Sys_User entity)
		{
			this.SendPropertyChanging();
			entity.Sys_Role = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Sys_RolePower")]
	public partial class Sys_RolePower : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _RolePowerId;
		
		private string _RoleId;
		
		private string _MenuId;
		
		private EntityRef<Sys_Menu> _Sys_Menu;
		
		private EntityRef<Sys_Role> _Sys_Role;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRolePowerIdChanging(string value);
    partial void OnRolePowerIdChanged();
    partial void OnRoleIdChanging(string value);
    partial void OnRoleIdChanged();
    partial void OnMenuIdChanging(string value);
    partial void OnMenuIdChanged();
    #endregion
		
		public Sys_RolePower()
		{
			this._Sys_Menu = default(EntityRef<Sys_Menu>);
			this._Sys_Role = default(EntityRef<Sys_Role>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RolePowerId", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string RolePowerId
		{
			get
			{
				return this._RolePowerId;
			}
			set
			{
				if ((this._RolePowerId != value))
				{
					this.OnRolePowerIdChanging(value);
					this.SendPropertyChanging();
					this._RolePowerId = value;
					this.SendPropertyChanged("RolePowerId");
					this.OnRolePowerIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleId", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string RoleId
		{
			get
			{
				return this._RoleId;
			}
			set
			{
				if ((this._RoleId != value))
				{
					if (this._Sys_Role.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRoleIdChanging(value);
					this.SendPropertyChanging();
					this._RoleId = value;
					this.SendPropertyChanged("RoleId");
					this.OnRoleIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MenuId", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string MenuId
		{
			get
			{
				return this._MenuId;
			}
			set
			{
				if ((this._MenuId != value))
				{
					if (this._Sys_Menu.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMenuIdChanging(value);
					this.SendPropertyChanging();
					this._MenuId = value;
					this.SendPropertyChanged("MenuId");
					this.OnMenuIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Sys_RolePower_Sys_Menu", Storage="_Sys_Menu", ThisKey="MenuId", OtherKey="MenuId", IsForeignKey=true)]
		public Sys_Menu Sys_Menu
		{
			get
			{
				return this._Sys_Menu.Entity;
			}
			set
			{
				Sys_Menu previousValue = this._Sys_Menu.Entity;
				if (((previousValue != value) 
							|| (this._Sys_Menu.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Sys_Menu.Entity = null;
						previousValue.Sys_RolePower.Remove(this);
					}
					this._Sys_Menu.Entity = value;
					if ((value != null))
					{
						value.Sys_RolePower.Add(this);
						this._MenuId = value.MenuId;
					}
					else
					{
						this._MenuId = default(string);
					}
					this.SendPropertyChanged("Sys_Menu");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Sys_RolePower_Sys_Role", Storage="_Sys_Role", ThisKey="RoleId", OtherKey="RoleId", IsForeignKey=true)]
		public Sys_Role Sys_Role
		{
			get
			{
				return this._Sys_Role.Entity;
			}
			set
			{
				Sys_Role previousValue = this._Sys_Role.Entity;
				if (((previousValue != value) 
							|| (this._Sys_Role.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Sys_Role.Entity = null;
						previousValue.Sys_RolePower.Remove(this);
					}
					this._Sys_Role.Entity = value;
					if ((value != null))
					{
						value.Sys_RolePower.Add(this);
						this._RoleId = value.RoleId;
					}
					else
					{
						this._RoleId = default(string);
					}
					this.SendPropertyChanged("Sys_Role");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Sys_Set")]
	public partial class Sys_Set : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _SetId;
		
		private string _SetName;
		
		private System.Nullable<bool> _IsAuto;
		
		private string _SetValue;
		
		private string _ProjectId;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSetIdChanging(int value);
    partial void OnSetIdChanged();
    partial void OnSetNameChanging(string value);
    partial void OnSetNameChanged();
    partial void OnIsAutoChanging(System.Nullable<bool> value);
    partial void OnIsAutoChanged();
    partial void OnSetValueChanging(string value);
    partial void OnSetValueChanged();
    partial void OnProjectIdChanging(string value);
    partial void OnProjectIdChanged();
    #endregion
		
		public Sys_Set()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SetId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int SetId
		{
			get
			{
				return this._SetId;
			}
			set
			{
				if ((this._SetId != value))
				{
					this.OnSetIdChanging(value);
					this.SendPropertyChanging();
					this._SetId = value;
					this.SendPropertyChanged("SetId");
					this.OnSetIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SetName", DbType="NVarChar(50)")]
		public string SetName
		{
			get
			{
				return this._SetName;
			}
			set
			{
				if ((this._SetName != value))
				{
					this.OnSetNameChanging(value);
					this.SendPropertyChanging();
					this._SetName = value;
					this.SendPropertyChanged("SetName");
					this.OnSetNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsAuto", DbType="Bit")]
		public System.Nullable<bool> IsAuto
		{
			get
			{
				return this._IsAuto;
			}
			set
			{
				if ((this._IsAuto != value))
				{
					this.OnIsAutoChanging(value);
					this.SendPropertyChanging();
					this._IsAuto = value;
					this.SendPropertyChanged("IsAuto");
					this.OnIsAutoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SetValue", DbType="NVarChar(10)")]
		public string SetValue
		{
			get
			{
				return this._SetValue;
			}
			set
			{
				if ((this._SetValue != value))
				{
					this.OnSetValueChanging(value);
					this.SendPropertyChanging();
					this._SetValue = value;
					this.SendPropertyChanged("SetValue");
					this.OnSetValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProjectId", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ProjectId
		{
			get
			{
				return this._ProjectId;
			}
			set
			{
				if ((this._ProjectId != value))
				{
					this.OnProjectIdChanging(value);
					this.SendPropertyChanging();
					this._ProjectId = value;
					this.SendPropertyChanged("ProjectId");
					this.OnProjectIdChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Sys_User")]
	public partial class Sys_User : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _UserId;
		
		private string _Account;
		
		private string _UserCode;
		
		private string _Password;
		
		private string _UserName;
		
		private string _RoleId;
		
		private System.Nullable<bool> _IsPost;
		
		private string _ProjectId;
		
		private string _UnitId;
		
		private string _Remark;
		
		private EntitySet<ElectrodeBake> _ElectrodeBake;
		
		private EntitySet<ElectrodeRecovery> _ElectrodeRecovery;
		
		private EntitySet<EWeldRHRecord> _EWeldRHRecord;
		
		private EntitySet<EMaterialRegist> _EMaterialRegist;
		
		private EntitySet<Sys_DataInTemp> _Sys_DataInTemp;
		
		private EntitySet<Sys_Log> _Sys_Log;
		
		private EntityRef<Base_Project> _Base_Project;
		
		private EntityRef<Base_Unit> _Base_Unit;
		
		private EntityRef<Sys_Role> _Sys_Role;
		
		private EntitySet<Sys_UserShowColumns> _Sys_UserShowColumns;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUserIdChanging(string value);
    partial void OnUserIdChanged();
    partial void OnAccountChanging(string value);
    partial void OnAccountChanged();
    partial void OnUserCodeChanging(string value);
    partial void OnUserCodeChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    partial void OnUserNameChanging(string value);
    partial void OnUserNameChanged();
    partial void OnRoleIdChanging(string value);
    partial void OnRoleIdChanged();
    partial void OnIsPostChanging(System.Nullable<bool> value);
    partial void OnIsPostChanged();
    partial void OnProjectIdChanging(string value);
    partial void OnProjectIdChanged();
    partial void OnUnitIdChanging(string value);
    partial void OnUnitIdChanged();
    partial void OnRemarkChanging(string value);
    partial void OnRemarkChanged();
    #endregion
		
		public Sys_User()
		{
			this._ElectrodeBake = new EntitySet<ElectrodeBake>(new Action<ElectrodeBake>(this.attach_ElectrodeBake), new Action<ElectrodeBake>(this.detach_ElectrodeBake));
			this._ElectrodeRecovery = new EntitySet<ElectrodeRecovery>(new Action<ElectrodeRecovery>(this.attach_ElectrodeRecovery), new Action<ElectrodeRecovery>(this.detach_ElectrodeRecovery));
			this._EWeldRHRecord = new EntitySet<EWeldRHRecord>(new Action<EWeldRHRecord>(this.attach_EWeldRHRecord), new Action<EWeldRHRecord>(this.detach_EWeldRHRecord));
			this._EMaterialRegist = new EntitySet<EMaterialRegist>(new Action<EMaterialRegist>(this.attach_EMaterialRegist), new Action<EMaterialRegist>(this.detach_EMaterialRegist));
			this._Sys_DataInTemp = new EntitySet<Sys_DataInTemp>(new Action<Sys_DataInTemp>(this.attach_Sys_DataInTemp), new Action<Sys_DataInTemp>(this.detach_Sys_DataInTemp));
			this._Sys_Log = new EntitySet<Sys_Log>(new Action<Sys_Log>(this.attach_Sys_Log), new Action<Sys_Log>(this.detach_Sys_Log));
			this._Base_Project = default(EntityRef<Base_Project>);
			this._Base_Unit = default(EntityRef<Base_Unit>);
			this._Sys_Role = default(EntityRef<Sys_Role>);
			this._Sys_UserShowColumns = new EntitySet<Sys_UserShowColumns>(new Action<Sys_UserShowColumns>(this.attach_Sys_UserShowColumns), new Action<Sys_UserShowColumns>(this.detach_Sys_UserShowColumns));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Account", DbType="NVarChar(50)")]
		public string Account
		{
			get
			{
				return this._Account;
			}
			set
			{
				if ((this._Account != value))
				{
					this.OnAccountChanging(value);
					this.SendPropertyChanging();
					this._Account = value;
					this.SendPropertyChanged("Account");
					this.OnAccountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserCode", DbType="NVarChar(20)")]
		public string UserCode
		{
			get
			{
				return this._UserCode;
			}
			set
			{
				if ((this._UserCode != value))
				{
					this.OnUserCodeChanging(value);
					this.SendPropertyChanging();
					this._UserCode = value;
					this.SendPropertyChanged("UserCode");
					this.OnUserCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="NVarChar(50)")]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this.OnPasswordChanging(value);
					this.SendPropertyChanging();
					this._Password = value;
					this.SendPropertyChanged("Password");
					this.OnPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="NVarChar(20)")]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this.OnUserNameChanging(value);
					this.SendPropertyChanging();
					this._UserName = value;
					this.SendPropertyChanged("UserName");
					this.OnUserNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleId", DbType="NVarChar(50)")]
		public string RoleId
		{
			get
			{
				return this._RoleId;
			}
			set
			{
				if ((this._RoleId != value))
				{
					if (this._Sys_Role.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRoleIdChanging(value);
					this.SendPropertyChanging();
					this._RoleId = value;
					this.SendPropertyChanged("RoleId");
					this.OnRoleIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsPost", DbType="Bit")]
		public System.Nullable<bool> IsPost
		{
			get
			{
				return this._IsPost;
			}
			set
			{
				if ((this._IsPost != value))
				{
					this.OnIsPostChanging(value);
					this.SendPropertyChanging();
					this._IsPost = value;
					this.SendPropertyChanged("IsPost");
					this.OnIsPostChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProjectId", DbType="NVarChar(50)")]
		public string ProjectId
		{
			get
			{
				return this._ProjectId;
			}
			set
			{
				if ((this._ProjectId != value))
				{
					if (this._Base_Project.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProjectIdChanging(value);
					this.SendPropertyChanging();
					this._ProjectId = value;
					this.SendPropertyChanged("ProjectId");
					this.OnProjectIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitId", DbType="NVarChar(50)")]
		public string UnitId
		{
			get
			{
				return this._UnitId;
			}
			set
			{
				if ((this._UnitId != value))
				{
					if (this._Base_Unit.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUnitIdChanging(value);
					this.SendPropertyChanging();
					this._UnitId = value;
					this.SendPropertyChanged("UnitId");
					this.OnUnitIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Remark", DbType="NVarChar(200)")]
		public string Remark
		{
			get
			{
				return this._Remark;
			}
			set
			{
				if ((this._Remark != value))
				{
					this.OnRemarkChanging(value);
					this.SendPropertyChanging();
					this._Remark = value;
					this.SendPropertyChanged("Remark");
					this.OnRemarkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_ElectrodeBake_Sys_User", Storage="_ElectrodeBake", ThisKey="UserId", OtherKey="CompileMan", DeleteRule="NO ACTION")]
		public EntitySet<ElectrodeBake> ElectrodeBake
		{
			get
			{
				return this._ElectrodeBake;
			}
			set
			{
				this._ElectrodeBake.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_ElectrodeRecovery_Sys_User", Storage="_ElectrodeRecovery", ThisKey="UserId", OtherKey="CompileMan", DeleteRule="NO ACTION")]
		public EntitySet<ElectrodeRecovery> ElectrodeRecovery
		{
			get
			{
				return this._ElectrodeRecovery;
			}
			set
			{
				this._ElectrodeRecovery.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_EWeldRHRecord_Sys_User", Storage="_EWeldRHRecord", ThisKey="UserId", OtherKey="CompileMan", DeleteRule="NO ACTION")]
		public EntitySet<EWeldRHRecord> EWeldRHRecord
		{
			get
			{
				return this._EWeldRHRecord;
			}
			set
			{
				this._EWeldRHRecord.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_MaterialRegist_Sys_User", Storage="_EMaterialRegist", ThisKey="UserId", OtherKey="CompileMan", DeleteRule="NO ACTION")]
		public EntitySet<EMaterialRegist> EMaterialRegist
		{
			get
			{
				return this._EMaterialRegist;
			}
			set
			{
				this._EMaterialRegist.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Sys_DataInTemp_Sys_User", Storage="_Sys_DataInTemp", ThisKey="UserId", OtherKey="UserId", DeleteRule="NO ACTION")]
		public EntitySet<Sys_DataInTemp> Sys_DataInTemp
		{
			get
			{
				return this._Sys_DataInTemp;
			}
			set
			{
				this._Sys_DataInTemp.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Sys_Log_Sys_User", Storage="_Sys_Log", ThisKey="UserId", OtherKey="UserId", DeleteRule="NO ACTION")]
		public EntitySet<Sys_Log> Sys_Log
		{
			get
			{
				return this._Sys_Log;
			}
			set
			{
				this._Sys_Log.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Sys_User_Base_Project", Storage="_Base_Project", ThisKey="ProjectId", OtherKey="ProjectId", IsForeignKey=true)]
		public Base_Project Base_Project
		{
			get
			{
				return this._Base_Project.Entity;
			}
			set
			{
				Base_Project previousValue = this._Base_Project.Entity;
				if (((previousValue != value) 
							|| (this._Base_Project.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Base_Project.Entity = null;
						previousValue.Sys_User.Remove(this);
					}
					this._Base_Project.Entity = value;
					if ((value != null))
					{
						value.Sys_User.Add(this);
						this._ProjectId = value.ProjectId;
					}
					else
					{
						this._ProjectId = default(string);
					}
					this.SendPropertyChanged("Base_Project");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Sys_User_Base_Unit", Storage="_Base_Unit", ThisKey="UnitId", OtherKey="UnitId", IsForeignKey=true)]
		public Base_Unit Base_Unit
		{
			get
			{
				return this._Base_Unit.Entity;
			}
			set
			{
				Base_Unit previousValue = this._Base_Unit.Entity;
				if (((previousValue != value) 
							|| (this._Base_Unit.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Base_Unit.Entity = null;
						previousValue.Sys_User.Remove(this);
					}
					this._Base_Unit.Entity = value;
					if ((value != null))
					{
						value.Sys_User.Add(this);
						this._UnitId = value.UnitId;
					}
					else
					{
						this._UnitId = default(string);
					}
					this.SendPropertyChanged("Base_Unit");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Sys_User_Sys_Role", Storage="_Sys_Role", ThisKey="RoleId", OtherKey="RoleId", IsForeignKey=true)]
		public Sys_Role Sys_Role
		{
			get
			{
				return this._Sys_Role.Entity;
			}
			set
			{
				Sys_Role previousValue = this._Sys_Role.Entity;
				if (((previousValue != value) 
							|| (this._Sys_Role.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Sys_Role.Entity = null;
						previousValue.Sys_User.Remove(this);
					}
					this._Sys_Role.Entity = value;
					if ((value != null))
					{
						value.Sys_User.Add(this);
						this._RoleId = value.RoleId;
					}
					else
					{
						this._RoleId = default(string);
					}
					this.SendPropertyChanged("Sys_Role");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Sys_UserShowColumns_Sys_User", Storage="_Sys_UserShowColumns", ThisKey="UserId", OtherKey="UserId", DeleteRule="NO ACTION")]
		public EntitySet<Sys_UserShowColumns> Sys_UserShowColumns
		{
			get
			{
				return this._Sys_UserShowColumns;
			}
			set
			{
				this._Sys_UserShowColumns.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ElectrodeBake(ElectrodeBake entity)
		{
			this.SendPropertyChanging();
			entity.Sys_User = this;
		}
		
		private void detach_ElectrodeBake(ElectrodeBake entity)
		{
			this.SendPropertyChanging();
			entity.Sys_User = null;
		}
		
		private void attach_ElectrodeRecovery(ElectrodeRecovery entity)
		{
			this.SendPropertyChanging();
			entity.Sys_User = this;
		}
		
		private void detach_ElectrodeRecovery(ElectrodeRecovery entity)
		{
			this.SendPropertyChanging();
			entity.Sys_User = null;
		}
		
		private void attach_EWeldRHRecord(EWeldRHRecord entity)
		{
			this.SendPropertyChanging();
			entity.Sys_User = this;
		}
		
		private void detach_EWeldRHRecord(EWeldRHRecord entity)
		{
			this.SendPropertyChanging();
			entity.Sys_User = null;
		}
		
		private void attach_EMaterialRegist(EMaterialRegist entity)
		{
			this.SendPropertyChanging();
			entity.Sys_User = this;
		}
		
		private void detach_EMaterialRegist(EMaterialRegist entity)
		{
			this.SendPropertyChanging();
			entity.Sys_User = null;
		}
		
		private void attach_Sys_DataInTemp(Sys_DataInTemp entity)
		{
			this.SendPropertyChanging();
			entity.Sys_User = this;
		}
		
		private void detach_Sys_DataInTemp(Sys_DataInTemp entity)
		{
			this.SendPropertyChanging();
			entity.Sys_User = null;
		}
		
		private void attach_Sys_Log(Sys_Log entity)
		{
			this.SendPropertyChanging();
			entity.Sys_User = this;
		}
		
		private void detach_Sys_Log(Sys_Log entity)
		{
			this.SendPropertyChanging();
			entity.Sys_User = null;
		}
		
		private void attach_Sys_UserShowColumns(Sys_UserShowColumns entity)
		{
			this.SendPropertyChanging();
			entity.Sys_User = this;
		}
		
		private void detach_Sys_UserShowColumns(Sys_UserShowColumns entity)
		{
			this.SendPropertyChanging();
			entity.Sys_User = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Sys_UserShowColumns")]
	public partial class Sys_UserShowColumns : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ShowColumnId;
		
		private string _UserId;
		
		private string _Columns;
		
		private string _ShowType;
		
		private EntityRef<Sys_User> _Sys_User;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnShowColumnIdChanging(string value);
    partial void OnShowColumnIdChanged();
    partial void OnUserIdChanging(string value);
    partial void OnUserIdChanged();
    partial void OnColumnsChanging(string value);
    partial void OnColumnsChanged();
    partial void OnShowTypeChanging(string value);
    partial void OnShowTypeChanged();
    #endregion
		
		public Sys_UserShowColumns()
		{
			this._Sys_User = default(EntityRef<Sys_User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShowColumnId", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ShowColumnId
		{
			get
			{
				return this._ShowColumnId;
			}
			set
			{
				if ((this._ShowColumnId != value))
				{
					this.OnShowColumnIdChanging(value);
					this.SendPropertyChanging();
					this._ShowColumnId = value;
					this.SendPropertyChanged("ShowColumnId");
					this.OnShowColumnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="NVarChar(50)")]
		public string UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					if (this._Sys_User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Columns", DbType="NVarChar(500)")]
		public string Columns
		{
			get
			{
				return this._Columns;
			}
			set
			{
				if ((this._Columns != value))
				{
					this.OnColumnsChanging(value);
					this.SendPropertyChanging();
					this._Columns = value;
					this.SendPropertyChanged("Columns");
					this.OnColumnsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShowType", DbType="Char(10)")]
		public string ShowType
		{
			get
			{
				return this._ShowType;
			}
			set
			{
				if ((this._ShowType != value))
				{
					this.OnShowTypeChanging(value);
					this.SendPropertyChanging();
					this._ShowType = value;
					this.SendPropertyChanged("ShowType");
					this.OnShowTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Sys_UserShowColumns_Sys_User", Storage="_Sys_User", ThisKey="UserId", OtherKey="UserId", IsForeignKey=true)]
		public Sys_User Sys_User
		{
			get
			{
				return this._Sys_User.Entity;
			}
			set
			{
				Sys_User previousValue = this._Sys_User.Entity;
				if (((previousValue != value) 
							|| (this._Sys_User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Sys_User.Entity = null;
						previousValue.Sys_UserShowColumns.Remove(this);
					}
					this._Sys_User.Entity = value;
					if ((value != null))
					{
						value.Sys_UserShowColumns.Add(this);
						this._UserId = value.UserId;
					}
					else
					{
						this._UserId = default(string);
					}
					this.SendPropertyChanged("Sys_User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TP_AItemEndCheck")]
	public partial class TP_AItemEndCheck : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _EIC_ID;
		
		private string _ISO_ID;
		
		private string _EIC_CheckMan;
		
		private System.Nullable<System.DateTime> _EIC_CheckDate;
		
		private string _EIC_DealMan;
		
		private System.Nullable<System.DateTime> _EIC_DealDate;
		
		private string _EIC_Remark;
		
		private EntityRef<PW_IsoInfo> _PW_IsoInfo;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnEIC_IDChanging(string value);
    partial void OnEIC_IDChanged();
    partial void OnISO_IDChanging(string value);
    partial void OnISO_IDChanged();
    partial void OnEIC_CheckManChanging(string value);
    partial void OnEIC_CheckManChanged();
    partial void OnEIC_CheckDateChanging(System.Nullable<System.DateTime> value);
    partial void OnEIC_CheckDateChanged();
    partial void OnEIC_DealManChanging(string value);
    partial void OnEIC_DealManChanged();
    partial void OnEIC_DealDateChanging(System.Nullable<System.DateTime> value);
    partial void OnEIC_DealDateChanged();
    partial void OnEIC_RemarkChanging(string value);
    partial void OnEIC_RemarkChanged();
    #endregion
		
		public TP_AItemEndCheck()
		{
			this._PW_IsoInfo = default(EntityRef<PW_IsoInfo>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EIC_ID", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string EIC_ID
		{
			get
			{
				return this._EIC_ID;
			}
			set
			{
				if ((this._EIC_ID != value))
				{
					this.OnEIC_IDChanging(value);
					this.SendPropertyChanging();
					this._EIC_ID = value;
					this.SendPropertyChanged("EIC_ID");
					this.OnEIC_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ISO_ID", DbType="VarChar(50)")]
		public string ISO_ID
		{
			get
			{
				return this._ISO_ID;
			}
			set
			{
				if ((this._ISO_ID != value))
				{
					if (this._PW_IsoInfo.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnISO_IDChanging(value);
					this.SendPropertyChanging();
					this._ISO_ID = value;
					this.SendPropertyChanged("ISO_ID");
					this.OnISO_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EIC_CheckMan", DbType="VarChar(20)")]
		public string EIC_CheckMan
		{
			get
			{
				return this._EIC_CheckMan;
			}
			set
			{
				if ((this._EIC_CheckMan != value))
				{
					this.OnEIC_CheckManChanging(value);
					this.SendPropertyChanging();
					this._EIC_CheckMan = value;
					this.SendPropertyChanged("EIC_CheckMan");
					this.OnEIC_CheckManChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EIC_CheckDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> EIC_CheckDate
		{
			get
			{
				return this._EIC_CheckDate;
			}
			set
			{
				if ((this._EIC_CheckDate != value))
				{
					this.OnEIC_CheckDateChanging(value);
					this.SendPropertyChanging();
					this._EIC_CheckDate = value;
					this.SendPropertyChanged("EIC_CheckDate");
					this.OnEIC_CheckDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EIC_DealMan", DbType="VarChar(20)")]
		public string EIC_DealMan
		{
			get
			{
				return this._EIC_DealMan;
			}
			set
			{
				if ((this._EIC_DealMan != value))
				{
					this.OnEIC_DealManChanging(value);
					this.SendPropertyChanging();
					this._EIC_DealMan = value;
					this.SendPropertyChanged("EIC_DealMan");
					this.OnEIC_DealManChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EIC_DealDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> EIC_DealDate
		{
			get
			{
				return this._EIC_DealDate;
			}
			set
			{
				if ((this._EIC_DealDate != value))
				{
					this.OnEIC_DealDateChanging(value);
					this.SendPropertyChanging();
					this._EIC_DealDate = value;
					this.SendPropertyChanged("EIC_DealDate");
					this.OnEIC_DealDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EIC_Remark", DbType="VarChar(200)")]
		public string EIC_Remark
		{
			get
			{
				return this._EIC_Remark;
			}
			set
			{
				if ((this._EIC_Remark != value))
				{
					this.OnEIC_RemarkChanging(value);
					this.SendPropertyChanging();
					this._EIC_Remark = value;
					this.SendPropertyChanged("EIC_Remark");
					this.OnEIC_RemarkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_TP_AItemEndCheck_PW_IsoInfo", Storage="_PW_IsoInfo", ThisKey="ISO_ID", OtherKey="ISO_ID", IsForeignKey=true)]
		public PW_IsoInfo PW_IsoInfo
		{
			get
			{
				return this._PW_IsoInfo.Entity;
			}
			set
			{
				PW_IsoInfo previousValue = this._PW_IsoInfo.Entity;
				if (((previousValue != value) 
							|| (this._PW_IsoInfo.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PW_IsoInfo.Entity = null;
						previousValue.TP_AItemEndCheck.Remove(this);
					}
					this._PW_IsoInfo.Entity = value;
					if ((value != null))
					{
						value.TP_AItemEndCheck.Add(this);
						this._ISO_ID = value.ISO_ID;
					}
					else
					{
						this._ISO_ID = default(string);
					}
					this.SendPropertyChanged("PW_IsoInfo");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TP_BItemEndCheck")]
	public partial class TP_BItemEndCheck : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _EIC_ID;
		
		private string _ISO_ID;
		
		private string _EIC_CheckMan;
		
		private System.Nullable<System.DateTime> _EIC_CheckDate;
		
		private string _EIC_DealMan;
		
		private System.Nullable<System.DateTime> _EIC_DealDate;
		
		private string _EIC_Remark;
		
		private EntityRef<PW_IsoInfo> _PW_IsoInfo;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnEIC_IDChanging(string value);
    partial void OnEIC_IDChanged();
    partial void OnISO_IDChanging(string value);
    partial void OnISO_IDChanged();
    partial void OnEIC_CheckManChanging(string value);
    partial void OnEIC_CheckManChanged();
    partial void OnEIC_CheckDateChanging(System.Nullable<System.DateTime> value);
    partial void OnEIC_CheckDateChanged();
    partial void OnEIC_DealManChanging(string value);
    partial void OnEIC_DealManChanged();
    partial void OnEIC_DealDateChanging(System.Nullable<System.DateTime> value);
    partial void OnEIC_DealDateChanged();
    partial void OnEIC_RemarkChanging(string value);
    partial void OnEIC_RemarkChanged();
    #endregion
		
		public TP_BItemEndCheck()
		{
			this._PW_IsoInfo = default(EntityRef<PW_IsoInfo>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EIC_ID", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string EIC_ID
		{
			get
			{
				return this._EIC_ID;
			}
			set
			{
				if ((this._EIC_ID != value))
				{
					this.OnEIC_IDChanging(value);
					this.SendPropertyChanging();
					this._EIC_ID = value;
					this.SendPropertyChanged("EIC_ID");
					this.OnEIC_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ISO_ID", DbType="VarChar(50)")]
		public string ISO_ID
		{
			get
			{
				return this._ISO_ID;
			}
			set
			{
				if ((this._ISO_ID != value))
				{
					if (this._PW_IsoInfo.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnISO_IDChanging(value);
					this.SendPropertyChanging();
					this._ISO_ID = value;
					this.SendPropertyChanged("ISO_ID");
					this.OnISO_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EIC_CheckMan", DbType="VarChar(20)")]
		public string EIC_CheckMan
		{
			get
			{
				return this._EIC_CheckMan;
			}
			set
			{
				if ((this._EIC_CheckMan != value))
				{
					this.OnEIC_CheckManChanging(value);
					this.SendPropertyChanging();
					this._EIC_CheckMan = value;
					this.SendPropertyChanged("EIC_CheckMan");
					this.OnEIC_CheckManChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EIC_CheckDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> EIC_CheckDate
		{
			get
			{
				return this._EIC_CheckDate;
			}
			set
			{
				if ((this._EIC_CheckDate != value))
				{
					this.OnEIC_CheckDateChanging(value);
					this.SendPropertyChanging();
					this._EIC_CheckDate = value;
					this.SendPropertyChanged("EIC_CheckDate");
					this.OnEIC_CheckDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EIC_DealMan", DbType="VarChar(20)")]
		public string EIC_DealMan
		{
			get
			{
				return this._EIC_DealMan;
			}
			set
			{
				if ((this._EIC_DealMan != value))
				{
					this.OnEIC_DealManChanging(value);
					this.SendPropertyChanging();
					this._EIC_DealMan = value;
					this.SendPropertyChanged("EIC_DealMan");
					this.OnEIC_DealManChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EIC_DealDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> EIC_DealDate
		{
			get
			{
				return this._EIC_DealDate;
			}
			set
			{
				if ((this._EIC_DealDate != value))
				{
					this.OnEIC_DealDateChanging(value);
					this.SendPropertyChanging();
					this._EIC_DealDate = value;
					this.SendPropertyChanged("EIC_DealDate");
					this.OnEIC_DealDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EIC_Remark", DbType="VarChar(200)")]
		public string EIC_Remark
		{
			get
			{
				return this._EIC_Remark;
			}
			set
			{
				if ((this._EIC_Remark != value))
				{
					this.OnEIC_RemarkChanging(value);
					this.SendPropertyChanging();
					this._EIC_Remark = value;
					this.SendPropertyChanged("EIC_Remark");
					this.OnEIC_RemarkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_TP_BItemEndCheck_PW_IsoInfo", Storage="_PW_IsoInfo", ThisKey="ISO_ID", OtherKey="ISO_ID", IsForeignKey=true)]
		public PW_IsoInfo PW_IsoInfo
		{
			get
			{
				return this._PW_IsoInfo.Entity;
			}
			set
			{
				PW_IsoInfo previousValue = this._PW_IsoInfo.Entity;
				if (((previousValue != value) 
							|| (this._PW_IsoInfo.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PW_IsoInfo.Entity = null;
						previousValue.TP_BItemEndCheck.Remove(this);
					}
					this._PW_IsoInfo.Entity = value;
					if ((value != null))
					{
						value.TP_BItemEndCheck.Add(this);
						this._ISO_ID = value.ISO_ID;
					}
					else
					{
						this._ISO_ID = default(string);
					}
					this.SendPropertyChanged("PW_IsoInfo");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TP_IsoList")]
	public partial class TP_IsoList : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _PT_ID;
		
		private string _PTP_ID;
		
		private string _ISO_ID;
		
		private string _PT_DataType;
		
		private EntityRef<PW_IsoInfo> _PW_IsoInfo;
		
		private EntityRef<TP_TestPackage> _TP_TestPackage;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPT_IDChanging(string value);
    partial void OnPT_IDChanged();
    partial void OnPTP_IDChanging(string value);
    partial void OnPTP_IDChanged();
    partial void OnISO_IDChanging(string value);
    partial void OnISO_IDChanged();
    partial void OnPT_DataTypeChanging(string value);
    partial void OnPT_DataTypeChanged();
    #endregion
		
		public TP_IsoList()
		{
			this._PW_IsoInfo = default(EntityRef<PW_IsoInfo>);
			this._TP_TestPackage = default(EntityRef<TP_TestPackage>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PT_ID", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string PT_ID
		{
			get
			{
				return this._PT_ID;
			}
			set
			{
				if ((this._PT_ID != value))
				{
					this.OnPT_IDChanging(value);
					this.SendPropertyChanging();
					this._PT_ID = value;
					this.SendPropertyChanged("PT_ID");
					this.OnPT_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PTP_ID", DbType="VarChar(50)")]
		public string PTP_ID
		{
			get
			{
				return this._PTP_ID;
			}
			set
			{
				if ((this._PTP_ID != value))
				{
					if (this._TP_TestPackage.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPTP_IDChanging(value);
					this.SendPropertyChanging();
					this._PTP_ID = value;
					this.SendPropertyChanged("PTP_ID");
					this.OnPTP_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ISO_ID", DbType="VarChar(50)")]
		public string ISO_ID
		{
			get
			{
				return this._ISO_ID;
			}
			set
			{
				if ((this._ISO_ID != value))
				{
					if (this._PW_IsoInfo.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnISO_IDChanging(value);
					this.SendPropertyChanging();
					this._ISO_ID = value;
					this.SendPropertyChanged("ISO_ID");
					this.OnISO_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PT_DataType", DbType="Char(2)")]
		public string PT_DataType
		{
			get
			{
				return this._PT_DataType;
			}
			set
			{
				if ((this._PT_DataType != value))
				{
					this.OnPT_DataTypeChanging(value);
					this.SendPropertyChanging();
					this._PT_DataType = value;
					this.SendPropertyChanged("PT_DataType");
					this.OnPT_DataTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_TP_ISOLI_REFERENCE_PW_ISOIN", Storage="_PW_IsoInfo", ThisKey="ISO_ID", OtherKey="ISO_ID", IsForeignKey=true)]
		public PW_IsoInfo PW_IsoInfo
		{
			get
			{
				return this._PW_IsoInfo.Entity;
			}
			set
			{
				PW_IsoInfo previousValue = this._PW_IsoInfo.Entity;
				if (((previousValue != value) 
							|| (this._PW_IsoInfo.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PW_IsoInfo.Entity = null;
						previousValue.TP_IsoList.Remove(this);
					}
					this._PW_IsoInfo.Entity = value;
					if ((value != null))
					{
						value.TP_IsoList.Add(this);
						this._ISO_ID = value.ISO_ID;
					}
					else
					{
						this._ISO_ID = default(string);
					}
					this.SendPropertyChanged("PW_IsoInfo");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_TP_ISOLI_REFERENCE_TP_TESTP", Storage="_TP_TestPackage", ThisKey="PTP_ID", OtherKey="PTP_ID", IsForeignKey=true)]
		public TP_TestPackage TP_TestPackage
		{
			get
			{
				return this._TP_TestPackage.Entity;
			}
			set
			{
				TP_TestPackage previousValue = this._TP_TestPackage.Entity;
				if (((previousValue != value) 
							|| (this._TP_TestPackage.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TP_TestPackage.Entity = null;
						previousValue.TP_IsoList.Remove(this);
					}
					this._TP_TestPackage.Entity = value;
					if ((value != null))
					{
						value.TP_IsoList.Add(this);
						this._PTP_ID = value.PTP_ID;
					}
					else
					{
						this._PTP_ID = default(string);
					}
					this.SendPropertyChanged("TP_TestPackage");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TP_TestPackage")]
	public partial class TP_TestPackage : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _PTP_ID;
		
		private string _BSU_ID;
		
		private string _PT_ID;
		
		private string _PTP_TestPackageNo;
		
		private string _PTP_TestPackageName;
		
		private string _PTP_TestHeat;
		
		private string _PTP_TestService;
		
		private string _PTP_TestType;
		
		private string _PTP_Finisher;
		
		private System.Nullable<System.DateTime> _PTP_FinishDate;
		
		private string _PTP_Tabler;
		
		private System.Nullable<System.DateTime> _PTP_TableDate;
		
		private string _PTP_Modifier;
		
		private System.Nullable<System.DateTime> _PTP_ModifyDate;
		
		private string _PTP_Auditer;
		
		private System.Nullable<System.DateTime> _PTP_AduditDate;
		
		private string _PTP_Remark;
		
		private string _PTP_TestPackageCode;
		
		private string _PTP_TestAmbientTemp;
		
		private string _PTP_TestMediumTemp;
		
		private string _PTP_TestPressure;
		
		private string _PTP_TestPressureTemp;
		
		private string _PTP_TestPressureTime;
		
		private string _PTP_TightnessTest;
		
		private string _PTP_TightnessTestTemp;
		
		private string _PTP_TightnessTestTime;
		
		private string _PTP_LeakageTestService;
		
		private string _PTP_LeakageTestPressure;
		
		private string _PTP_VacuumTestService;
		
		private string _PTP_VacuumTestPressure;
		
		private string _PTP_OperationMedium;
		
		private string _PTP_PurgingMedium;
		
		private string _PTP_CleaningMedium;
		
		private string _PTP_AllowSeepage;
		
		private string _PTP_FactSeepage;
		
		private string _ProjectId;
		
		private System.Nullable<int> _InstallationId;
		
		private string _FinishDef;
		
		private EntitySet<TP_IsoList> _TP_IsoList;
		
		private EntityRef<Base_Installation> _Base_Installation;
		
		private EntityRef<Base_Project> _Base_Project;
		
		private EntityRef<PW_IsoInfo> _PW_IsoInfo;
		
		private EntityRef<TP_TestPackage> _PTP_;
		
		private EntityRef<TP_TestPackage> _TP_TestPackage_TP_TestPackage;
		
		private EntityRef<Base_Unit> _Base_Unit;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPTP_IDChanging(string value);
    partial void OnPTP_IDChanged();
    partial void OnBSU_IDChanging(string value);
    partial void OnBSU_IDChanged();
    partial void OnPT_IDChanging(string value);
    partial void OnPT_IDChanged();
    partial void OnPTP_TestPackageNoChanging(string value);
    partial void OnPTP_TestPackageNoChanged();
    partial void OnPTP_TestPackageNameChanging(string value);
    partial void OnPTP_TestPackageNameChanged();
    partial void OnPTP_TestHeatChanging(string value);
    partial void OnPTP_TestHeatChanged();
    partial void OnPTP_TestServiceChanging(string value);
    partial void OnPTP_TestServiceChanged();
    partial void OnPTP_TestTypeChanging(string value);
    partial void OnPTP_TestTypeChanged();
    partial void OnPTP_FinisherChanging(string value);
    partial void OnPTP_FinisherChanged();
    partial void OnPTP_FinishDateChanging(System.Nullable<System.DateTime> value);
    partial void OnPTP_FinishDateChanged();
    partial void OnPTP_TablerChanging(string value);
    partial void OnPTP_TablerChanged();
    partial void OnPTP_TableDateChanging(System.Nullable<System.DateTime> value);
    partial void OnPTP_TableDateChanged();
    partial void OnPTP_ModifierChanging(string value);
    partial void OnPTP_ModifierChanged();
    partial void OnPTP_ModifyDateChanging(System.Nullable<System.DateTime> value);
    partial void OnPTP_ModifyDateChanged();
    partial void OnPTP_AuditerChanging(string value);
    partial void OnPTP_AuditerChanged();
    partial void OnPTP_AduditDateChanging(System.Nullable<System.DateTime> value);
    partial void OnPTP_AduditDateChanged();
    partial void OnPTP_RemarkChanging(string value);
    partial void OnPTP_RemarkChanged();
    partial void OnPTP_TestPackageCodeChanging(string value);
    partial void OnPTP_TestPackageCodeChanged();
    partial void OnPTP_TestAmbientTempChanging(string value);
    partial void OnPTP_TestAmbientTempChanged();
    partial void OnPTP_TestMediumTempChanging(string value);
    partial void OnPTP_TestMediumTempChanged();
    partial void OnPTP_TestPressureChanging(string value);
    partial void OnPTP_TestPressureChanged();
    partial void OnPTP_TestPressureTempChanging(string value);
    partial void OnPTP_TestPressureTempChanged();
    partial void OnPTP_TestPressureTimeChanging(string value);
    partial void OnPTP_TestPressureTimeChanged();
    partial void OnPTP_TightnessTestChanging(string value);
    partial void OnPTP_TightnessTestChanged();
    partial void OnPTP_TightnessTestTempChanging(string value);
    partial void OnPTP_TightnessTestTempChanged();
    partial void OnPTP_TightnessTestTimeChanging(string value);
    partial void OnPTP_TightnessTestTimeChanged();
    partial void OnPTP_LeakageTestServiceChanging(string value);
    partial void OnPTP_LeakageTestServiceChanged();
    partial void OnPTP_LeakageTestPressureChanging(string value);
    partial void OnPTP_LeakageTestPressureChanged();
    partial void OnPTP_VacuumTestServiceChanging(string value);
    partial void OnPTP_VacuumTestServiceChanged();
    partial void OnPTP_VacuumTestPressureChanging(string value);
    partial void OnPTP_VacuumTestPressureChanged();
    partial void OnPTP_OperationMediumChanging(string value);
    partial void OnPTP_OperationMediumChanged();
    partial void OnPTP_PurgingMediumChanging(string value);
    partial void OnPTP_PurgingMediumChanged();
    partial void OnPTP_CleaningMediumChanging(string value);
    partial void OnPTP_CleaningMediumChanged();
    partial void OnPTP_AllowSeepageChanging(string value);
    partial void OnPTP_AllowSeepageChanged();
    partial void OnPTP_FactSeepageChanging(string value);
    partial void OnPTP_FactSeepageChanged();
    partial void OnProjectIdChanging(string value);
    partial void OnProjectIdChanged();
    partial void OnInstallationIdChanging(System.Nullable<int> value);
    partial void OnInstallationIdChanged();
    partial void OnFinishDefChanging(string value);
    partial void OnFinishDefChanged();
    #endregion
		
		public TP_TestPackage()
		{
			this._TP_IsoList = new EntitySet<TP_IsoList>(new Action<TP_IsoList>(this.attach_TP_IsoList), new Action<TP_IsoList>(this.detach_TP_IsoList));
			this._Base_Installation = default(EntityRef<Base_Installation>);
			this._Base_Project = default(EntityRef<Base_Project>);
			this._PW_IsoInfo = default(EntityRef<PW_IsoInfo>);
			this._PTP_ = default(EntityRef<TP_TestPackage>);
			this._TP_TestPackage_TP_TestPackage = default(EntityRef<TP_TestPackage>);
			this._Base_Unit = default(EntityRef<Base_Unit>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PTP_ID", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string PTP_ID
		{
			get
			{
				return this._PTP_ID;
			}
			set
			{
				if ((this._PTP_ID != value))
				{
					if (this._PTP_.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPTP_IDChanging(value);
					this.SendPropertyChanging();
					this._PTP_ID = value;
					this.SendPropertyChanged("PTP_ID");
					this.OnPTP_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BSU_ID", DbType="NVarChar(50)")]
		public string BSU_ID
		{
			get
			{
				return this._BSU_ID;
			}
			set
			{
				if ((this._BSU_ID != value))
				{
					if (this._Base_Unit.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBSU_IDChanging(value);
					this.SendPropertyChanging();
					this._BSU_ID = value;
					this.SendPropertyChanged("BSU_ID");
					this.OnBSU_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PT_ID", DbType="VarChar(50)")]
		public string PT_ID
		{
			get
			{
				return this._PT_ID;
			}
			set
			{
				if ((this._PT_ID != value))
				{
					if (this._PW_IsoInfo.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPT_IDChanging(value);
					this.SendPropertyChanging();
					this._PT_ID = value;
					this.SendPropertyChanged("PT_ID");
					this.OnPT_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PTP_TestPackageNo", DbType="VarChar(50)")]
		public string PTP_TestPackageNo
		{
			get
			{
				return this._PTP_TestPackageNo;
			}
			set
			{
				if ((this._PTP_TestPackageNo != value))
				{
					this.OnPTP_TestPackageNoChanging(value);
					this.SendPropertyChanging();
					this._PTP_TestPackageNo = value;
					this.SendPropertyChanged("PTP_TestPackageNo");
					this.OnPTP_TestPackageNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PTP_TestPackageName", DbType="VarChar(50)")]
		public string PTP_TestPackageName
		{
			get
			{
				return this._PTP_TestPackageName;
			}
			set
			{
				if ((this._PTP_TestPackageName != value))
				{
					this.OnPTP_TestPackageNameChanging(value);
					this.SendPropertyChanging();
					this._PTP_TestPackageName = value;
					this.SendPropertyChanged("PTP_TestPackageName");
					this.OnPTP_TestPackageNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PTP_TestHeat", DbType="VarChar(10)")]
		public string PTP_TestHeat
		{
			get
			{
				return this._PTP_TestHeat;
			}
			set
			{
				if ((this._PTP_TestHeat != value))
				{
					this.OnPTP_TestHeatChanging(value);
					this.SendPropertyChanging();
					this._PTP_TestHeat = value;
					this.SendPropertyChanged("PTP_TestHeat");
					this.OnPTP_TestHeatChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PTP_TestService", DbType="VarChar(10)")]
		public string PTP_TestService
		{
			get
			{
				return this._PTP_TestService;
			}
			set
			{
				if ((this._PTP_TestService != value))
				{
					this.OnPTP_TestServiceChanging(value);
					this.SendPropertyChanging();
					this._PTP_TestService = value;
					this.SendPropertyChanged("PTP_TestService");
					this.OnPTP_TestServiceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PTP_TestType", DbType="VarChar(50)")]
		public string PTP_TestType
		{
			get
			{
				return this._PTP_TestType;
			}
			set
			{
				if ((this._PTP_TestType != value))
				{
					this.OnPTP_TestTypeChanging(value);
					this.SendPropertyChanging();
					this._PTP_TestType = value;
					this.SendPropertyChanged("PTP_TestType");
					this.OnPTP_TestTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PTP_Finisher", DbType="NVarChar(50)")]
		public string PTP_Finisher
		{
			get
			{
				return this._PTP_Finisher;
			}
			set
			{
				if ((this._PTP_Finisher != value))
				{
					this.OnPTP_FinisherChanging(value);
					this.SendPropertyChanging();
					this._PTP_Finisher = value;
					this.SendPropertyChanged("PTP_Finisher");
					this.OnPTP_FinisherChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PTP_FinishDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> PTP_FinishDate
		{
			get
			{
				return this._PTP_FinishDate;
			}
			set
			{
				if ((this._PTP_FinishDate != value))
				{
					this.OnPTP_FinishDateChanging(value);
					this.SendPropertyChanging();
					this._PTP_FinishDate = value;
					this.SendPropertyChanged("PTP_FinishDate");
					this.OnPTP_FinishDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PTP_Tabler", DbType="NVarChar(50)")]
		public string PTP_Tabler
		{
			get
			{
				return this._PTP_Tabler;
			}
			set
			{
				if ((this._PTP_Tabler != value))
				{
					this.OnPTP_TablerChanging(value);
					this.SendPropertyChanging();
					this._PTP_Tabler = value;
					this.SendPropertyChanged("PTP_Tabler");
					this.OnPTP_TablerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PTP_TableDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> PTP_TableDate
		{
			get
			{
				return this._PTP_TableDate;
			}
			set
			{
				if ((this._PTP_TableDate != value))
				{
					this.OnPTP_TableDateChanging(value);
					this.SendPropertyChanging();
					this._PTP_TableDate = value;
					this.SendPropertyChanged("PTP_TableDate");
					this.OnPTP_TableDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PTP_Modifier", DbType="NVarChar(50)")]
		public string PTP_Modifier
		{
			get
			{
				return this._PTP_Modifier;
			}
			set
			{
				if ((this._PTP_Modifier != value))
				{
					this.OnPTP_ModifierChanging(value);
					this.SendPropertyChanging();
					this._PTP_Modifier = value;
					this.SendPropertyChanged("PTP_Modifier");
					this.OnPTP_ModifierChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PTP_ModifyDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> PTP_ModifyDate
		{
			get
			{
				return this._PTP_ModifyDate;
			}
			set
			{
				if ((this._PTP_ModifyDate != value))
				{
					this.OnPTP_ModifyDateChanging(value);
					this.SendPropertyChanging();
					this._PTP_ModifyDate = value;
					this.SendPropertyChanged("PTP_ModifyDate");
					this.OnPTP_ModifyDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PTP_Auditer", DbType="NVarChar(50)")]
		public string PTP_Auditer
		{
			get
			{
				return this._PTP_Auditer;
			}
			set
			{
				if ((this._PTP_Auditer != value))
				{
					this.OnPTP_AuditerChanging(value);
					this.SendPropertyChanging();
					this._PTP_Auditer = value;
					this.SendPropertyChanged("PTP_Auditer");
					this.OnPTP_AuditerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PTP_AduditDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> PTP_AduditDate
		{
			get
			{
				return this._PTP_AduditDate;
			}
			set
			{
				if ((this._PTP_AduditDate != value))
				{
					this.OnPTP_AduditDateChanging(value);
					this.SendPropertyChanging();
					this._PTP_AduditDate = value;
					this.SendPropertyChanged("PTP_AduditDate");
					this.OnPTP_AduditDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PTP_Remark", DbType="VarChar(100)")]
		public string PTP_Remark
		{
			get
			{
				return this._PTP_Remark;
			}
			set
			{
				if ((this._PTP_Remark != value))
				{
					this.OnPTP_RemarkChanging(value);
					this.SendPropertyChanging();
					this._PTP_Remark = value;
					this.SendPropertyChanged("PTP_Remark");
					this.OnPTP_RemarkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PTP_TestPackageCode", DbType="VarChar(50)")]
		public string PTP_TestPackageCode
		{
			get
			{
				return this._PTP_TestPackageCode;
			}
			set
			{
				if ((this._PTP_TestPackageCode != value))
				{
					this.OnPTP_TestPackageCodeChanging(value);
					this.SendPropertyChanging();
					this._PTP_TestPackageCode = value;
					this.SendPropertyChanged("PTP_TestPackageCode");
					this.OnPTP_TestPackageCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PTP_TestAmbientTemp", DbType="VarChar(20)")]
		public string PTP_TestAmbientTemp
		{
			get
			{
				return this._PTP_TestAmbientTemp;
			}
			set
			{
				if ((this._PTP_TestAmbientTemp != value))
				{
					this.OnPTP_TestAmbientTempChanging(value);
					this.SendPropertyChanging();
					this._PTP_TestAmbientTemp = value;
					this.SendPropertyChanged("PTP_TestAmbientTemp");
					this.OnPTP_TestAmbientTempChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PTP_TestMediumTemp", DbType="VarChar(20)")]
		public string PTP_TestMediumTemp
		{
			get
			{
				return this._PTP_TestMediumTemp;
			}
			set
			{
				if ((this._PTP_TestMediumTemp != value))
				{
					this.OnPTP_TestMediumTempChanging(value);
					this.SendPropertyChanging();
					this._PTP_TestMediumTemp = value;
					this.SendPropertyChanged("PTP_TestMediumTemp");
					this.OnPTP_TestMediumTempChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PTP_TestPressure", DbType="VarChar(20)")]
		public string PTP_TestPressure
		{
			get
			{
				return this._PTP_TestPressure;
			}
			set
			{
				if ((this._PTP_TestPressure != value))
				{
					this.OnPTP_TestPressureChanging(value);
					this.SendPropertyChanging();
					this._PTP_TestPressure = value;
					this.SendPropertyChanged("PTP_TestPressure");
					this.OnPTP_TestPressureChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PTP_TestPressureTemp", DbType="VarChar(20)")]
		public string PTP_TestPressureTemp
		{
			get
			{
				return this._PTP_TestPressureTemp;
			}
			set
			{
				if ((this._PTP_TestPressureTemp != value))
				{
					this.OnPTP_TestPressureTempChanging(value);
					this.SendPropertyChanging();
					this._PTP_TestPressureTemp = value;
					this.SendPropertyChanged("PTP_TestPressureTemp");
					this.OnPTP_TestPressureTempChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PTP_TestPressureTime", DbType="VarChar(20)")]
		public string PTP_TestPressureTime
		{
			get
			{
				return this._PTP_TestPressureTime;
			}
			set
			{
				if ((this._PTP_TestPressureTime != value))
				{
					this.OnPTP_TestPressureTimeChanging(value);
					this.SendPropertyChanging();
					this._PTP_TestPressureTime = value;
					this.SendPropertyChanged("PTP_TestPressureTime");
					this.OnPTP_TestPressureTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PTP_TightnessTest", DbType="VarChar(20)")]
		public string PTP_TightnessTest
		{
			get
			{
				return this._PTP_TightnessTest;
			}
			set
			{
				if ((this._PTP_TightnessTest != value))
				{
					this.OnPTP_TightnessTestChanging(value);
					this.SendPropertyChanging();
					this._PTP_TightnessTest = value;
					this.SendPropertyChanged("PTP_TightnessTest");
					this.OnPTP_TightnessTestChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PTP_TightnessTestTemp", DbType="VarChar(20)")]
		public string PTP_TightnessTestTemp
		{
			get
			{
				return this._PTP_TightnessTestTemp;
			}
			set
			{
				if ((this._PTP_TightnessTestTemp != value))
				{
					this.OnPTP_TightnessTestTempChanging(value);
					this.SendPropertyChanging();
					this._PTP_TightnessTestTemp = value;
					this.SendPropertyChanged("PTP_TightnessTestTemp");
					this.OnPTP_TightnessTestTempChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PTP_TightnessTestTime", DbType="VarChar(20)")]
		public string PTP_TightnessTestTime
		{
			get
			{
				return this._PTP_TightnessTestTime;
			}
			set
			{
				if ((this._PTP_TightnessTestTime != value))
				{
					this.OnPTP_TightnessTestTimeChanging(value);
					this.SendPropertyChanging();
					this._PTP_TightnessTestTime = value;
					this.SendPropertyChanged("PTP_TightnessTestTime");
					this.OnPTP_TightnessTestTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PTP_LeakageTestService", DbType="VarChar(20)")]
		public string PTP_LeakageTestService
		{
			get
			{
				return this._PTP_LeakageTestService;
			}
			set
			{
				if ((this._PTP_LeakageTestService != value))
				{
					this.OnPTP_LeakageTestServiceChanging(value);
					this.SendPropertyChanging();
					this._PTP_LeakageTestService = value;
					this.SendPropertyChanged("PTP_LeakageTestService");
					this.OnPTP_LeakageTestServiceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PTP_LeakageTestPressure", DbType="VarChar(20)")]
		public string PTP_LeakageTestPressure
		{
			get
			{
				return this._PTP_LeakageTestPressure;
			}
			set
			{
				if ((this._PTP_LeakageTestPressure != value))
				{
					this.OnPTP_LeakageTestPressureChanging(value);
					this.SendPropertyChanging();
					this._PTP_LeakageTestPressure = value;
					this.SendPropertyChanged("PTP_LeakageTestPressure");
					this.OnPTP_LeakageTestPressureChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PTP_VacuumTestService", DbType="VarChar(20)")]
		public string PTP_VacuumTestService
		{
			get
			{
				return this._PTP_VacuumTestService;
			}
			set
			{
				if ((this._PTP_VacuumTestService != value))
				{
					this.OnPTP_VacuumTestServiceChanging(value);
					this.SendPropertyChanging();
					this._PTP_VacuumTestService = value;
					this.SendPropertyChanged("PTP_VacuumTestService");
					this.OnPTP_VacuumTestServiceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PTP_VacuumTestPressure", DbType="VarChar(20)")]
		public string PTP_VacuumTestPressure
		{
			get
			{
				return this._PTP_VacuumTestPressure;
			}
			set
			{
				if ((this._PTP_VacuumTestPressure != value))
				{
					this.OnPTP_VacuumTestPressureChanging(value);
					this.SendPropertyChanging();
					this._PTP_VacuumTestPressure = value;
					this.SendPropertyChanged("PTP_VacuumTestPressure");
					this.OnPTP_VacuumTestPressureChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PTP_OperationMedium", DbType="VarChar(20)")]
		public string PTP_OperationMedium
		{
			get
			{
				return this._PTP_OperationMedium;
			}
			set
			{
				if ((this._PTP_OperationMedium != value))
				{
					this.OnPTP_OperationMediumChanging(value);
					this.SendPropertyChanging();
					this._PTP_OperationMedium = value;
					this.SendPropertyChanged("PTP_OperationMedium");
					this.OnPTP_OperationMediumChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PTP_PurgingMedium", DbType="VarChar(20)")]
		public string PTP_PurgingMedium
		{
			get
			{
				return this._PTP_PurgingMedium;
			}
			set
			{
				if ((this._PTP_PurgingMedium != value))
				{
					this.OnPTP_PurgingMediumChanging(value);
					this.SendPropertyChanging();
					this._PTP_PurgingMedium = value;
					this.SendPropertyChanged("PTP_PurgingMedium");
					this.OnPTP_PurgingMediumChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PTP_CleaningMedium", DbType="VarChar(20)")]
		public string PTP_CleaningMedium
		{
			get
			{
				return this._PTP_CleaningMedium;
			}
			set
			{
				if ((this._PTP_CleaningMedium != value))
				{
					this.OnPTP_CleaningMediumChanging(value);
					this.SendPropertyChanging();
					this._PTP_CleaningMedium = value;
					this.SendPropertyChanged("PTP_CleaningMedium");
					this.OnPTP_CleaningMediumChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PTP_AllowSeepage", DbType="VarChar(20)")]
		public string PTP_AllowSeepage
		{
			get
			{
				return this._PTP_AllowSeepage;
			}
			set
			{
				if ((this._PTP_AllowSeepage != value))
				{
					this.OnPTP_AllowSeepageChanging(value);
					this.SendPropertyChanging();
					this._PTP_AllowSeepage = value;
					this.SendPropertyChanged("PTP_AllowSeepage");
					this.OnPTP_AllowSeepageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PTP_FactSeepage", DbType="VarChar(20)")]
		public string PTP_FactSeepage
		{
			get
			{
				return this._PTP_FactSeepage;
			}
			set
			{
				if ((this._PTP_FactSeepage != value))
				{
					this.OnPTP_FactSeepageChanging(value);
					this.SendPropertyChanging();
					this._PTP_FactSeepage = value;
					this.SendPropertyChanged("PTP_FactSeepage");
					this.OnPTP_FactSeepageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProjectId", DbType="NVarChar(50)")]
		public string ProjectId
		{
			get
			{
				return this._ProjectId;
			}
			set
			{
				if ((this._ProjectId != value))
				{
					if (this._Base_Project.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProjectIdChanging(value);
					this.SendPropertyChanging();
					this._ProjectId = value;
					this.SendPropertyChanged("ProjectId");
					this.OnProjectIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InstallationId", DbType="Int")]
		public System.Nullable<int> InstallationId
		{
			get
			{
				return this._InstallationId;
			}
			set
			{
				if ((this._InstallationId != value))
				{
					if (this._Base_Installation.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnInstallationIdChanging(value);
					this.SendPropertyChanging();
					this._InstallationId = value;
					this.SendPropertyChanged("InstallationId");
					this.OnInstallationIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FinishDef", DbType="NVarChar(200)")]
		public string FinishDef
		{
			get
			{
				return this._FinishDef;
			}
			set
			{
				if ((this._FinishDef != value))
				{
					this.OnFinishDefChanging(value);
					this.SendPropertyChanging();
					this._FinishDef = value;
					this.SendPropertyChanged("FinishDef");
					this.OnFinishDefChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_TP_ISOLI_REFERENCE_TP_TESTP", Storage="_TP_IsoList", ThisKey="PTP_ID", OtherKey="PTP_ID", DeleteRule="NO ACTION")]
		public EntitySet<TP_IsoList> TP_IsoList
		{
			get
			{
				return this._TP_IsoList;
			}
			set
			{
				this._TP_IsoList.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_TP_TestPackage_Base_Installation", Storage="_Base_Installation", ThisKey="InstallationId", OtherKey="InstallationId", IsForeignKey=true)]
		public Base_Installation Base_Installation
		{
			get
			{
				return this._Base_Installation.Entity;
			}
			set
			{
				Base_Installation previousValue = this._Base_Installation.Entity;
				if (((previousValue != value) 
							|| (this._Base_Installation.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Base_Installation.Entity = null;
						previousValue.TP_TestPackage.Remove(this);
					}
					this._Base_Installation.Entity = value;
					if ((value != null))
					{
						value.TP_TestPackage.Add(this);
						this._InstallationId = value.InstallationId;
					}
					else
					{
						this._InstallationId = default(Nullable<int>);
					}
					this.SendPropertyChanged("Base_Installation");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_TP_TestPackage_Base_Project", Storage="_Base_Project", ThisKey="ProjectId", OtherKey="ProjectId", IsForeignKey=true)]
		public Base_Project Base_Project
		{
			get
			{
				return this._Base_Project.Entity;
			}
			set
			{
				Base_Project previousValue = this._Base_Project.Entity;
				if (((previousValue != value) 
							|| (this._Base_Project.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Base_Project.Entity = null;
						previousValue.TP_TestPackage.Remove(this);
					}
					this._Base_Project.Entity = value;
					if ((value != null))
					{
						value.TP_TestPackage.Add(this);
						this._ProjectId = value.ProjectId;
					}
					else
					{
						this._ProjectId = default(string);
					}
					this.SendPropertyChanged("Base_Project");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_TP_TestPackage_PW_IsoInfo", Storage="_PW_IsoInfo", ThisKey="PT_ID", OtherKey="ISO_ID", IsForeignKey=true)]
		public PW_IsoInfo PW_IsoInfo
		{
			get
			{
				return this._PW_IsoInfo.Entity;
			}
			set
			{
				PW_IsoInfo previousValue = this._PW_IsoInfo.Entity;
				if (((previousValue != value) 
							|| (this._PW_IsoInfo.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PW_IsoInfo.Entity = null;
						previousValue.TP_TestPackage.Remove(this);
					}
					this._PW_IsoInfo.Entity = value;
					if ((value != null))
					{
						value.TP_TestPackage.Add(this);
						this._PT_ID = value.ISO_ID;
					}
					else
					{
						this._PT_ID = default(string);
					}
					this.SendPropertyChanged("PW_IsoInfo");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_TP_TestPackage_TP_TestPackage", Storage="_PTP_", ThisKey="PTP_ID", OtherKey="PTP_ID", IsForeignKey=true)]
		public TP_TestPackage PTP_
		{
			get
			{
				return this._PTP_.Entity;
			}
			set
			{
				TP_TestPackage previousValue = this._PTP_.Entity;
				if (((previousValue != value) 
							|| (this._PTP_.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PTP_.Entity = null;
						previousValue.TP_TestPackage_TP_TestPackage = null;
					}
					this._PTP_.Entity = value;
					if ((value != null))
					{
						value.TP_TestPackage_TP_TestPackage = this;
						this._PTP_ID = value.PTP_ID;
					}
					else
					{
						this._PTP_ID = default(string);
					}
					this.SendPropertyChanged("PTP_");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_TP_TestPackage_TP_TestPackage", Storage="_TP_TestPackage_TP_TestPackage", ThisKey="PTP_ID", OtherKey="PTP_ID", IsUnique=true, IsForeignKey=false, DeleteRule="NO ACTION")]
		public TP_TestPackage TP_TestPackage_TP_TestPackage
		{
			get
			{
				return this._TP_TestPackage_TP_TestPackage.Entity;
			}
			set
			{
				TP_TestPackage previousValue = this._TP_TestPackage_TP_TestPackage.Entity;
				if (((previousValue != value) 
							|| (this._TP_TestPackage_TP_TestPackage.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TP_TestPackage_TP_TestPackage.Entity = null;
						previousValue.PTP_ = null;
					}
					this._TP_TestPackage_TP_TestPackage.Entity = value;
					if ((value != null))
					{
						value.PTP_ = this;
					}
					this.SendPropertyChanged("TP_TestPackage_TP_TestPackage");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_TP_TestPackage_TP_TestPackage1", Storage="_Base_Unit", ThisKey="BSU_ID", OtherKey="UnitId", IsForeignKey=true)]
		public Base_Unit Base_Unit
		{
			get
			{
				return this._Base_Unit.Entity;
			}
			set
			{
				Base_Unit previousValue = this._Base_Unit.Entity;
				if (((previousValue != value) 
							|| (this._Base_Unit.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Base_Unit.Entity = null;
						previousValue.TP_TestPackage.Remove(this);
					}
					this._Base_Unit.Entity = value;
					if ((value != null))
					{
						value.TP_TestPackage.Add(this);
						this._BSU_ID = value.UnitId;
					}
					else
					{
						this._BSU_ID = default(string);
					}
					this.SendPropertyChanged("Base_Unit");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_TP_IsoList(TP_IsoList entity)
		{
			this.SendPropertyChanging();
			entity.TP_TestPackage = this;
		}
		
		private void detach_TP_IsoList(TP_IsoList entity)
		{
			this.SendPropertyChanging();
			entity.TP_TestPackage = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.V_JOINTVIEW")]
	public partial class V_JOINTVIEW
	{
		
		private string _ProjectId;
		
		private string _WorkAreaId;
		
		private string _WorkAreaCode;
		
		private string _ISO_ISONO;
		
		private string _JOT_BelongPipe;
		
		private string _JOT_JointNo;
		
		private System.Nullable<decimal> _JOT_Dia;
		
		private string _JOT_Sch;
		
		private System.Nullable<decimal> _JOT_FactSch;
		
		private string _STE_NAME;
		
		private string _JOT_CellWelder;
		
		private string _JOT_FloorWelder;
		
		private string _WME_Name;
		
		private string _NDTR_Rate;
		
		private string _SER_NAME;
		
		private System.Nullable<System.DateTime> _JOT_WeldDate;
		
		private string _JOT_DailyReportNo;
		
		private string _CH_TRUSTCODE1;
		
		private string _IS_Proess;
		
		private System.Nullable<System.DateTime> _CHT_CHECKDATE;
		
		private System.Nullable<decimal> _JOT_Size;
		
		private string _WMT_MatCode;
		
		private string _WMT_Matname;
		
		private string _HsCode;
		
		private string _Hsname;
		
		private string _JOT_JointDesc;
		
		private string _PW_PointID;
		
		private string _If_dk;
		
		private string _ProessName;
		
		private string _If_dkName;
		
		private string _SupervisorUnitId;
		
		public V_JOINTVIEW()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProjectId", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string ProjectId
		{
			get
			{
				return this._ProjectId;
			}
			set
			{
				if ((this._ProjectId != value))
				{
					this._ProjectId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WorkAreaId", DbType="NVarChar(50)")]
		public string WorkAreaId
		{
			get
			{
				return this._WorkAreaId;
			}
			set
			{
				if ((this._WorkAreaId != value))
				{
					this._WorkAreaId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WorkAreaCode", DbType="NVarChar(20)")]
		public string WorkAreaCode
		{
			get
			{
				return this._WorkAreaCode;
			}
			set
			{
				if ((this._WorkAreaCode != value))
				{
					this._WorkAreaCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ISO_ISONO", DbType="VarChar(50)")]
		public string ISO_ISONO
		{
			get
			{
				return this._ISO_ISONO;
			}
			set
			{
				if ((this._ISO_ISONO != value))
				{
					this._ISO_ISONO = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JOT_BelongPipe", DbType="VarChar(50)")]
		public string JOT_BelongPipe
		{
			get
			{
				return this._JOT_BelongPipe;
			}
			set
			{
				if ((this._JOT_BelongPipe != value))
				{
					this._JOT_BelongPipe = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JOT_JointNo", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string JOT_JointNo
		{
			get
			{
				return this._JOT_JointNo;
			}
			set
			{
				if ((this._JOT_JointNo != value))
				{
					this._JOT_JointNo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JOT_Dia", DbType="Decimal(18,4)")]
		public System.Nullable<decimal> JOT_Dia
		{
			get
			{
				return this._JOT_Dia;
			}
			set
			{
				if ((this._JOT_Dia != value))
				{
					this._JOT_Dia = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JOT_Sch", DbType="VarChar(40)")]
		public string JOT_Sch
		{
			get
			{
				return this._JOT_Sch;
			}
			set
			{
				if ((this._JOT_Sch != value))
				{
					this._JOT_Sch = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JOT_FactSch", DbType="Decimal(18,4)")]
		public System.Nullable<decimal> JOT_FactSch
		{
			get
			{
				return this._JOT_FactSch;
			}
			set
			{
				if ((this._JOT_FactSch != value))
				{
					this._JOT_FactSch = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_STE_NAME", DbType="VarChar(50)")]
		public string STE_NAME
		{
			get
			{
				return this._STE_NAME;
			}
			set
			{
				if ((this._STE_NAME != value))
				{
					this._STE_NAME = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JOT_CellWelder", DbType="VarChar(20)")]
		public string JOT_CellWelder
		{
			get
			{
				return this._JOT_CellWelder;
			}
			set
			{
				if ((this._JOT_CellWelder != value))
				{
					this._JOT_CellWelder = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JOT_FloorWelder", DbType="VarChar(20)")]
		public string JOT_FloorWelder
		{
			get
			{
				return this._JOT_FloorWelder;
			}
			set
			{
				if ((this._JOT_FloorWelder != value))
				{
					this._JOT_FloorWelder = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WME_Name", DbType="VarChar(50)")]
		public string WME_Name
		{
			get
			{
				return this._WME_Name;
			}
			set
			{
				if ((this._WME_Name != value))
				{
					this._WME_Name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NDTR_Rate", DbType="VarChar(100)")]
		public string NDTR_Rate
		{
			get
			{
				return this._NDTR_Rate;
			}
			set
			{
				if ((this._NDTR_Rate != value))
				{
					this._NDTR_Rate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SER_NAME", DbType="VarChar(80)")]
		public string SER_NAME
		{
			get
			{
				return this._SER_NAME;
			}
			set
			{
				if ((this._SER_NAME != value))
				{
					this._SER_NAME = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JOT_WeldDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> JOT_WeldDate
		{
			get
			{
				return this._JOT_WeldDate;
			}
			set
			{
				if ((this._JOT_WeldDate != value))
				{
					this._JOT_WeldDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JOT_DailyReportNo", DbType="VarChar(50)")]
		public string JOT_DailyReportNo
		{
			get
			{
				return this._JOT_DailyReportNo;
			}
			set
			{
				if ((this._JOT_DailyReportNo != value))
				{
					this._JOT_DailyReportNo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CH_TRUSTCODE1", DbType="VarChar(30)")]
		public string CH_TRUSTCODE1
		{
			get
			{
				return this._CH_TRUSTCODE1;
			}
			set
			{
				if ((this._CH_TRUSTCODE1 != value))
				{
					this._CH_TRUSTCODE1 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IS_Proess", DbType="Char(1)")]
		public string IS_Proess
		{
			get
			{
				return this._IS_Proess;
			}
			set
			{
				if ((this._IS_Proess != value))
				{
					this._IS_Proess = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CHT_CHECKDATE", DbType="DateTime")]
		public System.Nullable<System.DateTime> CHT_CHECKDATE
		{
			get
			{
				return this._CHT_CHECKDATE;
			}
			set
			{
				if ((this._CHT_CHECKDATE != value))
				{
					this._CHT_CHECKDATE = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JOT_Size", DbType="Decimal(19,2)")]
		public System.Nullable<decimal> JOT_Size
		{
			get
			{
				return this._JOT_Size;
			}
			set
			{
				if ((this._JOT_Size != value))
				{
					this._JOT_Size = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WMT_MatCode", DbType="VarChar(20)")]
		public string WMT_MatCode
		{
			get
			{
				return this._WMT_MatCode;
			}
			set
			{
				if ((this._WMT_MatCode != value))
				{
					this._WMT_MatCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WMT_Matname", DbType="VarChar(50)")]
		public string WMT_Matname
		{
			get
			{
				return this._WMT_Matname;
			}
			set
			{
				if ((this._WMT_Matname != value))
				{
					this._WMT_Matname = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="hsCode", Storage="_HsCode", DbType="VarChar(20)")]
		public string HsCode
		{
			get
			{
				return this._HsCode;
			}
			set
			{
				if ((this._HsCode != value))
				{
					this._HsCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="hsname", Storage="_Hsname", DbType="VarChar(50)")]
		public string Hsname
		{
			get
			{
				return this._Hsname;
			}
			set
			{
				if ((this._Hsname != value))
				{
					this._Hsname = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JOT_JointDesc", DbType="VarChar(100)")]
		public string JOT_JointDesc
		{
			get
			{
				return this._JOT_JointDesc;
			}
			set
			{
				if ((this._JOT_JointDesc != value))
				{
					this._JOT_JointDesc = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PW_PointID", DbType="VarChar(50)")]
		public string PW_PointID
		{
			get
			{
				return this._PW_PointID;
			}
			set
			{
				if ((this._PW_PointID != value))
				{
					this._PW_PointID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="if_dk", Storage="_If_dk", DbType="VarChar(1) NOT NULL", CanBeNull=false)]
		public string If_dk
		{
			get
			{
				return this._If_dk;
			}
			set
			{
				if ((this._If_dk != value))
				{
					this._If_dk = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProessName", DbType="VarChar(2) NOT NULL", CanBeNull=false)]
		public string ProessName
		{
			get
			{
				return this._ProessName;
			}
			set
			{
				if ((this._ProessName != value))
				{
					this._ProessName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="if_dkName", Storage="_If_dkName", DbType="VarChar(2) NOT NULL", CanBeNull=false)]
		public string If_dkName
		{
			get
			{
				return this._If_dkName;
			}
			set
			{
				if ((this._If_dkName != value))
				{
					this._If_dkName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SupervisorUnitId", DbType="NVarChar(50)")]
		public string SupervisorUnitId
		{
			get
			{
				return this._SupervisorUnitId;
			}
			set
			{
				if ((this._SupervisorUnitId != value))
				{
					this._SupervisorUnitId = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.View_CH_CheckItem")]
	public partial class View_CH_CheckItem
	{
		
		private string _ProjectId;
		
		private string _CHT_CheckID;
		
		private string _ISO_ID;
		
		private string _ISO_IsoNo;
		
		private string _JOT_ID;
		
		private string _JOT_JointNo;
		
		private System.Nullable<decimal> _JOT_Dia;
		
		private string _JOT_Component1;
		
		private string _NDT_ID;
		
		private string _NDT_Name;
		
		private string _UnitId;
		
		private string _UnitName;
		
		private string _CH_TrustID;
		
		private string _CH_TrustCode;
		
		private string _CH_TrustUnit;
		
		private string _CH_NDTMethod;
		
		private string _CH_TrustItemID;
		
		private string _CHT_CheckItemID;
		
		private string _CHT_RepairLocation;
		
		private System.Nullable<System.DateTime> _CHT_RequestDate;
		
		private System.Nullable<int> _CHT_PassFilm;
		
		private System.Nullable<int> _CHT_TotalFilm;
		
		private string _CHT_CheckResult;
		
		private System.Nullable<System.DateTime> _CHT_FilmDate;
		
		private System.Nullable<System.DateTime> _CHT_ReportDate;
		
		private string _CHT_CheckNo;
		
		private string _CHT_Remark;
		
		private string _CHT_FilmSpecifications;
		
		private string _JOT_CheckFlag;
		
		public View_CH_CheckItem()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProjectId", DbType="NVarChar(50)")]
		public string ProjectId
		{
			get
			{
				return this._ProjectId;
			}
			set
			{
				if ((this._ProjectId != value))
				{
					this._ProjectId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CHT_CheckID", DbType="VarChar(50)")]
		public string CHT_CheckID
		{
			get
			{
				return this._CHT_CheckID;
			}
			set
			{
				if ((this._CHT_CheckID != value))
				{
					this._CHT_CheckID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ISO_ID", DbType="VarChar(50)")]
		public string ISO_ID
		{
			get
			{
				return this._ISO_ID;
			}
			set
			{
				if ((this._ISO_ID != value))
				{
					this._ISO_ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ISO_IsoNo", DbType="VarChar(50)")]
		public string ISO_IsoNo
		{
			get
			{
				return this._ISO_IsoNo;
			}
			set
			{
				if ((this._ISO_IsoNo != value))
				{
					this._ISO_IsoNo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JOT_ID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string JOT_ID
		{
			get
			{
				return this._JOT_ID;
			}
			set
			{
				if ((this._JOT_ID != value))
				{
					this._JOT_ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JOT_JointNo", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string JOT_JointNo
		{
			get
			{
				return this._JOT_JointNo;
			}
			set
			{
				if ((this._JOT_JointNo != value))
				{
					this._JOT_JointNo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JOT_Dia", DbType="Decimal(18,4)")]
		public System.Nullable<decimal> JOT_Dia
		{
			get
			{
				return this._JOT_Dia;
			}
			set
			{
				if ((this._JOT_Dia != value))
				{
					this._JOT_Dia = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JOT_Component1", DbType="VarChar(50)")]
		public string JOT_Component1
		{
			get
			{
				return this._JOT_Component1;
			}
			set
			{
				if ((this._JOT_Component1 != value))
				{
					this._JOT_Component1 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NDT_ID", DbType="VarChar(50)")]
		public string NDT_ID
		{
			get
			{
				return this._NDT_ID;
			}
			set
			{
				if ((this._NDT_ID != value))
				{
					this._NDT_ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NDT_Name", DbType="VarChar(50)")]
		public string NDT_Name
		{
			get
			{
				return this._NDT_Name;
			}
			set
			{
				if ((this._NDT_Name != value))
				{
					this._NDT_Name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitId", DbType="NVarChar(50)")]
		public string UnitId
		{
			get
			{
				return this._UnitId;
			}
			set
			{
				if ((this._UnitId != value))
				{
					this._UnitId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitName", DbType="NVarChar(50)")]
		public string UnitName
		{
			get
			{
				return this._UnitName;
			}
			set
			{
				if ((this._UnitName != value))
				{
					this._UnitName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CH_TrustID", DbType="VarChar(50)")]
		public string CH_TrustID
		{
			get
			{
				return this._CH_TrustID;
			}
			set
			{
				if ((this._CH_TrustID != value))
				{
					this._CH_TrustID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CH_TrustCode", DbType="VarChar(30)")]
		public string CH_TrustCode
		{
			get
			{
				return this._CH_TrustCode;
			}
			set
			{
				if ((this._CH_TrustCode != value))
				{
					this._CH_TrustCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CH_TrustUnit", DbType="VarChar(50)")]
		public string CH_TrustUnit
		{
			get
			{
				return this._CH_TrustUnit;
			}
			set
			{
				if ((this._CH_TrustUnit != value))
				{
					this._CH_TrustUnit = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CH_NDTMethod", DbType="VarChar(50)")]
		public string CH_NDTMethod
		{
			get
			{
				return this._CH_NDTMethod;
			}
			set
			{
				if ((this._CH_NDTMethod != value))
				{
					this._CH_NDTMethod = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CH_TrustItemID", DbType="VarChar(50)")]
		public string CH_TrustItemID
		{
			get
			{
				return this._CH_TrustItemID;
			}
			set
			{
				if ((this._CH_TrustItemID != value))
				{
					this._CH_TrustItemID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CHT_CheckItemID", DbType="VarChar(50)")]
		public string CHT_CheckItemID
		{
			get
			{
				return this._CHT_CheckItemID;
			}
			set
			{
				if ((this._CHT_CheckItemID != value))
				{
					this._CHT_CheckItemID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CHT_RepairLocation", DbType="VarChar(20)")]
		public string CHT_RepairLocation
		{
			get
			{
				return this._CHT_RepairLocation;
			}
			set
			{
				if ((this._CHT_RepairLocation != value))
				{
					this._CHT_RepairLocation = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CHT_RequestDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CHT_RequestDate
		{
			get
			{
				return this._CHT_RequestDate;
			}
			set
			{
				if ((this._CHT_RequestDate != value))
				{
					this._CHT_RequestDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CHT_PassFilm", DbType="Int")]
		public System.Nullable<int> CHT_PassFilm
		{
			get
			{
				return this._CHT_PassFilm;
			}
			set
			{
				if ((this._CHT_PassFilm != value))
				{
					this._CHT_PassFilm = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CHT_TotalFilm", DbType="Int")]
		public System.Nullable<int> CHT_TotalFilm
		{
			get
			{
				return this._CHT_TotalFilm;
			}
			set
			{
				if ((this._CHT_TotalFilm != value))
				{
					this._CHT_TotalFilm = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CHT_CheckResult", DbType="VarChar(20)")]
		public string CHT_CheckResult
		{
			get
			{
				return this._CHT_CheckResult;
			}
			set
			{
				if ((this._CHT_CheckResult != value))
				{
					this._CHT_CheckResult = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CHT_FilmDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CHT_FilmDate
		{
			get
			{
				return this._CHT_FilmDate;
			}
			set
			{
				if ((this._CHT_FilmDate != value))
				{
					this._CHT_FilmDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CHT_ReportDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CHT_ReportDate
		{
			get
			{
				return this._CHT_ReportDate;
			}
			set
			{
				if ((this._CHT_ReportDate != value))
				{
					this._CHT_ReportDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CHT_CheckNo", DbType="VarChar(30)")]
		public string CHT_CheckNo
		{
			get
			{
				return this._CHT_CheckNo;
			}
			set
			{
				if ((this._CHT_CheckNo != value))
				{
					this._CHT_CheckNo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CHT_Remark", DbType="VarChar(100)")]
		public string CHT_Remark
		{
			get
			{
				return this._CHT_Remark;
			}
			set
			{
				if ((this._CHT_Remark != value))
				{
					this._CHT_Remark = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CHT_FilmSpecifications", DbType="NVarChar(50)")]
		public string CHT_FilmSpecifications
		{
			get
			{
				return this._CHT_FilmSpecifications;
			}
			set
			{
				if ((this._CHT_FilmSpecifications != value))
				{
					this._CHT_FilmSpecifications = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JOT_CheckFlag", DbType="VarChar(40)")]
		public string JOT_CheckFlag
		{
			get
			{
				return this._JOT_CheckFlag;
			}
			set
			{
				if ((this._JOT_CheckFlag != value))
				{
					this._JOT_CheckFlag = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.View_CH_CheckSerch")]
	public partial class View_CH_CheckSerch
	{
		
		private string _JOT_ID;
		
		private string _ProjectId;
		
		private string _CH_TrustCode;
		
		private string _BSU_ID;
		
		private string _ISO_ID;
		
		private string _ISO_IsoNo;
		
		private string _NDT_ID;
		
		private string _NDT_Name;
		
		private string _UnitName;
		
		private string _JOT_JointNo;
		
		private string _WorkAreaId;
		
		private string _CH_TrustID;
		
		private string _CH_CheckUnit;
		
		public View_CH_CheckSerch()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JOT_ID", DbType="VarChar(50)")]
		public string JOT_ID
		{
			get
			{
				return this._JOT_ID;
			}
			set
			{
				if ((this._JOT_ID != value))
				{
					this._JOT_ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProjectId", DbType="NVarChar(50)")]
		public string ProjectId
		{
			get
			{
				return this._ProjectId;
			}
			set
			{
				if ((this._ProjectId != value))
				{
					this._ProjectId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CH_TrustCode", DbType="VarChar(30)")]
		public string CH_TrustCode
		{
			get
			{
				return this._CH_TrustCode;
			}
			set
			{
				if ((this._CH_TrustCode != value))
				{
					this._CH_TrustCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BSU_ID", DbType="NVarChar(50)")]
		public string BSU_ID
		{
			get
			{
				return this._BSU_ID;
			}
			set
			{
				if ((this._BSU_ID != value))
				{
					this._BSU_ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ISO_ID", DbType="VarChar(50)")]
		public string ISO_ID
		{
			get
			{
				return this._ISO_ID;
			}
			set
			{
				if ((this._ISO_ID != value))
				{
					this._ISO_ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ISO_IsoNo", DbType="VarChar(50)")]
		public string ISO_IsoNo
		{
			get
			{
				return this._ISO_IsoNo;
			}
			set
			{
				if ((this._ISO_IsoNo != value))
				{
					this._ISO_IsoNo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NDT_ID", DbType="VarChar(50)")]
		public string NDT_ID
		{
			get
			{
				return this._NDT_ID;
			}
			set
			{
				if ((this._NDT_ID != value))
				{
					this._NDT_ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NDT_Name", DbType="VarChar(50)")]
		public string NDT_Name
		{
			get
			{
				return this._NDT_Name;
			}
			set
			{
				if ((this._NDT_Name != value))
				{
					this._NDT_Name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitName", DbType="NVarChar(50)")]
		public string UnitName
		{
			get
			{
				return this._UnitName;
			}
			set
			{
				if ((this._UnitName != value))
				{
					this._UnitName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JOT_JointNo", DbType="VarChar(50)")]
		public string JOT_JointNo
		{
			get
			{
				return this._JOT_JointNo;
			}
			set
			{
				if ((this._JOT_JointNo != value))
				{
					this._JOT_JointNo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WorkAreaId", DbType="NVarChar(50)")]
		public string WorkAreaId
		{
			get
			{
				return this._WorkAreaId;
			}
			set
			{
				if ((this._WorkAreaId != value))
				{
					this._WorkAreaId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CH_TrustID", DbType="VarChar(50)")]
		public string CH_TrustID
		{
			get
			{
				return this._CH_TrustID;
			}
			set
			{
				if ((this._CH_TrustID != value))
				{
					this._CH_TrustID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CH_CheckUnit", DbType="VarChar(40)")]
		public string CH_CheckUnit
		{
			get
			{
				return this._CH_CheckUnit;
			}
			set
			{
				if ((this._CH_CheckUnit != value))
				{
					this._CH_CheckUnit = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.View_CH_RepairSearch")]
	public partial class View_CH_RepairSearch
	{
		
		private string _JOT_ID;
		
		private string _JOT_JointNo;
		
		private string _JOT_JointStatus;
		
		private string _ISO_ID;
		
		private string _ISO_IsoNo;
		
		private string _BSU_ID;
		
		private string _WorkAreaId;
		
		private string _ProjectId;
		
		private string _CHT_CheckID;
		
		private string _CHT_CheckCode;
		
		private string _RepairTrustId;
		
		public View_CH_RepairSearch()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JOT_ID", DbType="VarChar(50)")]
		public string JOT_ID
		{
			get
			{
				return this._JOT_ID;
			}
			set
			{
				if ((this._JOT_ID != value))
				{
					this._JOT_ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JOT_JointNo", DbType="VarChar(50)")]
		public string JOT_JointNo
		{
			get
			{
				return this._JOT_JointNo;
			}
			set
			{
				if ((this._JOT_JointNo != value))
				{
					this._JOT_JointNo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JOT_JointStatus", DbType="VarChar(4) NOT NULL", CanBeNull=false)]
		public string JOT_JointStatus
		{
			get
			{
				return this._JOT_JointStatus;
			}
			set
			{
				if ((this._JOT_JointStatus != value))
				{
					this._JOT_JointStatus = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ISO_ID", DbType="VarChar(50)")]
		public string ISO_ID
		{
			get
			{
				return this._ISO_ID;
			}
			set
			{
				if ((this._ISO_ID != value))
				{
					this._ISO_ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ISO_IsoNo", DbType="VarChar(50)")]
		public string ISO_IsoNo
		{
			get
			{
				return this._ISO_IsoNo;
			}
			set
			{
				if ((this._ISO_IsoNo != value))
				{
					this._ISO_IsoNo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BSU_ID", DbType="NVarChar(50)")]
		public string BSU_ID
		{
			get
			{
				return this._BSU_ID;
			}
			set
			{
				if ((this._BSU_ID != value))
				{
					this._BSU_ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WorkAreaId", DbType="NVarChar(50)")]
		public string WorkAreaId
		{
			get
			{
				return this._WorkAreaId;
			}
			set
			{
				if ((this._WorkAreaId != value))
				{
					this._WorkAreaId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProjectId", DbType="NVarChar(50)")]
		public string ProjectId
		{
			get
			{
				return this._ProjectId;
			}
			set
			{
				if ((this._ProjectId != value))
				{
					this._ProjectId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CHT_CheckID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string CHT_CheckID
		{
			get
			{
				return this._CHT_CheckID;
			}
			set
			{
				if ((this._CHT_CheckID != value))
				{
					this._CHT_CheckID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CHT_CheckCode", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		public string CHT_CheckCode
		{
			get
			{
				return this._CHT_CheckCode;
			}
			set
			{
				if ((this._CHT_CheckCode != value))
				{
					this._CHT_CheckCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RepairTrustId", DbType="NVarChar(50)")]
		public string RepairTrustId
		{
			get
			{
				return this._RepairTrustId;
			}
			set
			{
				if ((this._RepairTrustId != value))
				{
					this._RepairTrustId = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.View_CH_TrustItem")]
	public partial class View_CH_TrustItem
	{
		
		private string _CH_TrustItemID;
		
		private string _CH_TrustID;
		
		private string _JOT_ID;
		
		private string _BAW_ID;
		
		private System.Nullable<int> _InstallationId;
		
		private string _InstallationName;
		
		private string _CH_TrustType;
		
		private System.Nullable<System.DateTime> _CH_TrustDate;
		
		private string _ISO_IsoNo;
		
		private string _JOT_JointNo;
		
		private string _CH_Remark;
		
		private System.Nullable<decimal> _JOT_Dia;
		
		private string _JOT_Sch;
		
		private string _WLO_Code;
		
		private string _WME_Name;
		
		private string _ProjectId;
		
		private string _WME_ID;
		
		private string _JOT_JointStatus;
		
		public View_CH_TrustItem()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CH_TrustItemID", DbType="VarChar(50)")]
		public string CH_TrustItemID
		{
			get
			{
				return this._CH_TrustItemID;
			}
			set
			{
				if ((this._CH_TrustItemID != value))
				{
					this._CH_TrustItemID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CH_TrustID", DbType="VarChar(50)")]
		public string CH_TrustID
		{
			get
			{
				return this._CH_TrustID;
			}
			set
			{
				if ((this._CH_TrustID != value))
				{
					this._CH_TrustID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JOT_ID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string JOT_ID
		{
			get
			{
				return this._JOT_ID;
			}
			set
			{
				if ((this._JOT_ID != value))
				{
					this._JOT_ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BAW_ID", DbType="NVarChar(50)")]
		public string BAW_ID
		{
			get
			{
				return this._BAW_ID;
			}
			set
			{
				if ((this._BAW_ID != value))
				{
					this._BAW_ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InstallationId", DbType="Int")]
		public System.Nullable<int> InstallationId
		{
			get
			{
				return this._InstallationId;
			}
			set
			{
				if ((this._InstallationId != value))
				{
					this._InstallationId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InstallationName", DbType="NVarChar(50)")]
		public string InstallationName
		{
			get
			{
				return this._InstallationName;
			}
			set
			{
				if ((this._InstallationName != value))
				{
					this._InstallationName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CH_TrustType", DbType="Char(2)")]
		public string CH_TrustType
		{
			get
			{
				return this._CH_TrustType;
			}
			set
			{
				if ((this._CH_TrustType != value))
				{
					this._CH_TrustType = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CH_TrustDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CH_TrustDate
		{
			get
			{
				return this._CH_TrustDate;
			}
			set
			{
				if ((this._CH_TrustDate != value))
				{
					this._CH_TrustDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ISO_IsoNo", DbType="VarChar(50)")]
		public string ISO_IsoNo
		{
			get
			{
				return this._ISO_IsoNo;
			}
			set
			{
				if ((this._ISO_IsoNo != value))
				{
					this._ISO_IsoNo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JOT_JointNo", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string JOT_JointNo
		{
			get
			{
				return this._JOT_JointNo;
			}
			set
			{
				if ((this._JOT_JointNo != value))
				{
					this._JOT_JointNo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CH_Remark", DbType="VarChar(100)")]
		public string CH_Remark
		{
			get
			{
				return this._CH_Remark;
			}
			set
			{
				if ((this._CH_Remark != value))
				{
					this._CH_Remark = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JOT_Dia", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> JOT_Dia
		{
			get
			{
				return this._JOT_Dia;
			}
			set
			{
				if ((this._JOT_Dia != value))
				{
					this._JOT_Dia = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JOT_Sch", DbType="VarChar(40)")]
		public string JOT_Sch
		{
			get
			{
				return this._JOT_Sch;
			}
			set
			{
				if ((this._JOT_Sch != value))
				{
					this._JOT_Sch = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WLO_Code", DbType="VarChar(20)")]
		public string WLO_Code
		{
			get
			{
				return this._WLO_Code;
			}
			set
			{
				if ((this._WLO_Code != value))
				{
					this._WLO_Code = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WME_Name", DbType="VarChar(50)")]
		public string WME_Name
		{
			get
			{
				return this._WME_Name;
			}
			set
			{
				if ((this._WME_Name != value))
				{
					this._WME_Name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProjectId", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string ProjectId
		{
			get
			{
				return this._ProjectId;
			}
			set
			{
				if ((this._ProjectId != value))
				{
					this._ProjectId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WME_ID", DbType="VarChar(50)")]
		public string WME_ID
		{
			get
			{
				return this._WME_ID;
			}
			set
			{
				if ((this._WME_ID != value))
				{
					this._WME_ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JOT_JointStatus", DbType="VarChar(20)")]
		public string JOT_JointStatus
		{
			get
			{
				return this._JOT_JointStatus;
			}
			set
			{
				if ((this._JOT_JointStatus != value))
				{
					this._JOT_JointStatus = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.View_CH_TrustSearch")]
	public partial class View_CH_TrustSearch
	{
		
		private string _JOT_ID;
		
		private string _JOT_JointNo;
		
		private string _JOT_JointStatus;
		
		private string _ISO_ID;
		
		private string _ISO_IsoNo;
		
		private string _BSU_ID;
		
		private string _WorkAreaId;
		
		private string _ProjectId;
		
		private string _PW_PointID;
		
		private string _PW_PointNo;
		
		private string _PW_PointType;
		
		public View_CH_TrustSearch()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JOT_ID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string JOT_ID
		{
			get
			{
				return this._JOT_ID;
			}
			set
			{
				if ((this._JOT_ID != value))
				{
					this._JOT_ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JOT_JointNo", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string JOT_JointNo
		{
			get
			{
				return this._JOT_JointNo;
			}
			set
			{
				if ((this._JOT_JointNo != value))
				{
					this._JOT_JointNo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JOT_JointStatus", DbType="VarChar(20)")]
		public string JOT_JointStatus
		{
			get
			{
				return this._JOT_JointStatus;
			}
			set
			{
				if ((this._JOT_JointStatus != value))
				{
					this._JOT_JointStatus = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ISO_ID", DbType="VarChar(50)")]
		public string ISO_ID
		{
			get
			{
				return this._ISO_ID;
			}
			set
			{
				if ((this._ISO_ID != value))
				{
					this._ISO_ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ISO_IsoNo", DbType="VarChar(50)")]
		public string ISO_IsoNo
		{
			get
			{
				return this._ISO_IsoNo;
			}
			set
			{
				if ((this._ISO_IsoNo != value))
				{
					this._ISO_IsoNo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BSU_ID", DbType="NVarChar(50)")]
		public string BSU_ID
		{
			get
			{
				return this._BSU_ID;
			}
			set
			{
				if ((this._BSU_ID != value))
				{
					this._BSU_ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WorkAreaId", DbType="NVarChar(50)")]
		public string WorkAreaId
		{
			get
			{
				return this._WorkAreaId;
			}
			set
			{
				if ((this._WorkAreaId != value))
				{
					this._WorkAreaId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProjectId", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string ProjectId
		{
			get
			{
				return this._ProjectId;
			}
			set
			{
				if ((this._ProjectId != value))
				{
					this._ProjectId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PW_PointID", DbType="VarChar(50)")]
		public string PW_PointID
		{
			get
			{
				return this._PW_PointID;
			}
			set
			{
				if ((this._PW_PointID != value))
				{
					this._PW_PointID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PW_PointNo", DbType="VarChar(50)")]
		public string PW_PointNo
		{
			get
			{
				return this._PW_PointNo;
			}
			set
			{
				if ((this._PW_PointNo != value))
				{
					this._PW_PointNo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PW_PointType", DbType="VarChar(50)")]
		public string PW_PointType
		{
			get
			{
				return this._PW_PointType;
			}
			set
			{
				if ((this._PW_PointType != value))
				{
					this._PW_PointType = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.View_ErrLogInfoList")]
	public partial class View_ErrLogInfoList
	{
		
		private string _ErrLogId;
		
		private string _ErrType;
		
		private string _ErrMessage;
		
		private string _ErrStackTrace;
		
		private System.Nullable<System.DateTime> _ErrTime;
		
		private string _ErrUrl;
		
		private string _ErrIP;
		
		private string _UserId;
		
		private string _UserName;
		
		private string _ProjectName;
		
		private string _UnitName;
		
		public View_ErrLogInfoList()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ErrLogId", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string ErrLogId
		{
			get
			{
				return this._ErrLogId;
			}
			set
			{
				if ((this._ErrLogId != value))
				{
					this._ErrLogId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ErrType", DbType="NVarChar(500)")]
		public string ErrType
		{
			get
			{
				return this._ErrType;
			}
			set
			{
				if ((this._ErrType != value))
				{
					this._ErrType = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ErrMessage", DbType="NVarChar(2000)")]
		public string ErrMessage
		{
			get
			{
				return this._ErrMessage;
			}
			set
			{
				if ((this._ErrMessage != value))
				{
					this._ErrMessage = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ErrStackTrace", DbType="NVarChar(MAX)", UpdateCheck=UpdateCheck.Never)]
		public string ErrStackTrace
		{
			get
			{
				return this._ErrStackTrace;
			}
			set
			{
				if ((this._ErrStackTrace != value))
				{
					this._ErrStackTrace = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ErrTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> ErrTime
		{
			get
			{
				return this._ErrTime;
			}
			set
			{
				if ((this._ErrTime != value))
				{
					this._ErrTime = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ErrUrl", DbType="NVarChar(800)")]
		public string ErrUrl
		{
			get
			{
				return this._ErrUrl;
			}
			set
			{
				if ((this._ErrUrl != value))
				{
					this._ErrUrl = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ErrIP", DbType="NVarChar(50)")]
		public string ErrIP
		{
			get
			{
				return this._ErrIP;
			}
			set
			{
				if ((this._ErrIP != value))
				{
					this._ErrIP = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="userId", Storage="_UserId", DbType="NVarChar(50)")]
		public string UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					this._UserId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="NVarChar(20)")]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this._UserName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProjectName", DbType="NVarChar(100)")]
		public string ProjectName
		{
			get
			{
				return this._ProjectName;
			}
			set
			{
				if ((this._ProjectName != value))
				{
					this._ProjectName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitName", DbType="NVarChar(50)")]
		public string UnitName
		{
			get
			{
				return this._UnitName;
			}
			set
			{
				if ((this._UnitName != value))
				{
					this._UnitName = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.View_HotHardItem")]
	public partial class View_HotHardItem
	{
		
		private string _HotHardItemID;
		
		private string _HotHardID;
		
		private string _JOT_ID;
		
		private string _BAW_ID;
		
		private System.Nullable<int> _InstallationId;
		
		private string _InstallationName;
		
		private string _ISO_IsoNo;
		
		private System.Nullable<System.DateTime> _HotHardDate;
		
		private string _JOT_JointNo;
		
		private string _ProjectId;
		
		private string _Remark;
		
		private string _CellWelderCode;
		
		private string _JOT_JointDesc;
		
		private string _STE_Name;
		
		private string _ISO_IsoNumber;
		
		public View_HotHardItem()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HotHardItemID", DbType="VarChar(50)")]
		public string HotHardItemID
		{
			get
			{
				return this._HotHardItemID;
			}
			set
			{
				if ((this._HotHardItemID != value))
				{
					this._HotHardItemID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HotHardID", DbType="VarChar(50)")]
		public string HotHardID
		{
			get
			{
				return this._HotHardID;
			}
			set
			{
				if ((this._HotHardID != value))
				{
					this._HotHardID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JOT_ID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string JOT_ID
		{
			get
			{
				return this._JOT_ID;
			}
			set
			{
				if ((this._JOT_ID != value))
				{
					this._JOT_ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BAW_ID", DbType="NVarChar(50)")]
		public string BAW_ID
		{
			get
			{
				return this._BAW_ID;
			}
			set
			{
				if ((this._BAW_ID != value))
				{
					this._BAW_ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InstallationId", DbType="Int")]
		public System.Nullable<int> InstallationId
		{
			get
			{
				return this._InstallationId;
			}
			set
			{
				if ((this._InstallationId != value))
				{
					this._InstallationId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InstallationName", DbType="NVarChar(50)")]
		public string InstallationName
		{
			get
			{
				return this._InstallationName;
			}
			set
			{
				if ((this._InstallationName != value))
				{
					this._InstallationName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ISO_IsoNo", DbType="VarChar(50)")]
		public string ISO_IsoNo
		{
			get
			{
				return this._ISO_IsoNo;
			}
			set
			{
				if ((this._ISO_IsoNo != value))
				{
					this._ISO_IsoNo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HotHardDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> HotHardDate
		{
			get
			{
				return this._HotHardDate;
			}
			set
			{
				if ((this._HotHardDate != value))
				{
					this._HotHardDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JOT_JointNo", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string JOT_JointNo
		{
			get
			{
				return this._JOT_JointNo;
			}
			set
			{
				if ((this._JOT_JointNo != value))
				{
					this._JOT_JointNo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProjectId", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string ProjectId
		{
			get
			{
				return this._ProjectId;
			}
			set
			{
				if ((this._ProjectId != value))
				{
					this._ProjectId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Remark", DbType="VarChar(100)")]
		public string Remark
		{
			get
			{
				return this._Remark;
			}
			set
			{
				if ((this._Remark != value))
				{
					this._Remark = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CellWelderCode", DbType="VarChar(41)")]
		public string CellWelderCode
		{
			get
			{
				return this._CellWelderCode;
			}
			set
			{
				if ((this._CellWelderCode != value))
				{
					this._CellWelderCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JOT_JointDesc", DbType="VarChar(100)")]
		public string JOT_JointDesc
		{
			get
			{
				return this._JOT_JointDesc;
			}
			set
			{
				if ((this._JOT_JointDesc != value))
				{
					this._JOT_JointDesc = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_STE_Name", DbType="VarChar(101)")]
		public string STE_Name
		{
			get
			{
				return this._STE_Name;
			}
			set
			{
				if ((this._STE_Name != value))
				{
					this._STE_Name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ISO_IsoNumber", DbType="VarChar(50)")]
		public string ISO_IsoNumber
		{
			get
			{
				return this._ISO_IsoNumber;
			}
			set
			{
				if ((this._ISO_IsoNumber != value))
				{
					this._ISO_IsoNumber = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.View_HotHardSearch")]
	public partial class View_HotHardSearch
	{
		
		private string _JOT_ID;
		
		private string _JOT_JointNo;
		
		private string _ISO_ID;
		
		private string _ISO_IsoNo;
		
		private string _BSU_ID;
		
		private string _WorkAreaId;
		
		private string _ProjectId;
		
		private string _HotProessNo;
		
		private string _HotProessId;
		
		public View_HotHardSearch()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JOT_ID", DbType="VarChar(50)")]
		public string JOT_ID
		{
			get
			{
				return this._JOT_ID;
			}
			set
			{
				if ((this._JOT_ID != value))
				{
					this._JOT_ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JOT_JointNo", DbType="VarChar(50)")]
		public string JOT_JointNo
		{
			get
			{
				return this._JOT_JointNo;
			}
			set
			{
				if ((this._JOT_JointNo != value))
				{
					this._JOT_JointNo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ISO_ID", DbType="VarChar(50)")]
		public string ISO_ID
		{
			get
			{
				return this._ISO_ID;
			}
			set
			{
				if ((this._ISO_ID != value))
				{
					this._ISO_ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ISO_IsoNo", DbType="VarChar(50)")]
		public string ISO_IsoNo
		{
			get
			{
				return this._ISO_IsoNo;
			}
			set
			{
				if ((this._ISO_IsoNo != value))
				{
					this._ISO_IsoNo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BSU_ID", DbType="NVarChar(50)")]
		public string BSU_ID
		{
			get
			{
				return this._BSU_ID;
			}
			set
			{
				if ((this._BSU_ID != value))
				{
					this._BSU_ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WorkAreaId", DbType="NVarChar(50)")]
		public string WorkAreaId
		{
			get
			{
				return this._WorkAreaId;
			}
			set
			{
				if ((this._WorkAreaId != value))
				{
					this._WorkAreaId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProjectId", DbType="NVarChar(50)")]
		public string ProjectId
		{
			get
			{
				return this._ProjectId;
			}
			set
			{
				if ((this._ProjectId != value))
				{
					this._ProjectId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HotProessNo", DbType="VarChar(50)")]
		public string HotProessNo
		{
			get
			{
				return this._HotProessNo;
			}
			set
			{
				if ((this._HotProessNo != value))
				{
					this._HotProessNo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HotProessId", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string HotProessId
		{
			get
			{
				return this._HotProessId;
			}
			set
			{
				if ((this._HotProessId != value))
				{
					this._HotProessId = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.View_HotProessItem")]
	public partial class View_HotProessItem
	{
		
		private string _JOT_ID;
		
		private string _JOT_JointNo;
		
		private string _ISO_IsoNo;
		
		private string _ISO_ID;
		
		private string _STE_Name;
		
		private string _ISO_Specification;
		
		private System.Nullable<int> _PointCount;
		
		private string _RequiredT;
		
		private string _ActualT;
		
		private string _RequestTime;
		
		private string _ActualTime;
		
		private string _RecordChartNo;
		
		private string _HardnessReportNo;
		
		private string _HotProessId;
		
		private string _JOT_HotRpt;
		
		private string _IS_Proess;
		
		private string _DReportID;
		
		private System.Nullable<System.DateTime> _JOT_WeldDate;
		
		public View_HotProessItem()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JOT_ID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string JOT_ID
		{
			get
			{
				return this._JOT_ID;
			}
			set
			{
				if ((this._JOT_ID != value))
				{
					this._JOT_ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JOT_JointNo", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string JOT_JointNo
		{
			get
			{
				return this._JOT_JointNo;
			}
			set
			{
				if ((this._JOT_JointNo != value))
				{
					this._JOT_JointNo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ISO_IsoNo", DbType="VarChar(50)")]
		public string ISO_IsoNo
		{
			get
			{
				return this._ISO_IsoNo;
			}
			set
			{
				if ((this._ISO_IsoNo != value))
				{
					this._ISO_IsoNo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ISO_ID", DbType="VarChar(50)")]
		public string ISO_ID
		{
			get
			{
				return this._ISO_ID;
			}
			set
			{
				if ((this._ISO_ID != value))
				{
					this._ISO_ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_STE_Name", DbType="VarChar(50)")]
		public string STE_Name
		{
			get
			{
				return this._STE_Name;
			}
			set
			{
				if ((this._STE_Name != value))
				{
					this._STE_Name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ISO_Specification", DbType="VarChar(50)")]
		public string ISO_Specification
		{
			get
			{
				return this._ISO_Specification;
			}
			set
			{
				if ((this._ISO_Specification != value))
				{
					this._ISO_Specification = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PointCount", DbType="Int")]
		public System.Nullable<int> PointCount
		{
			get
			{
				return this._PointCount;
			}
			set
			{
				if ((this._PointCount != value))
				{
					this._PointCount = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RequiredT", DbType="VarChar(20)")]
		public string RequiredT
		{
			get
			{
				return this._RequiredT;
			}
			set
			{
				if ((this._RequiredT != value))
				{
					this._RequiredT = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActualT", DbType="VarChar(20)")]
		public string ActualT
		{
			get
			{
				return this._ActualT;
			}
			set
			{
				if ((this._ActualT != value))
				{
					this._ActualT = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RequestTime", DbType="VarChar(20)")]
		public string RequestTime
		{
			get
			{
				return this._RequestTime;
			}
			set
			{
				if ((this._RequestTime != value))
				{
					this._RequestTime = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActualTime", DbType="VarChar(20)")]
		public string ActualTime
		{
			get
			{
				return this._ActualTime;
			}
			set
			{
				if ((this._ActualTime != value))
				{
					this._ActualTime = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RecordChartNo", DbType="VarChar(20)")]
		public string RecordChartNo
		{
			get
			{
				return this._RecordChartNo;
			}
			set
			{
				if ((this._RecordChartNo != value))
				{
					this._RecordChartNo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HardnessReportNo", DbType="VarChar(20)")]
		public string HardnessReportNo
		{
			get
			{
				return this._HardnessReportNo;
			}
			set
			{
				if ((this._HardnessReportNo != value))
				{
					this._HardnessReportNo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HotProessId", DbType="VarChar(50)")]
		public string HotProessId
		{
			get
			{
				return this._HotProessId;
			}
			set
			{
				if ((this._HotProessId != value))
				{
					this._HotProessId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JOT_HotRpt", DbType="VarChar(40)")]
		public string JOT_HotRpt
		{
			get
			{
				return this._JOT_HotRpt;
			}
			set
			{
				if ((this._JOT_HotRpt != value))
				{
					this._JOT_HotRpt = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IS_Proess", DbType="Char(1)")]
		public string IS_Proess
		{
			get
			{
				return this._IS_Proess;
			}
			set
			{
				if ((this._IS_Proess != value))
				{
					this._IS_Proess = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DReportID", DbType="VarChar(50)")]
		public string DReportID
		{
			get
			{
				return this._DReportID;
			}
			set
			{
				if ((this._DReportID != value))
				{
					this._DReportID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JOT_WeldDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> JOT_WeldDate
		{
			get
			{
				return this._JOT_WeldDate;
			}
			set
			{
				if ((this._JOT_WeldDate != value))
				{
					this._JOT_WeldDate = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.View_IsoInfo")]
	public partial class View_IsoInfo
	{
		
		private string _ISO_ID;
		
		private string _BSU_ID;
		
		private string _UnitName;
		
		private string _ProjectId;
		
		private string _SER_ID;
		
		private string _SERName;
		
		private string _NDTR_Name;
		
		private string _NDT_ID;
		
		private string _NDTName;
		
		private string _BAW_ID;
		
		private string _BAWName;
		
		private string _ISO_IsoNo;
		
		private string _ISO_SysNo;
		
		private string _ISO_FileName;
		
		private string _ISO_SubSysNo;
		
		private string _ISO_CwpNo;
		
		private string _ISO_IsoNumber;
		
		private string _ISO_Rev;
		
		private string _ISO_Sheet;
		
		private System.Nullable<decimal> _ISO_PipeQty;
		
		private System.Nullable<decimal> _ISO_TotalDin;
		
		private string _ISO_Paint;
		
		private string _ISO_Insulator;
		
		private string _STE_ID;
		
		private string _STEName;
		
		private string _ISO_Executive;
		
		private string _ISO_Specification;
		
		private string _ISO_Modifier;
		
		private System.Nullable<System.DateTime> _ISO_ModifyDate;
		
		private string _ISO_Creator;
		
		private System.Nullable<System.DateTime> _ISO_CreateDate;
		
		private System.Nullable<int> _ISO_JointQty;
		
		private System.Nullable<decimal> _ISO_DesignPress;
		
		private System.Nullable<decimal> _ISO_DesignTemperature;
		
		private System.Nullable<decimal> _ISO_TestPress;
		
		private System.Nullable<decimal> _ISO_TestTemperature;
		
		private string _ISO_NDTClass;
		
		private string _ISO_PTRate;
		
		private string _IDName;
		
		private string _ISO_PTClass;
		
		private System.Nullable<bool> _ISO_IfPickling;
		
		private System.Nullable<bool> _ISO_IfChasing;
		
		private string _ISO_Remark;
		
		private string _PTP_TestPackageNo;
		
		public View_IsoInfo()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ISO_ID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string ISO_ID
		{
			get
			{
				return this._ISO_ID;
			}
			set
			{
				if ((this._ISO_ID != value))
				{
					this._ISO_ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BSU_ID", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string BSU_ID
		{
			get
			{
				return this._BSU_ID;
			}
			set
			{
				if ((this._BSU_ID != value))
				{
					this._BSU_ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitName", DbType="NVarChar(50)")]
		public string UnitName
		{
			get
			{
				return this._UnitName;
			}
			set
			{
				if ((this._UnitName != value))
				{
					this._UnitName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProjectId", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string ProjectId
		{
			get
			{
				return this._ProjectId;
			}
			set
			{
				if ((this._ProjectId != value))
				{
					this._ProjectId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SER_ID", DbType="VarChar(50)")]
		public string SER_ID
		{
			get
			{
				return this._SER_ID;
			}
			set
			{
				if ((this._SER_ID != value))
				{
					this._SER_ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SERName", DbType="VarChar(80)")]
		public string SERName
		{
			get
			{
				return this._SERName;
			}
			set
			{
				if ((this._SERName != value))
				{
					this._SERName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NDTR_Name", DbType="VarChar(50)")]
		public string NDTR_Name
		{
			get
			{
				return this._NDTR_Name;
			}
			set
			{
				if ((this._NDTR_Name != value))
				{
					this._NDTR_Name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NDT_ID", DbType="VarChar(50)")]
		public string NDT_ID
		{
			get
			{
				return this._NDT_ID;
			}
			set
			{
				if ((this._NDT_ID != value))
				{
					this._NDT_ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NDTName", DbType="VarChar(50)")]
		public string NDTName
		{
			get
			{
				return this._NDTName;
			}
			set
			{
				if ((this._NDTName != value))
				{
					this._NDTName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BAW_ID", DbType="NVarChar(50)")]
		public string BAW_ID
		{
			get
			{
				return this._BAW_ID;
			}
			set
			{
				if ((this._BAW_ID != value))
				{
					this._BAW_ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BAWName", DbType="NVarChar(20)")]
		public string BAWName
		{
			get
			{
				return this._BAWName;
			}
			set
			{
				if ((this._BAWName != value))
				{
					this._BAWName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ISO_IsoNo", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string ISO_IsoNo
		{
			get
			{
				return this._ISO_IsoNo;
			}
			set
			{
				if ((this._ISO_IsoNo != value))
				{
					this._ISO_IsoNo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ISO_SysNo", DbType="VarChar(50)")]
		public string ISO_SysNo
		{
			get
			{
				return this._ISO_SysNo;
			}
			set
			{
				if ((this._ISO_SysNo != value))
				{
					this._ISO_SysNo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ISO_FileName", DbType="VarChar(50)")]
		public string ISO_FileName
		{
			get
			{
				return this._ISO_FileName;
			}
			set
			{
				if ((this._ISO_FileName != value))
				{
					this._ISO_FileName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ISO_SubSysNo", DbType="VarChar(50)")]
		public string ISO_SubSysNo
		{
			get
			{
				return this._ISO_SubSysNo;
			}
			set
			{
				if ((this._ISO_SubSysNo != value))
				{
					this._ISO_SubSysNo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ISO_CwpNo", DbType="VarChar(50)")]
		public string ISO_CwpNo
		{
			get
			{
				return this._ISO_CwpNo;
			}
			set
			{
				if ((this._ISO_CwpNo != value))
				{
					this._ISO_CwpNo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ISO_IsoNumber", DbType="VarChar(50)")]
		public string ISO_IsoNumber
		{
			get
			{
				return this._ISO_IsoNumber;
			}
			set
			{
				if ((this._ISO_IsoNumber != value))
				{
					this._ISO_IsoNumber = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ISO_Rev", DbType="VarChar(20)")]
		public string ISO_Rev
		{
			get
			{
				return this._ISO_Rev;
			}
			set
			{
				if ((this._ISO_Rev != value))
				{
					this._ISO_Rev = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ISO_Sheet", DbType="VarChar(20)")]
		public string ISO_Sheet
		{
			get
			{
				return this._ISO_Sheet;
			}
			set
			{
				if ((this._ISO_Sheet != value))
				{
					this._ISO_Sheet = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ISO_PipeQty", DbType="Decimal(18,4)")]
		public System.Nullable<decimal> ISO_PipeQty
		{
			get
			{
				return this._ISO_PipeQty;
			}
			set
			{
				if ((this._ISO_PipeQty != value))
				{
					this._ISO_PipeQty = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ISO_TotalDin", DbType="Decimal(19,4)")]
		public System.Nullable<decimal> ISO_TotalDin
		{
			get
			{
				return this._ISO_TotalDin;
			}
			set
			{
				if ((this._ISO_TotalDin != value))
				{
					this._ISO_TotalDin = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ISO_Paint", DbType="VarChar(40)")]
		public string ISO_Paint
		{
			get
			{
				return this._ISO_Paint;
			}
			set
			{
				if ((this._ISO_Paint != value))
				{
					this._ISO_Paint = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ISO_Insulator", DbType="VarChar(40)")]
		public string ISO_Insulator
		{
			get
			{
				return this._ISO_Insulator;
			}
			set
			{
				if ((this._ISO_Insulator != value))
				{
					this._ISO_Insulator = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_STE_ID", DbType="VarChar(50)")]
		public string STE_ID
		{
			get
			{
				return this._STE_ID;
			}
			set
			{
				if ((this._STE_ID != value))
				{
					this._STE_ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_STEName", DbType="VarChar(50)")]
		public string STEName
		{
			get
			{
				return this._STEName;
			}
			set
			{
				if ((this._STEName != value))
				{
					this._STEName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ISO_Executive", DbType="VarChar(50)")]
		public string ISO_Executive
		{
			get
			{
				return this._ISO_Executive;
			}
			set
			{
				if ((this._ISO_Executive != value))
				{
					this._ISO_Executive = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ISO_Specification", DbType="VarChar(50)")]
		public string ISO_Specification
		{
			get
			{
				return this._ISO_Specification;
			}
			set
			{
				if ((this._ISO_Specification != value))
				{
					this._ISO_Specification = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ISO_Modifier", DbType="VarChar(20)")]
		public string ISO_Modifier
		{
			get
			{
				return this._ISO_Modifier;
			}
			set
			{
				if ((this._ISO_Modifier != value))
				{
					this._ISO_Modifier = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ISO_ModifyDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ISO_ModifyDate
		{
			get
			{
				return this._ISO_ModifyDate;
			}
			set
			{
				if ((this._ISO_ModifyDate != value))
				{
					this._ISO_ModifyDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ISO_Creator", DbType="VarChar(20)")]
		public string ISO_Creator
		{
			get
			{
				return this._ISO_Creator;
			}
			set
			{
				if ((this._ISO_Creator != value))
				{
					this._ISO_Creator = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ISO_CreateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ISO_CreateDate
		{
			get
			{
				return this._ISO_CreateDate;
			}
			set
			{
				if ((this._ISO_CreateDate != value))
				{
					this._ISO_CreateDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ISO_JointQty", DbType="Int")]
		public System.Nullable<int> ISO_JointQty
		{
			get
			{
				return this._ISO_JointQty;
			}
			set
			{
				if ((this._ISO_JointQty != value))
				{
					this._ISO_JointQty = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ISO_DesignPress", DbType="Decimal(18,4)")]
		public System.Nullable<decimal> ISO_DesignPress
		{
			get
			{
				return this._ISO_DesignPress;
			}
			set
			{
				if ((this._ISO_DesignPress != value))
				{
					this._ISO_DesignPress = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ISO_DesignTemperature", DbType="Decimal(18,4)")]
		public System.Nullable<decimal> ISO_DesignTemperature
		{
			get
			{
				return this._ISO_DesignTemperature;
			}
			set
			{
				if ((this._ISO_DesignTemperature != value))
				{
					this._ISO_DesignTemperature = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ISO_TestPress", DbType="Decimal(18,4)")]
		public System.Nullable<decimal> ISO_TestPress
		{
			get
			{
				return this._ISO_TestPress;
			}
			set
			{
				if ((this._ISO_TestPress != value))
				{
					this._ISO_TestPress = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ISO_TestTemperature", DbType="Decimal(18,4)")]
		public System.Nullable<decimal> ISO_TestTemperature
		{
			get
			{
				return this._ISO_TestTemperature;
			}
			set
			{
				if ((this._ISO_TestTemperature != value))
				{
					this._ISO_TestTemperature = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ISO_NDTClass", DbType="VarChar(8)")]
		public string ISO_NDTClass
		{
			get
			{
				return this._ISO_NDTClass;
			}
			set
			{
				if ((this._ISO_NDTClass != value))
				{
					this._ISO_NDTClass = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ISO_PTRate", DbType="VarChar(50)")]
		public string ISO_PTRate
		{
			get
			{
				return this._ISO_PTRate;
			}
			set
			{
				if ((this._ISO_PTRate != value))
				{
					this._ISO_PTRate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDName", DbType="VarChar(50)")]
		public string IDName
		{
			get
			{
				return this._IDName;
			}
			set
			{
				if ((this._IDName != value))
				{
					this._IDName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ISO_PTClass", DbType="VarChar(8)")]
		public string ISO_PTClass
		{
			get
			{
				return this._ISO_PTClass;
			}
			set
			{
				if ((this._ISO_PTClass != value))
				{
					this._ISO_PTClass = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ISO_IfPickling", DbType="Bit")]
		public System.Nullable<bool> ISO_IfPickling
		{
			get
			{
				return this._ISO_IfPickling;
			}
			set
			{
				if ((this._ISO_IfPickling != value))
				{
					this._ISO_IfPickling = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ISO_IfChasing", DbType="Bit")]
		public System.Nullable<bool> ISO_IfChasing
		{
			get
			{
				return this._ISO_IfChasing;
			}
			set
			{
				if ((this._ISO_IfChasing != value))
				{
					this._ISO_IfChasing = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ISO_Remark", DbType="VarChar(100)")]
		public string ISO_Remark
		{
			get
			{
				return this._ISO_Remark;
			}
			set
			{
				if ((this._ISO_Remark != value))
				{
					this._ISO_Remark = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PTP_TestPackageNo", DbType="VarChar(50)")]
		public string PTP_TestPackageNo
		{
			get
			{
				return this._PTP_TestPackageNo;
			}
			set
			{
				if ((this._PTP_TestPackageNo != value))
				{
					this._PTP_TestPackageNo = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.View_IsoInfoReportSearch")]
	public partial class View_IsoInfoReportSearch
	{
		
		private string _ProjectId;
		
		private string _BSU_ID;
		
		private string _BAW_ID;
		
		private string _ISO_IsoNo;
		
		private string _ISO_IsoNumber;
		
		private string _ISO_ID;
		
		public View_IsoInfoReportSearch()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProjectId", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string ProjectId
		{
			get
			{
				return this._ProjectId;
			}
			set
			{
				if ((this._ProjectId != value))
				{
					this._ProjectId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BSU_ID", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string BSU_ID
		{
			get
			{
				return this._BSU_ID;
			}
			set
			{
				if ((this._BSU_ID != value))
				{
					this._BSU_ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BAW_ID", DbType="NVarChar(50)")]
		public string BAW_ID
		{
			get
			{
				return this._BAW_ID;
			}
			set
			{
				if ((this._BAW_ID != value))
				{
					this._BAW_ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ISO_IsoNo", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string ISO_IsoNo
		{
			get
			{
				return this._ISO_IsoNo;
			}
			set
			{
				if ((this._ISO_IsoNo != value))
				{
					this._ISO_IsoNo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ISO_IsoNumber", DbType="VarChar(50)")]
		public string ISO_IsoNumber
		{
			get
			{
				return this._ISO_IsoNumber;
			}
			set
			{
				if ((this._ISO_IsoNumber != value))
				{
					this._ISO_IsoNumber = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ISO_ID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string ISO_ID
		{
			get
			{
				return this._ISO_ID;
			}
			set
			{
				if ((this._ISO_ID != value))
				{
					this._ISO_ID = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.View_IsoinfoView")]
	public partial class View_IsoinfoView
	{
		
		private string _ProjectId;
		
		private string _UnitName;
		
		private string _Iso_isono;
		
		private System.Nullable<int> _Jot_count;
		
		private System.Nullable<decimal> _ISO_TotalDin;
		
		private string _Ser_name;
		
		private string _Ndtr_rate;
		
		private string _Ndt_name;
		
		private string _ISO_NDTClass;
		
		private string _Ste_name;
		
		private string _ISO_Specification;
		
		private System.Nullable<decimal> _ISO_DesignPress;
		
		private System.Nullable<decimal> _ISO_DesignTemperature;
		
		private System.Nullable<decimal> _ISO_TestPress;
		
		private System.Nullable<decimal> _ISO_TestTemperature;
		
		private string _WorkAreaCode;
		
		private string _WorkAreaId;
		
		private string _ISO_SysNo;
		
		private string _ISO_SubSysNo;
		
		private string _ISO_CwpNo;
		
		private string _ISO_IsoNumber;
		
		private string _SupervisorUnitId;
		
		private string _Is_proess;
		
		private string _PTP_TestPackageNo;
		
		private System.Nullable<System.DateTime> _PTP_TableDate;
		
		public View_IsoinfoView()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProjectId", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string ProjectId
		{
			get
			{
				return this._ProjectId;
			}
			set
			{
				if ((this._ProjectId != value))
				{
					this._ProjectId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitName", DbType="NVarChar(50)")]
		public string UnitName
		{
			get
			{
				return this._UnitName;
			}
			set
			{
				if ((this._UnitName != value))
				{
					this._UnitName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="iso_isono", Storage="_Iso_isono", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Iso_isono
		{
			get
			{
				return this._Iso_isono;
			}
			set
			{
				if ((this._Iso_isono != value))
				{
					this._Iso_isono = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="jot_count", Storage="_Jot_count", DbType="Int")]
		public System.Nullable<int> Jot_count
		{
			get
			{
				return this._Jot_count;
			}
			set
			{
				if ((this._Jot_count != value))
				{
					this._Jot_count = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ISO_TotalDin", DbType="Decimal(19,2)")]
		public System.Nullable<decimal> ISO_TotalDin
		{
			get
			{
				return this._ISO_TotalDin;
			}
			set
			{
				if ((this._ISO_TotalDin != value))
				{
					this._ISO_TotalDin = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="ser_name", Storage="_Ser_name", DbType="VarChar(80)")]
		public string Ser_name
		{
			get
			{
				return this._Ser_name;
			}
			set
			{
				if ((this._Ser_name != value))
				{
					this._Ser_name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="ndtr_rate", Storage="_Ndtr_rate", DbType="VarChar(50)")]
		public string Ndtr_rate
		{
			get
			{
				return this._Ndtr_rate;
			}
			set
			{
				if ((this._Ndtr_rate != value))
				{
					this._Ndtr_rate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="ndt_name", Storage="_Ndt_name", DbType="VarChar(50)")]
		public string Ndt_name
		{
			get
			{
				return this._Ndt_name;
			}
			set
			{
				if ((this._Ndt_name != value))
				{
					this._Ndt_name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ISO_NDTClass", DbType="VarChar(8)")]
		public string ISO_NDTClass
		{
			get
			{
				return this._ISO_NDTClass;
			}
			set
			{
				if ((this._ISO_NDTClass != value))
				{
					this._ISO_NDTClass = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="ste_name", Storage="_Ste_name", DbType="VarChar(50)")]
		public string Ste_name
		{
			get
			{
				return this._Ste_name;
			}
			set
			{
				if ((this._Ste_name != value))
				{
					this._Ste_name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ISO_Specification", DbType="VarChar(50)")]
		public string ISO_Specification
		{
			get
			{
				return this._ISO_Specification;
			}
			set
			{
				if ((this._ISO_Specification != value))
				{
					this._ISO_Specification = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ISO_DesignPress", DbType="Decimal(18,4)")]
		public System.Nullable<decimal> ISO_DesignPress
		{
			get
			{
				return this._ISO_DesignPress;
			}
			set
			{
				if ((this._ISO_DesignPress != value))
				{
					this._ISO_DesignPress = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ISO_DesignTemperature", DbType="Decimal(18,4)")]
		public System.Nullable<decimal> ISO_DesignTemperature
		{
			get
			{
				return this._ISO_DesignTemperature;
			}
			set
			{
				if ((this._ISO_DesignTemperature != value))
				{
					this._ISO_DesignTemperature = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ISO_TestPress", DbType="Decimal(18,4)")]
		public System.Nullable<decimal> ISO_TestPress
		{
			get
			{
				return this._ISO_TestPress;
			}
			set
			{
				if ((this._ISO_TestPress != value))
				{
					this._ISO_TestPress = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ISO_TestTemperature", DbType="Decimal(18,4)")]
		public System.Nullable<decimal> ISO_TestTemperature
		{
			get
			{
				return this._ISO_TestTemperature;
			}
			set
			{
				if ((this._ISO_TestTemperature != value))
				{
					this._ISO_TestTemperature = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WorkAreaCode", DbType="NVarChar(20)")]
		public string WorkAreaCode
		{
			get
			{
				return this._WorkAreaCode;
			}
			set
			{
				if ((this._WorkAreaCode != value))
				{
					this._WorkAreaCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WorkAreaId", DbType="NVarChar(50)")]
		public string WorkAreaId
		{
			get
			{
				return this._WorkAreaId;
			}
			set
			{
				if ((this._WorkAreaId != value))
				{
					this._WorkAreaId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ISO_SysNo", DbType="VarChar(50)")]
		public string ISO_SysNo
		{
			get
			{
				return this._ISO_SysNo;
			}
			set
			{
				if ((this._ISO_SysNo != value))
				{
					this._ISO_SysNo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ISO_SubSysNo", DbType="VarChar(50)")]
		public string ISO_SubSysNo
		{
			get
			{
				return this._ISO_SubSysNo;
			}
			set
			{
				if ((this._ISO_SubSysNo != value))
				{
					this._ISO_SubSysNo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ISO_CwpNo", DbType="VarChar(50)")]
		public string ISO_CwpNo
		{
			get
			{
				return this._ISO_CwpNo;
			}
			set
			{
				if ((this._ISO_CwpNo != value))
				{
					this._ISO_CwpNo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ISO_IsoNumber", DbType="VarChar(50)")]
		public string ISO_IsoNumber
		{
			get
			{
				return this._ISO_IsoNumber;
			}
			set
			{
				if ((this._ISO_IsoNumber != value))
				{
					this._ISO_IsoNumber = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SupervisorUnitId", DbType="NVarChar(50)")]
		public string SupervisorUnitId
		{
			get
			{
				return this._SupervisorUnitId;
			}
			set
			{
				if ((this._SupervisorUnitId != value))
				{
					this._SupervisorUnitId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="is_proess", Storage="_Is_proess", DbType="Char(1)")]
		public string Is_proess
		{
			get
			{
				return this._Is_proess;
			}
			set
			{
				if ((this._Is_proess != value))
				{
					this._Is_proess = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PTP_TestPackageNo", DbType="VarChar(50)")]
		public string PTP_TestPackageNo
		{
			get
			{
				return this._PTP_TestPackageNo;
			}
			set
			{
				if ((this._PTP_TestPackageNo != value))
				{
					this._PTP_TestPackageNo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PTP_TableDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> PTP_TableDate
		{
			get
			{
				return this._PTP_TableDate;
			}
			set
			{
				if ((this._PTP_TableDate != value))
				{
					this._PTP_TableDate = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.View_JointInfo")]
	public partial class View_JointInfo
	{
		
		private string _JOT_ID;
		
		private string _ProjectId;
		
		private string _JOT_JointNo;
		
		private string _JOT_DailyReportNo;
		
		private System.Nullable<System.DateTime> _JOT_WeldDate;
		
		private string _ISO_ID;
		
		private string _ISO_IsoNo;
		
		private string _BAW_ID;
		
		private string _STE_Name1;
		
		private string _STE_Name2;
		
		private string _WED_Code1;
		
		private string _WED_Name1;
		
		private string _WED_Code2;
		
		private string _WED_Name2;
		
		private string _WLO_Code;
		
		private string _WLO_Name;
		
		private System.Nullable<decimal> _JOT_DoneDin;
		
		private string _FloorGroup;
		
		private string _CellGroup;
		
		private string _IS_Compute;
		
		private string _JOT_NDTResult;
		
		private string _Component1;
		
		private string _Component2;
		
		private string _JOT_HeartNo1;
		
		private string _JOT_HeartNo2;
		
		private string _WeldMat;
		
		private string _JointStatus;
		
		private string _JOT_FaceCheckResult;
		
		private System.Nullable<System.DateTime> _JOT_FaceCheckDate;
		
		private System.Nullable<System.DateTime> _JOT_PHWTDate;
		
		private string _JOT_PHWTReportNo;
		
		private string _JOT_PHWTResult;
		
		private string _JOT_FaceChecker;
		
		private System.Nullable<decimal> _JOT_Dia;
		
		private System.Nullable<decimal> _JOT_Size;
		
		private string _JOT_Sch;
		
		private System.Nullable<decimal> _JOT_FactSch;
		
		private string _JOT_JointFlag;
		
		private string _JOT_TrustFlag;
		
		private System.Nullable<int> _JOT_BecauseJointNo;
		
		private string _JOT_JointDesc;
		
		private string _WeldSilk;
		
		private string _JOTY_ID;
		
		private string _JOTY_Name;
		
		private string _JOT_CheckFlag;
		
		private string _JOT_RepairFlag;
		
		private string _WME_ID;
		
		private string _WME_Name;
		
		private string _JST_Name;
		
		private string _JOT_BelongPipe;
		
		private string _JOT_CheckResult;
		
		private string _JOT_Electricity;
		
		private string _JOT_Voltage;
		
		private string _IS_Proess;
		
		private System.Nullable<System.DateTime> _JOT_ProessDate;
		
		private string _JOT_HotRpt;
		
		private System.Nullable<decimal> _JOT_PrepareTemp;
		
		private System.Nullable<decimal> _JOT_CellTemp;
		
		private System.Nullable<decimal> _JOT_LastTemp;
		
		private string _JOT_JointAttribute;
		
		private string _JOT_CellWeldRules;
		
		private string _JOT_FloorWeldRules;
		
		private string _FloorWeld1;
		
		private string _CellWelder1;
		
		private string _FloorWeld2;
		
		private string _CellWelder2;
		
		private string _PointNo;
		
		private System.Nullable<System.DateTime> _PointDate;
		
		private string _CH_TrustCode;
		
		private System.Nullable<System.DateTime> _CH_TrustDate;
		
		private string _NDT_Name;
		
		private string _RePairNo1;
		
		private System.Nullable<System.DateTime> _RePairDate1;
		
		private string _RePairNo2;
		
		private System.Nullable<System.DateTime> _RePairDate2;
		
		private System.Nullable<System.DateTime> _Fix1_date;
		
		private System.Nullable<System.DateTime> _Fix2_date;
		
		private string _JOT_Remark;
		
		private string _WorkAreaCode;
		
		private string _NDTR_Name;
		
		private string _Is_hj;
		
		private string _If_dk;
		
		public View_JointInfo()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JOT_ID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string JOT_ID
		{
			get
			{
				return this._JOT_ID;
			}
			set
			{
				if ((this._JOT_ID != value))
				{
					this._JOT_ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProjectId", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string ProjectId
		{
			get
			{
				return this._ProjectId;
			}
			set
			{
				if ((this._ProjectId != value))
				{
					this._ProjectId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JOT_JointNo", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string JOT_JointNo
		{
			get
			{
				return this._JOT_JointNo;
			}
			set
			{
				if ((this._JOT_JointNo != value))
				{
					this._JOT_JointNo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JOT_DailyReportNo", DbType="VarChar(50)")]
		public string JOT_DailyReportNo
		{
			get
			{
				return this._JOT_DailyReportNo;
			}
			set
			{
				if ((this._JOT_DailyReportNo != value))
				{
					this._JOT_DailyReportNo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JOT_WeldDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> JOT_WeldDate
		{
			get
			{
				return this._JOT_WeldDate;
			}
			set
			{
				if ((this._JOT_WeldDate != value))
				{
					this._JOT_WeldDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ISO_ID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string ISO_ID
		{
			get
			{
				return this._ISO_ID;
			}
			set
			{
				if ((this._ISO_ID != value))
				{
					this._ISO_ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ISO_IsoNo", DbType="VarChar(50)")]
		public string ISO_IsoNo
		{
			get
			{
				return this._ISO_IsoNo;
			}
			set
			{
				if ((this._ISO_IsoNo != value))
				{
					this._ISO_IsoNo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BAW_ID", DbType="NVarChar(50)")]
		public string BAW_ID
		{
			get
			{
				return this._BAW_ID;
			}
			set
			{
				if ((this._BAW_ID != value))
				{
					this._BAW_ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_STE_Name1", DbType="VarChar(20)")]
		public string STE_Name1
		{
			get
			{
				return this._STE_Name1;
			}
			set
			{
				if ((this._STE_Name1 != value))
				{
					this._STE_Name1 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_STE_Name2", DbType="VarChar(20)")]
		public string STE_Name2
		{
			get
			{
				return this._STE_Name2;
			}
			set
			{
				if ((this._STE_Name2 != value))
				{
					this._STE_Name2 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WED_Code1", DbType="VarChar(20)")]
		public string WED_Code1
		{
			get
			{
				return this._WED_Code1;
			}
			set
			{
				if ((this._WED_Code1 != value))
				{
					this._WED_Code1 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WED_Name1", DbType="VarChar(40)")]
		public string WED_Name1
		{
			get
			{
				return this._WED_Name1;
			}
			set
			{
				if ((this._WED_Name1 != value))
				{
					this._WED_Name1 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WED_Code2", DbType="VarChar(20)")]
		public string WED_Code2
		{
			get
			{
				return this._WED_Code2;
			}
			set
			{
				if ((this._WED_Code2 != value))
				{
					this._WED_Code2 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WED_Name2", DbType="VarChar(40)")]
		public string WED_Name2
		{
			get
			{
				return this._WED_Name2;
			}
			set
			{
				if ((this._WED_Name2 != value))
				{
					this._WED_Name2 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WLO_Code", DbType="VarChar(20)")]
		public string WLO_Code
		{
			get
			{
				return this._WLO_Code;
			}
			set
			{
				if ((this._WLO_Code != value))
				{
					this._WLO_Code = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WLO_Name", DbType="VarChar(50)")]
		public string WLO_Name
		{
			get
			{
				return this._WLO_Name;
			}
			set
			{
				if ((this._WLO_Name != value))
				{
					this._WLO_Name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JOT_DoneDin", DbType="Decimal(18,4)")]
		public System.Nullable<decimal> JOT_DoneDin
		{
			get
			{
				return this._JOT_DoneDin;
			}
			set
			{
				if ((this._JOT_DoneDin != value))
				{
					this._JOT_DoneDin = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FloorGroup", DbType="VarChar(20)")]
		public string FloorGroup
		{
			get
			{
				return this._FloorGroup;
			}
			set
			{
				if ((this._FloorGroup != value))
				{
					this._FloorGroup = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CellGroup", DbType="VarChar(20)")]
		public string CellGroup
		{
			get
			{
				return this._CellGroup;
			}
			set
			{
				if ((this._CellGroup != value))
				{
					this._CellGroup = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IS_Compute", DbType="Char(1)")]
		public string IS_Compute
		{
			get
			{
				return this._IS_Compute;
			}
			set
			{
				if ((this._IS_Compute != value))
				{
					this._IS_Compute = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JOT_NDTResult", DbType="VarChar(50)")]
		public string JOT_NDTResult
		{
			get
			{
				return this._JOT_NDTResult;
			}
			set
			{
				if ((this._JOT_NDTResult != value))
				{
					this._JOT_NDTResult = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Component1", DbType="VarChar(50)")]
		public string Component1
		{
			get
			{
				return this._Component1;
			}
			set
			{
				if ((this._Component1 != value))
				{
					this._Component1 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Component2", DbType="VarChar(50)")]
		public string Component2
		{
			get
			{
				return this._Component2;
			}
			set
			{
				if ((this._Component2 != value))
				{
					this._Component2 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JOT_HeartNo1", DbType="VarChar(50)")]
		public string JOT_HeartNo1
		{
			get
			{
				return this._JOT_HeartNo1;
			}
			set
			{
				if ((this._JOT_HeartNo1 != value))
				{
					this._JOT_HeartNo1 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JOT_HeartNo2", DbType="VarChar(50)")]
		public string JOT_HeartNo2
		{
			get
			{
				return this._JOT_HeartNo2;
			}
			set
			{
				if ((this._JOT_HeartNo2 != value))
				{
					this._JOT_HeartNo2 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WeldMat", DbType="VarChar(20)")]
		public string WeldMat
		{
			get
			{
				return this._WeldMat;
			}
			set
			{
				if ((this._WeldMat != value))
				{
					this._WeldMat = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JointStatus", DbType="VarChar(20)")]
		public string JointStatus
		{
			get
			{
				return this._JointStatus;
			}
			set
			{
				if ((this._JointStatus != value))
				{
					this._JointStatus = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JOT_FaceCheckResult", DbType="VarChar(20)")]
		public string JOT_FaceCheckResult
		{
			get
			{
				return this._JOT_FaceCheckResult;
			}
			set
			{
				if ((this._JOT_FaceCheckResult != value))
				{
					this._JOT_FaceCheckResult = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JOT_FaceCheckDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> JOT_FaceCheckDate
		{
			get
			{
				return this._JOT_FaceCheckDate;
			}
			set
			{
				if ((this._JOT_FaceCheckDate != value))
				{
					this._JOT_FaceCheckDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JOT_PHWTDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> JOT_PHWTDate
		{
			get
			{
				return this._JOT_PHWTDate;
			}
			set
			{
				if ((this._JOT_PHWTDate != value))
				{
					this._JOT_PHWTDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JOT_PHWTReportNo", DbType="VarChar(50)")]
		public string JOT_PHWTReportNo
		{
			get
			{
				return this._JOT_PHWTReportNo;
			}
			set
			{
				if ((this._JOT_PHWTReportNo != value))
				{
					this._JOT_PHWTReportNo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JOT_PHWTResult", DbType="VarChar(20)")]
		public string JOT_PHWTResult
		{
			get
			{
				return this._JOT_PHWTResult;
			}
			set
			{
				if ((this._JOT_PHWTResult != value))
				{
					this._JOT_PHWTResult = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JOT_FaceChecker", DbType="VarChar(20)")]
		public string JOT_FaceChecker
		{
			get
			{
				return this._JOT_FaceChecker;
			}
			set
			{
				if ((this._JOT_FaceChecker != value))
				{
					this._JOT_FaceChecker = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JOT_Dia", DbType="Decimal(18,4)")]
		public System.Nullable<decimal> JOT_Dia
		{
			get
			{
				return this._JOT_Dia;
			}
			set
			{
				if ((this._JOT_Dia != value))
				{
					this._JOT_Dia = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JOT_Size", DbType="Decimal(18,4)")]
		public System.Nullable<decimal> JOT_Size
		{
			get
			{
				return this._JOT_Size;
			}
			set
			{
				if ((this._JOT_Size != value))
				{
					this._JOT_Size = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JOT_Sch", DbType="VarChar(40)")]
		public string JOT_Sch
		{
			get
			{
				return this._JOT_Sch;
			}
			set
			{
				if ((this._JOT_Sch != value))
				{
					this._JOT_Sch = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JOT_FactSch", DbType="Decimal(18,4)")]
		public System.Nullable<decimal> JOT_FactSch
		{
			get
			{
				return this._JOT_FactSch;
			}
			set
			{
				if ((this._JOT_FactSch != value))
				{
					this._JOT_FactSch = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JOT_JointFlag", DbType="VarChar(80)")]
		public string JOT_JointFlag
		{
			get
			{
				return this._JOT_JointFlag;
			}
			set
			{
				if ((this._JOT_JointFlag != value))
				{
					this._JOT_JointFlag = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JOT_TrustFlag", DbType="VarChar(40)")]
		public string JOT_TrustFlag
		{
			get
			{
				return this._JOT_TrustFlag;
			}
			set
			{
				if ((this._JOT_TrustFlag != value))
				{
					this._JOT_TrustFlag = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JOT_BecauseJointNo", DbType="Int")]
		public System.Nullable<int> JOT_BecauseJointNo
		{
			get
			{
				return this._JOT_BecauseJointNo;
			}
			set
			{
				if ((this._JOT_BecauseJointNo != value))
				{
					this._JOT_BecauseJointNo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JOT_JointDesc", DbType="VarChar(100)")]
		public string JOT_JointDesc
		{
			get
			{
				return this._JOT_JointDesc;
			}
			set
			{
				if ((this._JOT_JointDesc != value))
				{
					this._JOT_JointDesc = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WeldSilk", DbType="VarChar(20)")]
		public string WeldSilk
		{
			get
			{
				return this._WeldSilk;
			}
			set
			{
				if ((this._WeldSilk != value))
				{
					this._WeldSilk = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JOTY_ID", DbType="VarChar(50)")]
		public string JOTY_ID
		{
			get
			{
				return this._JOTY_ID;
			}
			set
			{
				if ((this._JOTY_ID != value))
				{
					this._JOTY_ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JOTY_Name", DbType="VarChar(50)")]
		public string JOTY_Name
		{
			get
			{
				return this._JOTY_Name;
			}
			set
			{
				if ((this._JOTY_Name != value))
				{
					this._JOTY_Name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JOT_CheckFlag", DbType="VarChar(40)")]
		public string JOT_CheckFlag
		{
			get
			{
				return this._JOT_CheckFlag;
			}
			set
			{
				if ((this._JOT_CheckFlag != value))
				{
					this._JOT_CheckFlag = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JOT_RepairFlag", DbType="VarChar(40)")]
		public string JOT_RepairFlag
		{
			get
			{
				return this._JOT_RepairFlag;
			}
			set
			{
				if ((this._JOT_RepairFlag != value))
				{
					this._JOT_RepairFlag = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WME_ID", DbType="VarChar(50)")]
		public string WME_ID
		{
			get
			{
				return this._WME_ID;
			}
			set
			{
				if ((this._WME_ID != value))
				{
					this._WME_ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WME_Name", DbType="VarChar(50)")]
		public string WME_Name
		{
			get
			{
				return this._WME_Name;
			}
			set
			{
				if ((this._WME_Name != value))
				{
					this._WME_Name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JST_Name", DbType="VarChar(50)")]
		public string JST_Name
		{
			get
			{
				return this._JST_Name;
			}
			set
			{
				if ((this._JST_Name != value))
				{
					this._JST_Name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JOT_BelongPipe", DbType="VarChar(50)")]
		public string JOT_BelongPipe
		{
			get
			{
				return this._JOT_BelongPipe;
			}
			set
			{
				if ((this._JOT_BelongPipe != value))
				{
					this._JOT_BelongPipe = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JOT_CheckResult", DbType="VarChar(40)")]
		public string JOT_CheckResult
		{
			get
			{
				return this._JOT_CheckResult;
			}
			set
			{
				if ((this._JOT_CheckResult != value))
				{
					this._JOT_CheckResult = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JOT_Electricity", DbType="VarChar(40)")]
		public string JOT_Electricity
		{
			get
			{
				return this._JOT_Electricity;
			}
			set
			{
				if ((this._JOT_Electricity != value))
				{
					this._JOT_Electricity = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JOT_Voltage", DbType="VarChar(40)")]
		public string JOT_Voltage
		{
			get
			{
				return this._JOT_Voltage;
			}
			set
			{
				if ((this._JOT_Voltage != value))
				{
					this._JOT_Voltage = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IS_Proess", DbType="Char(1)")]
		public string IS_Proess
		{
			get
			{
				return this._IS_Proess;
			}
			set
			{
				if ((this._IS_Proess != value))
				{
					this._IS_Proess = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JOT_ProessDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> JOT_ProessDate
		{
			get
			{
				return this._JOT_ProessDate;
			}
			set
			{
				if ((this._JOT_ProessDate != value))
				{
					this._JOT_ProessDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JOT_HotRpt", DbType="VarChar(40)")]
		public string JOT_HotRpt
		{
			get
			{
				return this._JOT_HotRpt;
			}
			set
			{
				if ((this._JOT_HotRpt != value))
				{
					this._JOT_HotRpt = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JOT_PrepareTemp", DbType="Decimal(18,4)")]
		public System.Nullable<decimal> JOT_PrepareTemp
		{
			get
			{
				return this._JOT_PrepareTemp;
			}
			set
			{
				if ((this._JOT_PrepareTemp != value))
				{
					this._JOT_PrepareTemp = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JOT_CellTemp", DbType="Decimal(18,4)")]
		public System.Nullable<decimal> JOT_CellTemp
		{
			get
			{
				return this._JOT_CellTemp;
			}
			set
			{
				if ((this._JOT_CellTemp != value))
				{
					this._JOT_CellTemp = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JOT_LastTemp", DbType="Decimal(18,4)")]
		public System.Nullable<decimal> JOT_LastTemp
		{
			get
			{
				return this._JOT_LastTemp;
			}
			set
			{
				if ((this._JOT_LastTemp != value))
				{
					this._JOT_LastTemp = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JOT_JointAttribute", DbType="VarChar(20)")]
		public string JOT_JointAttribute
		{
			get
			{
				return this._JOT_JointAttribute;
			}
			set
			{
				if ((this._JOT_JointAttribute != value))
				{
					this._JOT_JointAttribute = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JOT_CellWeldRules", DbType="VarChar(50)")]
		public string JOT_CellWeldRules
		{
			get
			{
				return this._JOT_CellWeldRules;
			}
			set
			{
				if ((this._JOT_CellWeldRules != value))
				{
					this._JOT_CellWeldRules = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JOT_FloorWeldRules", DbType="VarChar(50)")]
		public string JOT_FloorWeldRules
		{
			get
			{
				return this._JOT_FloorWeldRules;
			}
			set
			{
				if ((this._JOT_FloorWeldRules != value))
				{
					this._JOT_FloorWeldRules = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FloorWeld1", DbType="VarChar(40)")]
		public string FloorWeld1
		{
			get
			{
				return this._FloorWeld1;
			}
			set
			{
				if ((this._FloorWeld1 != value))
				{
					this._FloorWeld1 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CellWelder1", DbType="VarChar(40)")]
		public string CellWelder1
		{
			get
			{
				return this._CellWelder1;
			}
			set
			{
				if ((this._CellWelder1 != value))
				{
					this._CellWelder1 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FloorWeld2", DbType="VarChar(40)")]
		public string FloorWeld2
		{
			get
			{
				return this._FloorWeld2;
			}
			set
			{
				if ((this._FloorWeld2 != value))
				{
					this._FloorWeld2 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CellWelder2", DbType="VarChar(40)")]
		public string CellWelder2
		{
			get
			{
				return this._CellWelder2;
			}
			set
			{
				if ((this._CellWelder2 != value))
				{
					this._CellWelder2 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PointNo", DbType="VarChar(50)")]
		public string PointNo
		{
			get
			{
				return this._PointNo;
			}
			set
			{
				if ((this._PointNo != value))
				{
					this._PointNo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PointDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> PointDate
		{
			get
			{
				return this._PointDate;
			}
			set
			{
				if ((this._PointDate != value))
				{
					this._PointDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CH_TrustCode", DbType="VarChar(30)")]
		public string CH_TrustCode
		{
			get
			{
				return this._CH_TrustCode;
			}
			set
			{
				if ((this._CH_TrustCode != value))
				{
					this._CH_TrustCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CH_TrustDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CH_TrustDate
		{
			get
			{
				return this._CH_TrustDate;
			}
			set
			{
				if ((this._CH_TrustDate != value))
				{
					this._CH_TrustDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NDT_Name", DbType="VarChar(50)")]
		public string NDT_Name
		{
			get
			{
				return this._NDT_Name;
			}
			set
			{
				if ((this._NDT_Name != value))
				{
					this._NDT_Name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RePairNo1", DbType="VarChar(50)")]
		public string RePairNo1
		{
			get
			{
				return this._RePairNo1;
			}
			set
			{
				if ((this._RePairNo1 != value))
				{
					this._RePairNo1 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RePairDate1", DbType="DateTime")]
		public System.Nullable<System.DateTime> RePairDate1
		{
			get
			{
				return this._RePairDate1;
			}
			set
			{
				if ((this._RePairDate1 != value))
				{
					this._RePairDate1 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RePairNo2", DbType="VarChar(50)")]
		public string RePairNo2
		{
			get
			{
				return this._RePairNo2;
			}
			set
			{
				if ((this._RePairNo2 != value))
				{
					this._RePairNo2 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RePairDate2", DbType="DateTime")]
		public System.Nullable<System.DateTime> RePairDate2
		{
			get
			{
				return this._RePairDate2;
			}
			set
			{
				if ((this._RePairDate2 != value))
				{
					this._RePairDate2 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Fix1_date", DbType="DateTime")]
		public System.Nullable<System.DateTime> Fix1_date
		{
			get
			{
				return this._Fix1_date;
			}
			set
			{
				if ((this._Fix1_date != value))
				{
					this._Fix1_date = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Fix2_date", DbType="DateTime")]
		public System.Nullable<System.DateTime> Fix2_date
		{
			get
			{
				return this._Fix2_date;
			}
			set
			{
				if ((this._Fix2_date != value))
				{
					this._Fix2_date = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JOT_Remark", DbType="VarChar(100)")]
		public string JOT_Remark
		{
			get
			{
				return this._JOT_Remark;
			}
			set
			{
				if ((this._JOT_Remark != value))
				{
					this._JOT_Remark = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WorkAreaCode", DbType="NVarChar(20)")]
		public string WorkAreaCode
		{
			get
			{
				return this._WorkAreaCode;
			}
			set
			{
				if ((this._WorkAreaCode != value))
				{
					this._WorkAreaCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NDTR_Name", DbType="VarChar(50)")]
		public string NDTR_Name
		{
			get
			{
				return this._NDTR_Name;
			}
			set
			{
				if ((this._NDTR_Name != value))
				{
					this._NDTR_Name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="is_hj", Storage="_Is_hj", DbType="VarChar(1) NOT NULL", CanBeNull=false)]
		public string Is_hj
		{
			get
			{
				return this._Is_hj;
			}
			set
			{
				if ((this._Is_hj != value))
				{
					this._Is_hj = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="if_dk", Storage="_If_dk", DbType="VarChar(1) NOT NULL", CanBeNull=false)]
		public string If_dk
		{
			get
			{
				return this._If_dk;
			}
			set
			{
				if ((this._If_dk != value))
				{
					this._If_dk = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.View_JointInfoAndIsoInfo")]
	public partial class View_JointInfoAndIsoInfo
	{
		
		private string _ProjectId;
		
		private string _WorkAreaCode;
		
		private string _UnitCode;
		
		private string _ISO_IsoNo;
		
		private string _JOT_JointNo;
		
		private string _JOT_ID;
		
		private string _ISO_ID;
		
		private string _BAW_ID;
		
		private string _DReportID;
		
		public View_JointInfoAndIsoInfo()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProjectId", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string ProjectId
		{
			get
			{
				return this._ProjectId;
			}
			set
			{
				if ((this._ProjectId != value))
				{
					this._ProjectId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WorkAreaCode", DbType="NVarChar(20)")]
		public string WorkAreaCode
		{
			get
			{
				return this._WorkAreaCode;
			}
			set
			{
				if ((this._WorkAreaCode != value))
				{
					this._WorkAreaCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitCode", DbType="NVarChar(20)")]
		public string UnitCode
		{
			get
			{
				return this._UnitCode;
			}
			set
			{
				if ((this._UnitCode != value))
				{
					this._UnitCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ISO_IsoNo", DbType="VarChar(50)")]
		public string ISO_IsoNo
		{
			get
			{
				return this._ISO_IsoNo;
			}
			set
			{
				if ((this._ISO_IsoNo != value))
				{
					this._ISO_IsoNo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JOT_JointNo", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string JOT_JointNo
		{
			get
			{
				return this._JOT_JointNo;
			}
			set
			{
				if ((this._JOT_JointNo != value))
				{
					this._JOT_JointNo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JOT_ID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string JOT_ID
		{
			get
			{
				return this._JOT_ID;
			}
			set
			{
				if ((this._JOT_ID != value))
				{
					this._JOT_ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ISO_ID", DbType="VarChar(50)")]
		public string ISO_ID
		{
			get
			{
				return this._ISO_ID;
			}
			set
			{
				if ((this._ISO_ID != value))
				{
					this._ISO_ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BAW_ID", DbType="NVarChar(50)")]
		public string BAW_ID
		{
			get
			{
				return this._BAW_ID;
			}
			set
			{
				if ((this._BAW_ID != value))
				{
					this._BAW_ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DReportID", DbType="VarChar(50)")]
		public string DReportID
		{
			get
			{
				return this._DReportID;
			}
			set
			{
				if ((this._DReportID != value))
				{
					this._DReportID = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.View_JointInfoReportSearch")]
	public partial class View_JointInfoReportSearch
	{
		
		private string _JOT_ID;
		
		private string _ProjectId;
		
		private string _JOT_JointNo;
		
		private string _ISO_IsoNo;
		
		private string _ISO_Sheel;
		
		private string _STE_Name1;
		
		private string _STE_Name2;
		
		private string _JOT_JointDesc;
		
		private string _ISO_ID;
		
		public View_JointInfoReportSearch()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JOT_ID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string JOT_ID
		{
			get
			{
				return this._JOT_ID;
			}
			set
			{
				if ((this._JOT_ID != value))
				{
					this._JOT_ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProjectId", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string ProjectId
		{
			get
			{
				return this._ProjectId;
			}
			set
			{
				if ((this._ProjectId != value))
				{
					this._ProjectId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JOT_JointNo", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string JOT_JointNo
		{
			get
			{
				return this._JOT_JointNo;
			}
			set
			{
				if ((this._JOT_JointNo != value))
				{
					this._JOT_JointNo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ISO_IsoNo", DbType="VarChar(50)")]
		public string ISO_IsoNo
		{
			get
			{
				return this._ISO_IsoNo;
			}
			set
			{
				if ((this._ISO_IsoNo != value))
				{
					this._ISO_IsoNo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ISO_Sheel", DbType="VarChar(20)")]
		public string ISO_Sheel
		{
			get
			{
				return this._ISO_Sheel;
			}
			set
			{
				if ((this._ISO_Sheel != value))
				{
					this._ISO_Sheel = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_STE_Name1", DbType="VarChar(50)")]
		public string STE_Name1
		{
			get
			{
				return this._STE_Name1;
			}
			set
			{
				if ((this._STE_Name1 != value))
				{
					this._STE_Name1 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_STE_Name2", DbType="VarChar(50)")]
		public string STE_Name2
		{
			get
			{
				return this._STE_Name2;
			}
			set
			{
				if ((this._STE_Name2 != value))
				{
					this._STE_Name2 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JOT_JointDesc", DbType="VarChar(100)")]
		public string JOT_JointDesc
		{
			get
			{
				return this._JOT_JointDesc;
			}
			set
			{
				if ((this._JOT_JointDesc != value))
				{
					this._JOT_JointDesc = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ISO_ID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string ISO_ID
		{
			get
			{
				return this._ISO_ID;
			}
			set
			{
				if ((this._ISO_ID != value))
				{
					this._ISO_ID = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.View_PersonManageList")]
	public partial class View_PersonManageList
	{
		
		private string _WED_ID;
		
		private string _WED_Code;
		
		private string _WED_Name;
		
		private System.Nullable<bool> _WED_IfOnGuard;
		
		private string _ProjectId;
		
		private string _WED_Unit;
		
		private string _EDU_ID;
		
		private string _WED_WorkCode;
		
		private string _WED_Class;
		
		private string _WED_Remark;
		
		private System.Nullable<System.DateTime> _WED_Birthday;
		
		private string _Thickness;
		
		private string _Sizes;
		
		private string _UnitName;
		
		private string _EDU_Name;
		
		private string _WED_Sex;
		
		private string _WED_IfOnGuardName;
		
		public View_PersonManageList()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WED_ID", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string WED_ID
		{
			get
			{
				return this._WED_ID;
			}
			set
			{
				if ((this._WED_ID != value))
				{
					this._WED_ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WED_Code", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string WED_Code
		{
			get
			{
				return this._WED_Code;
			}
			set
			{
				if ((this._WED_Code != value))
				{
					this._WED_Code = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WED_Name", DbType="VarChar(40)")]
		public string WED_Name
		{
			get
			{
				return this._WED_Name;
			}
			set
			{
				if ((this._WED_Name != value))
				{
					this._WED_Name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WED_IfOnGuard", DbType="Bit")]
		public System.Nullable<bool> WED_IfOnGuard
		{
			get
			{
				return this._WED_IfOnGuard;
			}
			set
			{
				if ((this._WED_IfOnGuard != value))
				{
					this._WED_IfOnGuard = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProjectId", DbType="NVarChar(50)")]
		public string ProjectId
		{
			get
			{
				return this._ProjectId;
			}
			set
			{
				if ((this._ProjectId != value))
				{
					this._ProjectId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WED_Unit", DbType="NVarChar(50)")]
		public string WED_Unit
		{
			get
			{
				return this._WED_Unit;
			}
			set
			{
				if ((this._WED_Unit != value))
				{
					this._WED_Unit = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EDU_ID", DbType="VarChar(50)")]
		public string EDU_ID
		{
			get
			{
				return this._EDU_ID;
			}
			set
			{
				if ((this._EDU_ID != value))
				{
					this._EDU_ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WED_WorkCode", DbType="VarChar(20)")]
		public string WED_WorkCode
		{
			get
			{
				return this._WED_WorkCode;
			}
			set
			{
				if ((this._WED_WorkCode != value))
				{
					this._WED_WorkCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WED_Class", DbType="VarChar(15)")]
		public string WED_Class
		{
			get
			{
				return this._WED_Class;
			}
			set
			{
				if ((this._WED_Class != value))
				{
					this._WED_Class = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WED_Remark", DbType="VarChar(100)")]
		public string WED_Remark
		{
			get
			{
				return this._WED_Remark;
			}
			set
			{
				if ((this._WED_Remark != value))
				{
					this._WED_Remark = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WED_Birthday", DbType="DateTime")]
		public System.Nullable<System.DateTime> WED_Birthday
		{
			get
			{
				return this._WED_Birthday;
			}
			set
			{
				if ((this._WED_Birthday != value))
				{
					this._WED_Birthday = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Thickness", DbType="NVarChar(41)")]
		public string Thickness
		{
			get
			{
				return this._Thickness;
			}
			set
			{
				if ((this._Thickness != value))
				{
					this._Thickness = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sizes", DbType="NVarChar(41)")]
		public string Sizes
		{
			get
			{
				return this._Sizes;
			}
			set
			{
				if ((this._Sizes != value))
				{
					this._Sizes = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitName", DbType="NVarChar(50)")]
		public string UnitName
		{
			get
			{
				return this._UnitName;
			}
			set
			{
				if ((this._UnitName != value))
				{
					this._UnitName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EDU_Name", DbType="VarChar(20)")]
		public string EDU_Name
		{
			get
			{
				return this._EDU_Name;
			}
			set
			{
				if ((this._EDU_Name != value))
				{
					this._EDU_Name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WED_Sex", DbType="VarChar(2) NOT NULL", CanBeNull=false)]
		public string WED_Sex
		{
			get
			{
				return this._WED_Sex;
			}
			set
			{
				if ((this._WED_Sex != value))
				{
					this._WED_Sex = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WED_IfOnGuardName", DbType="VarChar(2) NOT NULL", CanBeNull=false)]
		public string WED_IfOnGuardName
		{
			get
			{
				return this._WED_IfOnGuardName;
			}
			set
			{
				if ((this._WED_IfOnGuardName != value))
				{
					this._WED_IfOnGuardName = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.View_sys_user")]
	public partial class View_sys_user
	{
		
		private string _UserId;
		
		private string _ProjectId;
		
		private string _ProjectCode;
		
		private string _ProjectName;
		
		private string _Account;
		
		private string _UserName;
		
		private string _RoleName;
		
		public View_sys_user()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					this._UserId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProjectId", DbType="NVarChar(50)")]
		public string ProjectId
		{
			get
			{
				return this._ProjectId;
			}
			set
			{
				if ((this._ProjectId != value))
				{
					this._ProjectId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProjectCode", DbType="NVarChar(20)")]
		public string ProjectCode
		{
			get
			{
				return this._ProjectCode;
			}
			set
			{
				if ((this._ProjectCode != value))
				{
					this._ProjectCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProjectName", DbType="NVarChar(100)")]
		public string ProjectName
		{
			get
			{
				return this._ProjectName;
			}
			set
			{
				if ((this._ProjectName != value))
				{
					this._ProjectName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Account", DbType="NVarChar(50)")]
		public string Account
		{
			get
			{
				return this._Account;
			}
			set
			{
				if ((this._Account != value))
				{
					this._Account = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="NVarChar(20)")]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this._UserName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleName", DbType="NVarChar(50)")]
		public string RoleName
		{
			get
			{
				return this._RoleName;
			}
			set
			{
				if ((this._RoleName != value))
				{
					this._RoleName = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.View_TestPackageManageAudit")]
	public partial class View_TestPackageManageAudit
	{
		
		private string _ISO_ID;
		
		private string _PTP_ID;
		
		private string _ISO_IsoNo;
		
		private int _IsoInfoCount;
		
		private int _IsoInfoCountT;
		
		private int _CountS;
		
		private int _CountU;
		
		private string _NDTR_Name;
		
		private string _Ratio;
		
		private string _NDTR_Rate;
		
		private System.Nullable<decimal> _RatioC;
		
		public View_TestPackageManageAudit()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ISO_ID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string ISO_ID
		{
			get
			{
				return this._ISO_ID;
			}
			set
			{
				if ((this._ISO_ID != value))
				{
					this._ISO_ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PTP_ID", DbType="VarChar(50)")]
		public string PTP_ID
		{
			get
			{
				return this._PTP_ID;
			}
			set
			{
				if ((this._PTP_ID != value))
				{
					this._PTP_ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ISO_IsoNo", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string ISO_IsoNo
		{
			get
			{
				return this._ISO_IsoNo;
			}
			set
			{
				if ((this._ISO_IsoNo != value))
				{
					this._ISO_IsoNo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsoInfoCount", DbType="Int NOT NULL")]
		public int IsoInfoCount
		{
			get
			{
				return this._IsoInfoCount;
			}
			set
			{
				if ((this._IsoInfoCount != value))
				{
					this._IsoInfoCount = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsoInfoCountT", DbType="Int NOT NULL")]
		public int IsoInfoCountT
		{
			get
			{
				return this._IsoInfoCountT;
			}
			set
			{
				if ((this._IsoInfoCountT != value))
				{
					this._IsoInfoCountT = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CountS", DbType="Int NOT NULL")]
		public int CountS
		{
			get
			{
				return this._CountS;
			}
			set
			{
				if ((this._CountS != value))
				{
					this._CountS = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CountU", DbType="Int NOT NULL")]
		public int CountU
		{
			get
			{
				return this._CountU;
			}
			set
			{
				if ((this._CountU != value))
				{
					this._CountU = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NDTR_Name", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string NDTR_Name
		{
			get
			{
				return this._NDTR_Name;
			}
			set
			{
				if ((this._NDTR_Name != value))
				{
					this._NDTR_Name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ratio", DbType="NVarChar(20)")]
		public string Ratio
		{
			get
			{
				return this._Ratio;
			}
			set
			{
				if ((this._Ratio != value))
				{
					this._Ratio = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NDTR_Rate", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string NDTR_Rate
		{
			get
			{
				return this._NDTR_Rate;
			}
			set
			{
				if ((this._NDTR_Rate != value))
				{
					this._NDTR_Rate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RatioC", DbType="Decimal(19,2)")]
		public System.Nullable<decimal> RatioC
		{
			get
			{
				return this._RatioC;
			}
			set
			{
				if ((this._RatioC != value))
				{
					this._RatioC = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.View_TestPackageSearch")]
	public partial class View_TestPackageSearch
	{
		
		private string _ISO_ID;
		
		private string _ISO_IsoNo;
		
		private string _ISO_IsoNumber;
		
		private string _ISO_Specification;
		
		private System.Nullable<decimal> _ISO_DesignPress;
		
		private System.Nullable<decimal> _ISO_DesignTemperature;
		
		private System.Nullable<decimal> _ISO_TestPress;
		
		private System.Nullable<decimal> _ISO_TestTemperature;
		
		private string _ISO_NDTClass;
		
		private string _SER_Name;
		
		private string _ProjectId;
		
		private string _BAW_ID;
		
		private string _ISC_ID;
		
		public View_TestPackageSearch()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ISO_ID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string ISO_ID
		{
			get
			{
				return this._ISO_ID;
			}
			set
			{
				if ((this._ISO_ID != value))
				{
					this._ISO_ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ISO_IsoNo", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string ISO_IsoNo
		{
			get
			{
				return this._ISO_IsoNo;
			}
			set
			{
				if ((this._ISO_IsoNo != value))
				{
					this._ISO_IsoNo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ISO_IsoNumber", DbType="VarChar(50)")]
		public string ISO_IsoNumber
		{
			get
			{
				return this._ISO_IsoNumber;
			}
			set
			{
				if ((this._ISO_IsoNumber != value))
				{
					this._ISO_IsoNumber = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ISO_Specification", DbType="VarChar(50)")]
		public string ISO_Specification
		{
			get
			{
				return this._ISO_Specification;
			}
			set
			{
				if ((this._ISO_Specification != value))
				{
					this._ISO_Specification = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ISO_DesignPress", DbType="Decimal(18,4)")]
		public System.Nullable<decimal> ISO_DesignPress
		{
			get
			{
				return this._ISO_DesignPress;
			}
			set
			{
				if ((this._ISO_DesignPress != value))
				{
					this._ISO_DesignPress = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ISO_DesignTemperature", DbType="Decimal(18,4)")]
		public System.Nullable<decimal> ISO_DesignTemperature
		{
			get
			{
				return this._ISO_DesignTemperature;
			}
			set
			{
				if ((this._ISO_DesignTemperature != value))
				{
					this._ISO_DesignTemperature = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ISO_TestPress", DbType="Decimal(18,4)")]
		public System.Nullable<decimal> ISO_TestPress
		{
			get
			{
				return this._ISO_TestPress;
			}
			set
			{
				if ((this._ISO_TestPress != value))
				{
					this._ISO_TestPress = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ISO_TestTemperature", DbType="Decimal(18,4)")]
		public System.Nullable<decimal> ISO_TestTemperature
		{
			get
			{
				return this._ISO_TestTemperature;
			}
			set
			{
				if ((this._ISO_TestTemperature != value))
				{
					this._ISO_TestTemperature = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ISO_NDTClass", DbType="VarChar(8)")]
		public string ISO_NDTClass
		{
			get
			{
				return this._ISO_NDTClass;
			}
			set
			{
				if ((this._ISO_NDTClass != value))
				{
					this._ISO_NDTClass = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SER_Name", DbType="VarChar(80)")]
		public string SER_Name
		{
			get
			{
				return this._SER_Name;
			}
			set
			{
				if ((this._SER_Name != value))
				{
					this._SER_Name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProjectId", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string ProjectId
		{
			get
			{
				return this._ProjectId;
			}
			set
			{
				if ((this._ProjectId != value))
				{
					this._ProjectId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BAW_ID", DbType="NVarChar(50)")]
		public string BAW_ID
		{
			get
			{
				return this._BAW_ID;
			}
			set
			{
				if ((this._BAW_ID != value))
				{
					this._BAW_ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ISC_ID", DbType="VarChar(50)")]
		public string ISC_ID
		{
			get
			{
				return this._ISC_ID;
			}
			set
			{
				if ((this._ISC_ID != value))
				{
					this._ISC_ID = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.View_WeldingProcedureAnalysis")]
	public partial class View_WeldingProcedureAnalysis
	{
		
		private System.Nullable<long> _Numbers;
		
		private string _ProjectName;
		
		private string _UnitName;
		
		private string _JOT_ID;
		
		private string _JOT_JointNo;
		
		private string _ISO_IsoNo;
		
		private string _Specification;
		
		private string _WME_Name;
		
		private string _Welding;
		
		private string _PWHT;
		
		private string _ProcedureCode;
		
		private string _WeldPositionCode;
		
		private string _WWI_Code;
		
		public View_WeldingProcedureAnalysis()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="numbers", Storage="_Numbers", DbType="BigInt")]
		public System.Nullable<long> Numbers
		{
			get
			{
				return this._Numbers;
			}
			set
			{
				if ((this._Numbers != value))
				{
					this._Numbers = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProjectName", DbType="NVarChar(100)")]
		public string ProjectName
		{
			get
			{
				return this._ProjectName;
			}
			set
			{
				if ((this._ProjectName != value))
				{
					this._ProjectName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitName", DbType="NVarChar(50)")]
		public string UnitName
		{
			get
			{
				return this._UnitName;
			}
			set
			{
				if ((this._UnitName != value))
				{
					this._UnitName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JOT_ID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string JOT_ID
		{
			get
			{
				return this._JOT_ID;
			}
			set
			{
				if ((this._JOT_ID != value))
				{
					this._JOT_ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JOT_JointNo", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string JOT_JointNo
		{
			get
			{
				return this._JOT_JointNo;
			}
			set
			{
				if ((this._JOT_JointNo != value))
				{
					this._JOT_JointNo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ISO_IsoNo", DbType="VarChar(50)")]
		public string ISO_IsoNo
		{
			get
			{
				return this._ISO_IsoNo;
			}
			set
			{
				if ((this._ISO_IsoNo != value))
				{
					this._ISO_IsoNo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Specification", DbType="NVarChar(50)")]
		public string Specification
		{
			get
			{
				return this._Specification;
			}
			set
			{
				if ((this._Specification != value))
				{
					this._Specification = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WME_Name", DbType="VarChar(50)")]
		public string WME_Name
		{
			get
			{
				return this._WME_Name;
			}
			set
			{
				if ((this._WME_Name != value))
				{
					this._WME_Name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Welding", DbType="NVarChar(50)")]
		public string Welding
		{
			get
			{
				return this._Welding;
			}
			set
			{
				if ((this._Welding != value))
				{
					this._Welding = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PWHT", DbType="NVarChar(50)")]
		public string PWHT
		{
			get
			{
				return this._PWHT;
			}
			set
			{
				if ((this._PWHT != value))
				{
					this._PWHT = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProcedureCode", DbType="NVarChar(50)")]
		public string ProcedureCode
		{
			get
			{
				return this._ProcedureCode;
			}
			set
			{
				if ((this._ProcedureCode != value))
				{
					this._ProcedureCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WeldPositionCode", DbType="NVarChar(50)")]
		public string WeldPositionCode
		{
			get
			{
				return this._WeldPositionCode;
			}
			set
			{
				if ((this._WeldPositionCode != value))
				{
					this._WeldPositionCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WWI_Code", DbType="NVarChar(50)")]
		public string WWI_Code
		{
			get
			{
				return this._WWI_Code;
			}
			set
			{
				if ((this._WWI_Code != value))
				{
					this._WWI_Code = value;
				}
			}
		}
	}
}
#pragma warning restore 1591
